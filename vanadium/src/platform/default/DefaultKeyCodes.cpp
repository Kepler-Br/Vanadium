#include "DefaultKeyCodes.h"
namespace Vanadium
{

namespace Keys
{

std::string toString(KeyCode arg)
{
    switch(arg)
    {
        case KeyCode::Unknown: return "Unknown";
        case KeyCode::A: return "A";
        case KeyCode::B: return "B";
        case KeyCode::C: return "C";
        case KeyCode::D: return "D";
        case KeyCode::E: return "E";
        case KeyCode::F: return "F";
        case KeyCode::G: return "G";
        case KeyCode::H: return "H";
        case KeyCode::I: return "I";
        case KeyCode::J: return "J";
        case KeyCode::K: return "K";
        case KeyCode::L: return "L";
        case KeyCode::M: return "M";
        case KeyCode::N: return "N";
        case KeyCode::O: return "O";
        case KeyCode::P: return "P";
        case KeyCode::Q: return "Q";
        case KeyCode::R: return "R";
        case KeyCode::S: return "S";
        case KeyCode::T: return "T";
        case KeyCode::U: return "U";
        case KeyCode::V: return "V";
        case KeyCode::W: return "W";
        case KeyCode::X: return "X";
        case KeyCode::Y: return "Y";
        case KeyCode::Z: return "Z";
        case KeyCode::Num_1: return "Num_1";
        case KeyCode::Num_2: return "Num_2";
        case KeyCode::Num_3: return "Num_3";
        case KeyCode::Num_4: return "Num_4";
        case KeyCode::Num_5: return "Num_5";
        case KeyCode::Num_6: return "Num_6";
        case KeyCode::Num_7: return "Num_7";
        case KeyCode::Num_8: return "Num_8";
        case KeyCode::Num_9: return "Num_9";
        case KeyCode::Num_10: return "Num_10";
        case KeyCode::Return: return "Return";
        case KeyCode::Escape: return "Escape";
        case KeyCode::Backspace: return "Backspace";
        case KeyCode::Tab: return "Tab";
        case KeyCode::Space: return "Space";
        case KeyCode::Minus: return "Minus";
        case KeyCode::Equals: return "Equals";
        case KeyCode::LeftBracket: return "LeftBracket";
        case KeyCode::RightBracket: return "RightBracket";
        case KeyCode::Backslash: return "Backslash";
        case KeyCode::Semicolon: return "Semicolon";
        case KeyCode::Apostrophe: return "Apostrophe";
        case KeyCode::Grave: return "Grave";
        case KeyCode::Comma: return "Comma";
        case KeyCode::Period: return "Period";
        case KeyCode::Slash: return "Slash";
        case KeyCode::Capslock: return "Capslock";
        case KeyCode::F1: return "F1";
        case KeyCode::F2: return "F2";
        case KeyCode::F3: return "F3";
        case KeyCode::F4: return "F4";
        case KeyCode::F5: return "F5";
        case KeyCode::F6: return "F6";
        case KeyCode::F7: return "F7";
        case KeyCode::F8: return "F8";
        case KeyCode::F9: return "F9";
        case KeyCode::F10: return "F10";
        case KeyCode::F11: return "F11";
        case KeyCode::F12: return "F12";
        case KeyCode::PrintScreen: return "PrintScreen";
        case KeyCode::ScrollLock: return "ScrollLock";
        case KeyCode::Pause: return "Pause";
        case KeyCode::Insert: return "Insert";
        case KeyCode::Home: return "Home";
        case KeyCode::PageUp: return "PageUp";
        case KeyCode::Delete: return "Delete";
        case KeyCode::End: return "End";
        case KeyCode::PageDown: return "PageDown";
        case KeyCode::Right: return "Right";
        case KeyCode::Left: return "Left";
        case KeyCode::Down: return "Down";
        case KeyCode::Up: return "Up";
        case KeyCode::NumLock: return "NumLock";
        case KeyCode::KPDivide: return "KPDivide";
        case KeyCode::KPMultiply: return "KPMultiply";
        case KeyCode::KP_Minus: return "KP_Minus";
        case KeyCode::KP_Plus: return "KP_Plus";
        case KeyCode::KP_Enter: return "KP_Enter";
        case KeyCode::KP_1: return "KP_1";
        case KeyCode::KP_2: return "KP_2";
        case KeyCode::KP_3: return "KP_3";
        case KeyCode::KP_4: return "KP_4";
        case KeyCode::KP_5: return "KP_5";
        case KeyCode::KP_6: return "KP_6";
        case KeyCode::KP_7: return "KP_7";
        case KeyCode::KP_8: return "KP_8";
        case KeyCode::KP_9: return "KP_9";
        case KeyCode::KP_0: return "KP_0";
        case KeyCode::KP_Period: return "KP_Period";
        case KeyCode::KP_Equals: return "KP_Equals";
        case KeyCode::F13: return "F13";
        case KeyCode::F14: return "F14";
        case KeyCode::F15: return "F15";
        case KeyCode::F16: return "F16";
        case KeyCode::F17: return "F17";
        case KeyCode::F18: return "F18";
        case KeyCode::F19: return "F19";
        case KeyCode::F20: return "F20";
        case KeyCode::F21: return "F21";
        case KeyCode::F22: return "F22";
        case KeyCode::F23: return "F23";
        case KeyCode::F24: return "F24";
        case KeyCode::Execute: return "Execute";
        case KeyCode::Help: return "Help";
        case KeyCode::Menu: return "Menu";
        case KeyCode::Select: return "Select";
        case KeyCode::Stop: return "Stop";
        case KeyCode::Redo: return "Redo";
        case KeyCode::Undo: return "Undo";
        case KeyCode::Cut: return "Cut";
        case KeyCode::Copy: return "Copy";
        case KeyCode::Paste: return "Paste";
        case KeyCode::Find: return "Find";
        case KeyCode::Mute: return "Mute";
        case KeyCode::VolumeUp: return "VolumeUp";
        case KeyCode::VolumeDown: return "VolumeDown";
        case KeyCode::KP_Comma: return "KP_Comma";
        case KeyCode::LCtrl: return "LCtrl";
        case KeyCode::LShift: return "LShift";
        case KeyCode::LAlt: return "LAlt";
        case KeyCode::LMeta: return "LMeta";
        case KeyCode::RCtrl: return "RCtrl";
        case KeyCode::RShift: return "RShift";
        case KeyCode::RAlt: return "RAlt";
        case KeyCode::RMeta: return "RMeta";
        default: return "God help us all.";
    }
}

KeyCode fromString(const std::string &arg)
{
    size_t hash = hashString(arg);

    switch(hash)
    {
        case hashString("A"): return KeyCode::A;
        case hashString("B"): return KeyCode::B;
        case hashString("C"): return KeyCode::C;
        case hashString("D"): return KeyCode::D;
        case hashString("E"): return KeyCode::E;
        case hashString("F"): return KeyCode::F;
        case hashString("G"): return KeyCode::G;
        case hashString("H"): return KeyCode::H;
        case hashString("I"): return KeyCode::I;
        case hashString("J"): return KeyCode::J;
        case hashString("K"): return KeyCode::K;
        case hashString("L"): return KeyCode::L;
        case hashString("M"): return KeyCode::M;
        case hashString("N"): return KeyCode::N;
        case hashString("O"): return KeyCode::O;
        case hashString("P"): return KeyCode::P;
        case hashString("Q"): return KeyCode::Q;
        case hashString("R"): return KeyCode::R;
        case hashString("S"): return KeyCode::S;
        case hashString("T"): return KeyCode::T;
        case hashString("U"): return KeyCode::U;
        case hashString("V"): return KeyCode::V;
        case hashString("W"): return KeyCode::W;
        case hashString("X"): return KeyCode::X;
        case hashString("Y"): return KeyCode::Y;
        case hashString("Z"): return KeyCode::Z;
        case hashString("Num_1"): return KeyCode::Num_1;
        case hashString("Num_2"): return KeyCode::Num_2;
        case hashString("Num_3"): return KeyCode::Num_3;
        case hashString("Num_4"): return KeyCode::Num_4;
        case hashString("Num_5"): return KeyCode::Num_5;
        case hashString("Num_6"): return KeyCode::Num_6;
        case hashString("Num_7"): return KeyCode::Num_7;
        case hashString("Num_8"): return KeyCode::Num_8;
        case hashString("Num_9"): return KeyCode::Num_9;
        case hashString("Num_10"): return KeyCode::Num_10;
        case hashString("Return"): return KeyCode::Return;
        case hashString("Escape"): return KeyCode::Escape;
        case hashString("Backspace"): return KeyCode::Backspace;
        case hashString("Tab"): return KeyCode::Tab;
        case hashString("Space"): return KeyCode::Space;
        case hashString("Minus"): return KeyCode::Minus;
        case hashString("Equals"): return KeyCode::Equals;
        case hashString("LeftBracket"): return KeyCode::LeftBracket;
        case hashString("RightBracket"): return KeyCode::RightBracket;
        case hashString("Backslash"): return KeyCode::Backslash;
        case hashString("Semicolon"): return KeyCode::Semicolon;
        case hashString("Apostrophe"): return KeyCode::Apostrophe;
        case hashString("Grave"): return KeyCode::Grave;
        case hashString("Comma"): return KeyCode::Comma;
        case hashString("Period"): return KeyCode::Period;
        case hashString("Slash"): return KeyCode::Slash;
        case hashString("Capslock"): return KeyCode::Capslock;
        case hashString("F1"): return KeyCode::F1;
        case hashString("F2"): return KeyCode::F2;
        case hashString("F3"): return KeyCode::F3;
        case hashString("F4"): return KeyCode::F4;
        case hashString("F5"): return KeyCode::F5;
        case hashString("F6"): return KeyCode::F6;
        case hashString("F7"): return KeyCode::F7;
        case hashString("F8"): return KeyCode::F8;
        case hashString("F9"): return KeyCode::F9;
        case hashString("F10"): return KeyCode::F10;
        case hashString("F11"): return KeyCode::F11;
        case hashString("F12"): return KeyCode::F12;
        case hashString("PrintScreen"): return KeyCode::PrintScreen;
        case hashString("ScrollLock"): return KeyCode::ScrollLock;
        case hashString("Pause"): return KeyCode::Pause;
        case hashString("Insert"): return KeyCode::Insert;
        case hashString("Home"): return KeyCode::Home;
        case hashString("PageUp"): return KeyCode::PageUp;
        case hashString("Delete"): return KeyCode::Delete;
        case hashString("End"): return KeyCode::End;
        case hashString("PageDown"): return KeyCode::PageDown;
        case hashString("Right"): return KeyCode::Right;
        case hashString("Left"): return KeyCode::Left;
        case hashString("Down"): return KeyCode::Down;
        case hashString("Up"): return KeyCode::Up;
        case hashString("NumLock"): return KeyCode::NumLock;
        case hashString("KPDivide"): return KeyCode::KPDivide;
        case hashString("KPMultiply"): return KeyCode::KPMultiply;
        case hashString("KP_Minus"): return KeyCode::KP_Minus;
        case hashString("KP_Plus"): return KeyCode::KP_Plus;
        case hashString("KP_Enter"): return KeyCode::KP_Enter;
        case hashString("KP_1"): return KeyCode::KP_1;
        case hashString("KP_2"): return KeyCode::KP_2;
        case hashString("KP_3"): return KeyCode::KP_3;
        case hashString("KP_4"): return KeyCode::KP_4;
        case hashString("KP_5"): return KeyCode::KP_5;
        case hashString("KP_6"): return KeyCode::KP_6;
        case hashString("KP_7"): return KeyCode::KP_7;
        case hashString("KP_8"): return KeyCode::KP_8;
        case hashString("KP_9"): return KeyCode::KP_9;
        case hashString("KP_0"): return KeyCode::KP_0;
        case hashString("KP_Period"): return KeyCode::KP_Period;
        case hashString("KP_Equals"): return KeyCode::KP_Equals;
        case hashString("F13"): return KeyCode::F13;
        case hashString("F14"): return KeyCode::F14;
        case hashString("F15"): return KeyCode::F15;
        case hashString("F16"): return KeyCode::F16;
        case hashString("F17"): return KeyCode::F17;
        case hashString("F18"): return KeyCode::F18;
        case hashString("F19"): return KeyCode::F19;
        case hashString("F20"): return KeyCode::F20;
        case hashString("F21"): return KeyCode::F21;
        case hashString("F22"): return KeyCode::F22;
        case hashString("F23"): return KeyCode::F23;
        case hashString("F24"): return KeyCode::F24;
        case hashString("Execute"): return KeyCode::Execute;
        case hashString("Help"): return KeyCode::Help;
        case hashString("Menu"): return KeyCode::Menu;
        case hashString("Select"): return KeyCode::Select;
        case hashString("Stop"): return KeyCode::Stop;
        case hashString("Redo"): return KeyCode::Redo;
        case hashString("Undo"): return KeyCode::Undo;
        case hashString("Cut"): return KeyCode::Cut;
        case hashString("Copy"): return KeyCode::Copy;
        case hashString("Paste"): return KeyCode::Paste;
        case hashString("Find"): return KeyCode::Find;
        case hashString("Mute"): return KeyCode::Mute;
        case hashString("VolumeUp"): return KeyCode::VolumeUp;
        case hashString("VolumeDown"): return KeyCode::VolumeDown;
        case hashString("KP_Comma"): return KeyCode::KP_Comma;
        case hashString("LCtrl"): return KeyCode::LCtrl;
        case hashString("LShift"): return KeyCode::LShift;
        case hashString("LAlt"): return KeyCode::LAlt;
        case hashString("LMeta"): return KeyCode::LMeta;
        case hashString("RCtrl"): return KeyCode::RCtrl;
        case hashString("RShift"): return KeyCode::RShift;
        case hashString("RAlt"): return KeyCode::RAlt;
        case hashString("RMeta"): return KeyCode::RMeta;
        default: return KeyCode::Unknown;
    }
}

}

}