{
0x56, 0x53, 0x48, 0x0b, 0x00, 0x00, 0x00, 0x00, 0x01, 0x83, 0xf2, // VSH.......ò
0xe1, 0x00, 0x00, 0xe0, 0x28, 0x00, 0x00, 0x23, 0x76, 0x65, 0x72, // á..à(..#ver
0x73, 0x69, 0x6f, 0x6e, 0x20, 0x34, 0x34, 0x30, 0x0a, 0x23, 0x64, // sion 440.#d
0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, // efine textu
0x72, 0x65, 0x32, 0x44, 0x4c, 0x6f, 0x64, 0x20, 0x20, 0x20, 0x20, // re2DLod    
0x20, 0x20, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x4c, //    textureL
0x6f, 0x64, 0x0a, 0x23, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, // od.#define 
0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x32, 0x44, 0x47, 0x72, // texture2DGr
0x61, 0x64, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x74, 0x65, 0x78, // ad      tex
0x74, 0x75, 0x72, 0x65, 0x47, 0x72, 0x61, 0x64, 0x0a, 0x23, 0x64, // tureGrad.#d
0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, // efine textu
0x72, 0x65, 0x32, 0x44, 0x50, 0x72, 0x6f, 0x6a, 0x4c, 0x6f, 0x64, // re2DProjLod
0x20, 0x20, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x50, //    textureP
0x72, 0x6f, 0x6a, 0x4c, 0x6f, 0x64, 0x0a, 0x23, 0x64, 0x65, 0x66, // rojLod.#def
0x69, 0x6e, 0x65, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, // ine texture
0x32, 0x44, 0x50, 0x72, 0x6f, 0x6a, 0x47, 0x72, 0x61, 0x64, 0x20, // 2DProjGrad 
0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x50, 0x72, 0x6f, //  texturePro
0x6a, 0x47, 0x72, 0x61, 0x64, 0x0a, 0x23, 0x64, 0x65, 0x66, 0x69, // jGrad.#defi
0x6e, 0x65, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x43, // ne textureC
0x75, 0x62, 0x65, 0x4c, 0x6f, 0x64, 0x20, 0x20, 0x20, 0x20, 0x20, // ubeLod     
0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x4c, 0x6f, 0x64, 0x0a, // textureLod.
0x23, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, 0x74, 0x65, 0x78, // #define tex
0x74, 0x75, 0x72, 0x65, 0x43, 0x75, 0x62, 0x65, 0x47, 0x72, 0x61, // tureCubeGra
0x64, 0x20, 0x20, 0x20, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, // d    textur
0x65, 0x47, 0x72, 0x61, 0x64, 0x0a, 0x23, 0x64, 0x65, 0x66, 0x69, // eGrad.#defi
0x6e, 0x65, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x33, // ne texture3
0x44, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // D          
0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x0a, 0x23, 0x64, 0x65, // texture.#de
0x66, 0x69, 0x6e, 0x65, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, // fine textur
0x65, 0x32, 0x44, 0x4c, 0x6f, 0x66, 0x4f, 0x66, 0x66, 0x73, 0x65, // e2DLofOffse
0x74, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x4c, 0x6f, // t textureLo
0x64, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x0a, 0x23, 0x64, 0x65, // dOffset.#de
0x66, 0x69, 0x6e, 0x65, 0x20, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, // fine attrib
0x75, 0x74, 0x65, 0x20, 0x69, 0x6e, 0x0a, 0x23, 0x64, 0x65, 0x66, // ute in.#def
0x69, 0x6e, 0x65, 0x20, 0x76, 0x61, 0x72, 0x79, 0x69, 0x6e, 0x67, // ine varying
0x20, 0x6f, 0x75, 0x74, 0x0a, 0x23, 0x64, 0x65, 0x66, 0x69, 0x6e, //  out.#defin
0x65, 0x20, 0x62, 0x67, 0x66, 0x78, 0x53, 0x68, 0x61, 0x64, 0x6f, // e bgfxShado
0x77, 0x32, 0x44, 0x28, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, // w2D(_sample
0x72, 0x2c, 0x20, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x29, 0x20, // r, _coord) 
0x20, 0x20, 0x20, 0x20, 0x76, 0x65, 0x63, 0x34, 0x5f, 0x73, 0x70, //     vec4_sp
0x6c, 0x61, 0x74, 0x28, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, // lat(texture
0x28, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, // (_sampler, 
0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x29, 0x29, 0x0a, 0x23, 0x64, // _coord)).#d
0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, 0x62, 0x67, 0x66, 0x78, 0x53, // efine bgfxS
0x68, 0x61, 0x64, 0x6f, 0x77, 0x32, 0x44, 0x50, 0x72, 0x6f, 0x6a, // hadow2DProj
0x28, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, // (_sampler, 
0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x29, 0x20, 0x76, 0x65, 0x63, // _coord) vec
0x34, 0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, 0x28, 0x74, 0x65, 0x78, // 4_splat(tex
0x74, 0x75, 0x72, 0x65, 0x50, 0x72, 0x6f, 0x6a, 0x28, 0x5f, 0x73, // tureProj(_s
0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x5f, 0x63, 0x6f, // ampler, _co
0x6f, 0x72, 0x64, 0x29, 0x29, 0x0a, 0x61, 0x74, 0x74, 0x72, 0x69, // ord)).attri
0x62, 0x75, 0x74, 0x65, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x61, // bute vec4 a
0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x30, 0x3b, 0x0a, 0x61, 0x74, // _color0;.at
0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x20, 0x76, 0x65, 0x63, // tribute vec
0x32, 0x20, 0x61, 0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, // 2 a_positio
0x6e, 0x3b, 0x0a, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, // n;.attribut
0x65, 0x20, 0x76, 0x65, 0x63, 0x32, 0x20, 0x61, 0x5f, 0x74, 0x65, // e vec2 a_te
0x78, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x30, 0x3b, 0x0a, 0x76, 0x61, // xcoord0;.va
0x72, 0x79, 0x69, 0x6e, 0x67, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, // rying vec4 
0x76, 0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x30, 0x3b, 0x0a, 0x76, // v_color0;.v
0x61, 0x72, 0x79, 0x69, 0x6e, 0x67, 0x20, 0x76, 0x65, 0x63, 0x32, // arying vec2
0x20, 0x76, 0x5f, 0x74, 0x65, 0x78, 0x63, 0x6f, 0x6f, 0x72, 0x64, //  v_texcoord
0x30, 0x3b, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x69, 0x6e, 0x73, // 0;.vec3 ins
0x74, 0x4d, 0x75, 0x6c, 0x28, 0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, // tMul(vec3 _
0x76, 0x65, 0x63, 0x2c, 0x20, 0x6d, 0x61, 0x74, 0x33, 0x20, 0x5f, // vec, mat3 _
0x6d, 0x74, 0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, // mtx) { retu
0x72, 0x6e, 0x20, 0x28, 0x20, 0x28, 0x5f, 0x76, 0x65, 0x63, 0x29, // rn ( (_vec)
0x20, 0x2a, 0x20, 0x28, 0x5f, 0x6d, 0x74, 0x78, 0x29, 0x20, 0x29, //  * (_mtx) )
0x3b, 0x20, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x69, 0x6e, // ; }.vec3 in
0x73, 0x74, 0x4d, 0x75, 0x6c, 0x28, 0x6d, 0x61, 0x74, 0x33, 0x20, // stMul(mat3 
0x5f, 0x6d, 0x74, 0x78, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, // _mtx, vec3 
0x5f, 0x76, 0x65, 0x63, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, // _vec) { ret
0x75, 0x72, 0x6e, 0x20, 0x28, 0x20, 0x28, 0x5f, 0x6d, 0x74, 0x78, // urn ( (_mtx
0x29, 0x20, 0x2a, 0x20, 0x28, 0x5f, 0x76, 0x65, 0x63, 0x29, 0x20, // ) * (_vec) 
0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x69, // ); }.vec4 i
0x6e, 0x73, 0x74, 0x4d, 0x75, 0x6c, 0x28, 0x76, 0x65, 0x63, 0x34, // nstMul(vec4
0x20, 0x5f, 0x76, 0x65, 0x63, 0x2c, 0x20, 0x6d, 0x61, 0x74, 0x34, //  _vec, mat4
0x20, 0x5f, 0x6d, 0x74, 0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, //  _mtx) { re
0x74, 0x75, 0x72, 0x6e, 0x20, 0x28, 0x20, 0x28, 0x5f, 0x76, 0x65, // turn ( (_ve
0x63, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x5f, 0x6d, 0x74, 0x78, 0x29, // c) * (_mtx)
0x20, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, //  ); }.vec4 
0x69, 0x6e, 0x73, 0x74, 0x4d, 0x75, 0x6c, 0x28, 0x6d, 0x61, 0x74, // instMul(mat
0x34, 0x20, 0x5f, 0x6d, 0x74, 0x78, 0x2c, 0x20, 0x76, 0x65, 0x63, // 4 _mtx, vec
0x34, 0x20, 0x5f, 0x76, 0x65, 0x63, 0x29, 0x20, 0x7b, 0x20, 0x72, // 4 _vec) { r
0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x28, 0x20, 0x28, 0x5f, 0x6d, // eturn ( (_m
0x74, 0x78, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x5f, 0x76, 0x65, 0x63, // tx) * (_vec
0x29, 0x20, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, // ) ); }.floa
0x74, 0x20, 0x72, 0x63, 0x70, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, // t rcp(float
0x20, 0x5f, 0x61, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, //  _a) { retu
0x72, 0x6e, 0x20, 0x31, 0x2e, 0x30, 0x2f, 0x5f, 0x61, 0x3b, 0x20, // rn 1.0/_a; 
0x7d, 0x0a, 0x76, 0x65, 0x63, 0x32, 0x20, 0x72, 0x63, 0x70, 0x28, // }.vec2 rcp(
0x76, 0x65, 0x63, 0x32, 0x20, 0x5f, 0x61, 0x29, 0x20, 0x7b, 0x20, // vec2 _a) { 
0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x32, // return vec2
0x28, 0x31, 0x2e, 0x30, 0x29, 0x2f, 0x5f, 0x61, 0x3b, 0x20, 0x7d, // (1.0)/_a; }
0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x72, 0x63, 0x70, 0x28, 0x76, // .vec3 rcp(v
0x65, 0x63, 0x33, 0x20, 0x5f, 0x61, 0x29, 0x20, 0x7b, 0x20, 0x72, // ec3 _a) { r
0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x33, 0x28, // eturn vec3(
0x31, 0x2e, 0x30, 0x29, 0x2f, 0x5f, 0x61, 0x3b, 0x20, 0x7d, 0x0a, // 1.0)/_a; }.
0x76, 0x65, 0x63, 0x34, 0x20, 0x72, 0x63, 0x70, 0x28, 0x76, 0x65, // vec4 rcp(ve
0x63, 0x34, 0x20, 0x5f, 0x61, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, // c4 _a) { re
0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x34, 0x28, 0x31, // turn vec4(1
0x2e, 0x30, 0x29, 0x2f, 0x5f, 0x61, 0x3b, 0x20, 0x7d, 0x0a, 0x76, // .0)/_a; }.v
0x65, 0x63, 0x32, 0x20, 0x76, 0x65, 0x63, 0x32, 0x5f, 0x73, 0x70, // ec2 vec2_sp
0x6c, 0x61, 0x74, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, // lat(float _
0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, // x) { return
0x20, 0x76, 0x65, 0x63, 0x32, 0x28, 0x5f, 0x78, 0x2c, 0x20, 0x5f, //  vec2(_x, _
0x78, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, // x); }.vec3 
0x76, 0x65, 0x63, 0x33, 0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, 0x28, // vec3_splat(
0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x78, 0x29, 0x20, 0x7b, // float _x) {
0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, //  return vec
0x33, 0x28, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x2c, 0x20, 0x5f, // 3(_x, _x, _
0x78, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, // x); }.vec4 
0x76, 0x65, 0x63, 0x34, 0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, 0x28, // vec4_splat(
0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x78, 0x29, 0x20, 0x7b, // float _x) {
0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, //  return vec
0x34, 0x28, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x2c, 0x20, 0x5f, // 4(_x, _x, _
0x78, 0x2c, 0x20, 0x5f, 0x78, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x75, // x, _x); }.u
0x76, 0x65, 0x63, 0x32, 0x20, 0x75, 0x76, 0x65, 0x63, 0x32, 0x5f, // vec2 uvec2_
0x73, 0x70, 0x6c, 0x61, 0x74, 0x28, 0x75, 0x69, 0x6e, 0x74, 0x20, // splat(uint 
0x5f, 0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, // _x) { retur
0x6e, 0x20, 0x75, 0x76, 0x65, 0x63, 0x32, 0x28, 0x5f, 0x78, 0x2c, // n uvec2(_x,
0x20, 0x5f, 0x78, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x75, 0x76, 0x65, //  _x); }.uve
0x63, 0x33, 0x20, 0x75, 0x76, 0x65, 0x63, 0x33, 0x5f, 0x73, 0x70, // c3 uvec3_sp
0x6c, 0x61, 0x74, 0x28, 0x75, 0x69, 0x6e, 0x74, 0x20, 0x5f, 0x78, // lat(uint _x
0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, // ) { return 
0x75, 0x76, 0x65, 0x63, 0x33, 0x28, 0x5f, 0x78, 0x2c, 0x20, 0x5f, // uvec3(_x, _
0x78, 0x2c, 0x20, 0x5f, 0x78, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x75, // x, _x); }.u
0x76, 0x65, 0x63, 0x34, 0x20, 0x75, 0x76, 0x65, 0x63, 0x34, 0x5f, // vec4 uvec4_
0x73, 0x70, 0x6c, 0x61, 0x74, 0x28, 0x75, 0x69, 0x6e, 0x74, 0x20, // splat(uint 
0x5f, 0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, // _x) { retur
0x6e, 0x20, 0x75, 0x76, 0x65, 0x63, 0x34, 0x28, 0x5f, 0x78, 0x2c, // n uvec4(_x,
0x20, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, //  _x, _x, _x
0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x6d, // ); }.mat4 m
0x74, 0x78, 0x46, 0x72, 0x6f, 0x6d, 0x52, 0x6f, 0x77, 0x73, 0x28, // txFromRows(
0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x30, 0x2c, 0x20, 0x76, 0x65, // vec4 _0, ve
0x63, 0x34, 0x20, 0x5f, 0x31, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, // c4 _1, vec4
0x20, 0x5f, 0x32, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, //  _2, vec4 _
0x33, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, // 3).{.return
0x20, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x73, 0x65, 0x28, //  transpose(
0x6d, 0x61, 0x74, 0x34, 0x28, 0x5f, 0x30, 0x2c, 0x20, 0x5f, 0x31, // mat4(_0, _1
0x2c, 0x20, 0x5f, 0x32, 0x2c, 0x20, 0x5f, 0x33, 0x29, 0x20, 0x29, // , _2, _3) )
0x3b, 0x0a, 0x7d, 0x0a, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x6d, 0x74, // ;.}.mat4 mt
0x78, 0x46, 0x72, 0x6f, 0x6d, 0x43, 0x6f, 0x6c, 0x73, 0x28, 0x76, // xFromCols(v
0x65, 0x63, 0x34, 0x20, 0x5f, 0x30, 0x2c, 0x20, 0x76, 0x65, 0x63, // ec4 _0, vec
0x34, 0x20, 0x5f, 0x31, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, // 4 _1, vec4 
0x5f, 0x32, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x33, // _2, vec4 _3
0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, // ).{.return 
0x6d, 0x61, 0x74, 0x34, 0x28, 0x5f, 0x30, 0x2c, 0x20, 0x5f, 0x31, // mat4(_0, _1
0x2c, 0x20, 0x5f, 0x32, 0x2c, 0x20, 0x5f, 0x33, 0x29, 0x3b, 0x0a, // , _2, _3);.
0x7d, 0x0a, 0x6d, 0x61, 0x74, 0x33, 0x20, 0x6d, 0x74, 0x78, 0x46, // }.mat3 mtxF
0x72, 0x6f, 0x6d, 0x52, 0x6f, 0x77, 0x73, 0x28, 0x76, 0x65, 0x63, // romRows(vec
0x33, 0x20, 0x5f, 0x30, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, // 3 _0, vec3 
0x5f, 0x31, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, 0x32, // _1, vec3 _2
0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, // ).{.return 
0x74, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x73, 0x65, 0x28, 0x6d, // transpose(m
0x61, 0x74, 0x33, 0x28, 0x5f, 0x30, 0x2c, 0x20, 0x5f, 0x31, 0x2c, // at3(_0, _1,
0x20, 0x5f, 0x32, 0x29, 0x20, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x6d, //  _2) );.}.m
0x61, 0x74, 0x33, 0x20, 0x6d, 0x74, 0x78, 0x46, 0x72, 0x6f, 0x6d, // at3 mtxFrom
0x43, 0x6f, 0x6c, 0x73, 0x28, 0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, // Cols(vec3 _
0x30, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, 0x31, 0x2c, // 0, vec3 _1,
0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, 0x32, 0x29, 0x0a, 0x7b, //  vec3 _2).{
0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x6d, 0x61, 0x74, // .return mat
0x33, 0x28, 0x5f, 0x30, 0x2c, 0x20, 0x5f, 0x31, 0x2c, 0x20, 0x5f, // 3(_0, _1, _
0x32, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, // 2);.}.unifo
0x72, 0x6d, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x75, 0x5f, 0x76, // rm vec4 u_v
0x69, 0x65, 0x77, 0x52, 0x65, 0x63, 0x74, 0x3b, 0x0a, 0x75, 0x6e, // iewRect;.un
0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, // iform vec4 
0x75, 0x5f, 0x76, 0x69, 0x65, 0x77, 0x54, 0x65, 0x78, 0x65, 0x6c, // u_viewTexel
0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x6d, // ;.uniform m
0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, 0x76, 0x69, 0x65, 0x77, 0x3b, // at4 u_view;
0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x6d, 0x61, // .uniform ma
0x74, 0x34, 0x20, 0x75, 0x5f, 0x69, 0x6e, 0x76, 0x56, 0x69, 0x65, // t4 u_invVie
0x77, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, // w;.uniform 
0x6d, 0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, 0x70, 0x72, 0x6f, 0x6a, // mat4 u_proj
0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x6d, // ;.uniform m
0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, 0x69, 0x6e, 0x76, 0x50, 0x72, // at4 u_invPr
0x6f, 0x6a, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, // oj;.uniform
0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, 0x76, 0x69, 0x65, //  mat4 u_vie
0x77, 0x50, 0x72, 0x6f, 0x6a, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, // wProj;.unif
0x6f, 0x72, 0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, // orm mat4 u_
0x69, 0x6e, 0x76, 0x56, 0x69, 0x65, 0x77, 0x50, 0x72, 0x6f, 0x6a, // invViewProj
0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x6d, // ;.uniform m
0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, // at4 u_model
0x5b, 0x33, 0x32, 0x5d, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, // [32];.unifo
0x72, 0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, 0x6d, // rm mat4 u_m
0x6f, 0x64, 0x65, 0x6c, 0x56, 0x69, 0x65, 0x77, 0x3b, 0x0a, 0x75, // odelView;.u
0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, // niform mat4
0x20, 0x75, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x56, 0x69, 0x65, //  u_modelVie
0x77, 0x50, 0x72, 0x6f, 0x6a, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, // wProj;.unif
0x6f, 0x72, 0x6d, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x75, 0x5f, // orm vec4 u_
0x61, 0x6c, 0x70, 0x68, 0x61, 0x52, 0x65, 0x66, 0x34, 0x3b, 0x0a, // alphaRef4;.
0x76, 0x65, 0x63, 0x34, 0x20, 0x65, 0x6e, 0x63, 0x6f, 0x64, 0x65, // vec4 encode
0x52, 0x45, 0x38, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, // RE8(float _
0x72, 0x29, 0x0a, 0x7b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, // r).{.float 
0x65, 0x78, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x20, 0x3d, 0x20, // exponent = 
0x63, 0x65, 0x69, 0x6c, 0x28, 0x6c, 0x6f, 0x67, 0x32, 0x28, 0x5f, // ceil(log2(_
0x72, 0x29, 0x20, 0x29, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, // r) );.retur
0x6e, 0x20, 0x76, 0x65, 0x63, 0x34, 0x28, 0x5f, 0x72, 0x20, 0x2f, // n vec4(_r /
0x20, 0x65, 0x78, 0x70, 0x32, 0x28, 0x65, 0x78, 0x70, 0x6f, 0x6e, //  exp2(expon
0x65, 0x6e, 0x74, 0x29, 0x0a, 0x2c, 0x20, 0x30, 0x2e, 0x30, 0x0a, // ent)., 0.0.
0x2c, 0x20, 0x30, 0x2e, 0x30, 0x0a, 0x2c, 0x20, 0x28, 0x65, 0x78, // , 0.0., (ex
0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x20, 0x2b, 0x20, 0x31, 0x32, // ponent + 12
0x38, 0x2e, 0x30, 0x29, 0x20, 0x2f, 0x20, 0x32, 0x35, 0x35, 0x2e, // 8.0) / 255.
0x30, 0x0a, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, // 0.);.}.floa
0x74, 0x20, 0x64, 0x65, 0x63, 0x6f, 0x64, 0x65, 0x52, 0x45, 0x38, // t decodeRE8
0x28, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x72, 0x65, 0x38, 0x29, // (vec4 _re8)
0x0a, 0x7b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x65, 0x78, // .{.float ex
0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x20, 0x3d, 0x20, 0x5f, 0x72, // ponent = _r
0x65, 0x38, 0x2e, 0x77, 0x20, 0x2a, 0x20, 0x32, 0x35, 0x35, 0x2e, // e8.w * 255.
0x30, 0x20, 0x2d, 0x20, 0x31, 0x32, 0x38, 0x2e, 0x30, 0x3b, 0x0a, // 0 - 128.0;.
0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x5f, 0x72, 0x65, 0x38, // return _re8
0x2e, 0x78, 0x20, 0x2a, 0x20, 0x65, 0x78, 0x70, 0x32, 0x28, 0x65, // .x * exp2(e
0x78, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x29, 0x3b, 0x0a, 0x7d, // xponent);.}
0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x65, 0x6e, 0x63, 0x6f, 0x64, // .vec4 encod
0x65, 0x52, 0x47, 0x42, 0x45, 0x38, 0x28, 0x76, 0x65, 0x63, 0x33, // eRGBE8(vec3
0x20, 0x5f, 0x72, 0x67, 0x62, 0x29, 0x0a, 0x7b, 0x0a, 0x76, 0x65, //  _rgb).{.ve
0x63, 0x34, 0x20, 0x72, 0x67, 0x62, 0x65, 0x38, 0x3b, 0x0a, 0x66, // c4 rgbe8;.f
0x6c, 0x6f, 0x61, 0x74, 0x20, 0x6d, 0x61, 0x78, 0x43, 0x6f, 0x6d, // loat maxCom
0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x20, 0x3d, 0x20, 0x6d, 0x61, // ponent = ma
0x78, 0x28, 0x6d, 0x61, 0x78, 0x28, 0x5f, 0x72, 0x67, 0x62, 0x2e, // x(max(_rgb.
0x78, 0x2c, 0x20, 0x5f, 0x72, 0x67, 0x62, 0x2e, 0x79, 0x29, 0x2c, // x, _rgb.y),
0x20, 0x5f, 0x72, 0x67, 0x62, 0x2e, 0x7a, 0x29, 0x3b, 0x0a, 0x66, //  _rgb.z);.f
0x6c, 0x6f, 0x61, 0x74, 0x20, 0x65, 0x78, 0x70, 0x6f, 0x6e, 0x65, // loat expone
0x6e, 0x74, 0x20, 0x3d, 0x20, 0x63, 0x65, 0x69, 0x6c, 0x28, 0x6c, // nt = ceil(l
0x6f, 0x67, 0x32, 0x28, 0x6d, 0x61, 0x78, 0x43, 0x6f, 0x6d, 0x70, // og2(maxComp
0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x29, 0x20, 0x29, 0x3b, 0x0a, 0x72, // onent) );.r
0x67, 0x62, 0x65, 0x38, 0x2e, 0x78, 0x79, 0x7a, 0x20, 0x3d, 0x20, // gbe8.xyz = 
0x5f, 0x72, 0x67, 0x62, 0x20, 0x2f, 0x20, 0x65, 0x78, 0x70, 0x32, // _rgb / exp2
0x28, 0x65, 0x78, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x29, 0x3b, // (exponent);
0x0a, 0x72, 0x67, 0x62, 0x65, 0x38, 0x2e, 0x77, 0x20, 0x3d, 0x20, // .rgbe8.w = 
0x28, 0x65, 0x78, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x20, 0x2b, // (exponent +
0x20, 0x31, 0x32, 0x38, 0x2e, 0x30, 0x29, 0x20, 0x2f, 0x20, 0x32, //  128.0) / 2
0x35, 0x35, 0x2e, 0x30, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, // 55.0;.retur
0x6e, 0x20, 0x72, 0x67, 0x62, 0x65, 0x38, 0x3b, 0x0a, 0x7d, 0x0a, // n rgbe8;.}.
0x76, 0x65, 0x63, 0x33, 0x20, 0x64, 0x65, 0x63, 0x6f, 0x64, 0x65, // vec3 decode
0x52, 0x47, 0x42, 0x45, 0x38, 0x28, 0x76, 0x65, 0x63, 0x34, 0x20, // RGBE8(vec4 
0x5f, 0x72, 0x67, 0x62, 0x65, 0x38, 0x29, 0x0a, 0x7b, 0x0a, 0x66, // _rgbe8).{.f
0x6c, 0x6f, 0x61, 0x74, 0x20, 0x65, 0x78, 0x70, 0x6f, 0x6e, 0x65, // loat expone
0x6e, 0x74, 0x20, 0x3d, 0x20, 0x5f, 0x72, 0x67, 0x62, 0x65, 0x38, // nt = _rgbe8
0x2e, 0x77, 0x20, 0x2a, 0x20, 0x32, 0x35, 0x35, 0x2e, 0x30, 0x20, // .w * 255.0 
0x2d, 0x20, 0x31, 0x32, 0x38, 0x2e, 0x30, 0x3b, 0x0a, 0x76, 0x65, // - 128.0;.ve
0x63, 0x33, 0x20, 0x72, 0x67, 0x62, 0x20, 0x3d, 0x20, 0x5f, 0x72, // c3 rgb = _r
0x67, 0x62, 0x65, 0x38, 0x2e, 0x78, 0x79, 0x7a, 0x20, 0x2a, 0x20, // gbe8.xyz * 
0x65, 0x78, 0x70, 0x32, 0x28, 0x65, 0x78, 0x70, 0x6f, 0x6e, 0x65, // exp2(expone
0x6e, 0x74, 0x29, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, // nt);.return
0x20, 0x72, 0x67, 0x62, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, //  rgb;.}.vec
0x33, 0x20, 0x65, 0x6e, 0x63, 0x6f, 0x64, 0x65, 0x4e, 0x6f, 0x72, // 3 encodeNor
0x6d, 0x61, 0x6c, 0x55, 0x69, 0x6e, 0x74, 0x28, 0x76, 0x65, 0x63, // malUint(vec
0x33, 0x20, 0x5f, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x29, 0x0a, // 3 _normal).
0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x5f, 0x6e, // {.return _n
0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x20, 0x2a, 0x20, 0x30, 0x2e, 0x35, // ormal * 0.5
0x20, 0x2b, 0x20, 0x30, 0x2e, 0x35, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, //  + 0.5;.}.v
0x65, 0x63, 0x33, 0x20, 0x64, 0x65, 0x63, 0x6f, 0x64, 0x65, 0x4e, // ec3 decodeN
0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x55, 0x69, 0x6e, 0x74, 0x28, 0x76, // ormalUint(v
0x65, 0x63, 0x33, 0x20, 0x5f, 0x65, 0x6e, 0x63, 0x6f, 0x64, 0x65, // ec3 _encode
0x64, 0x4e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x29, 0x0a, 0x7b, 0x0a, // dNormal).{.
0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x5f, 0x65, 0x6e, 0x63, // return _enc
0x6f, 0x64, 0x65, 0x64, 0x4e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x20, // odedNormal 
0x2a, 0x20, 0x32, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x31, 0x2e, 0x30, // * 2.0 - 1.0
0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x32, 0x20, 0x65, 0x6e, // ;.}.vec2 en
0x63, 0x6f, 0x64, 0x65, 0x4e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x53, // codeNormalS
0x70, 0x68, 0x65, 0x72, 0x65, 0x4d, 0x61, 0x70, 0x28, 0x76, 0x65, // phereMap(ve
0x63, 0x33, 0x20, 0x5f, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x29, // c3 _normal)
0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x6e, // .{.return n
0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x28, 0x5f, 0x6e, // ormalize(_n
0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x78, 0x79, 0x29, 0x20, 0x2a, // ormal.xy) *
0x20, 0x73, 0x71, 0x72, 0x74, 0x28, 0x5f, 0x6e, 0x6f, 0x72, 0x6d, //  sqrt(_norm
0x61, 0x6c, 0x2e, 0x7a, 0x20, 0x2a, 0x20, 0x30, 0x2e, 0x35, 0x20, // al.z * 0.5 
0x2b, 0x20, 0x30, 0x2e, 0x35, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, // + 0.5);.}.v
0x65, 0x63, 0x33, 0x20, 0x64, 0x65, 0x63, 0x6f, 0x64, 0x65, 0x4e, // ec3 decodeN
0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x53, 0x70, 0x68, 0x65, 0x72, 0x65, // ormalSphere
0x4d, 0x61, 0x70, 0x28, 0x76, 0x65, 0x63, 0x32, 0x20, 0x5f, 0x65, // Map(vec2 _e
0x6e, 0x63, 0x6f, 0x64, 0x65, 0x64, 0x4e, 0x6f, 0x72, 0x6d, 0x61, // ncodedNorma
0x6c, 0x29, 0x0a, 0x7b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, // l).{.float 
0x7a, 0x7a, 0x20, 0x3d, 0x20, 0x64, 0x6f, 0x74, 0x28, 0x5f, 0x65, // zz = dot(_e
0x6e, 0x63, 0x6f, 0x64, 0x65, 0x64, 0x4e, 0x6f, 0x72, 0x6d, 0x61, // ncodedNorma
0x6c, 0x2c, 0x20, 0x5f, 0x65, 0x6e, 0x63, 0x6f, 0x64, 0x65, 0x64, // l, _encoded
0x4e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x29, 0x20, 0x2a, 0x20, 0x32, // Normal) * 2
0x2e, 0x30, 0x20, 0x2d, 0x20, 0x31, 0x2e, 0x30, 0x3b, 0x0a, 0x72, // .0 - 1.0;.r
0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x33, 0x28, // eturn vec3(
0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x28, 0x5f, // normalize(_
0x65, 0x6e, 0x63, 0x6f, 0x64, 0x65, 0x64, 0x4e, 0x6f, 0x72, 0x6d, // encodedNorm
0x61, 0x6c, 0x2e, 0x78, 0x79, 0x29, 0x20, 0x2a, 0x20, 0x73, 0x71, // al.xy) * sq
0x72, 0x74, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x7a, 0x7a, // rt(1.0 - zz
0x2a, 0x7a, 0x7a, 0x29, 0x2c, 0x20, 0x7a, 0x7a, 0x29, 0x3b, 0x0a, // *zz), zz);.
0x7d, 0x0a, 0x76, 0x65, 0x63, 0x32, 0x20, 0x6f, 0x63, 0x74, 0x61, // }.vec2 octa
0x68, 0x65, 0x64, 0x72, 0x6f, 0x6e, 0x57, 0x72, 0x61, 0x70, 0x28, // hedronWrap(
0x76, 0x65, 0x63, 0x32, 0x20, 0x5f, 0x76, 0x61, 0x6c, 0x29, 0x0a, // vec2 _val).
0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x28, 0x31, // {.return (1
0x2e, 0x30, 0x20, 0x2d, 0x20, 0x61, 0x62, 0x73, 0x28, 0x5f, 0x76, // .0 - abs(_v
0x61, 0x6c, 0x2e, 0x79, 0x78, 0x29, 0x20, 0x29, 0x0a, 0x2a, 0x20, // al.yx) ).* 
0x6d, 0x69, 0x78, 0x28, 0x76, 0x65, 0x63, 0x32, 0x5f, 0x73, 0x70, // mix(vec2_sp
0x6c, 0x61, 0x74, 0x28, 0x2d, 0x31, 0x2e, 0x30, 0x29, 0x2c, 0x20, // lat(-1.0), 
0x76, 0x65, 0x63, 0x32, 0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, 0x28, // vec2_splat(
0x31, 0x2e, 0x30, 0x29, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x32, 0x28, // 1.0), vec2(
0x67, 0x72, 0x65, 0x61, 0x74, 0x65, 0x72, 0x54, 0x68, 0x61, 0x6e, // greaterThan
0x45, 0x71, 0x75, 0x61, 0x6c, 0x28, 0x5f, 0x76, 0x61, 0x6c, 0x2e, // Equal(_val.
0x78, 0x79, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x32, 0x5f, 0x73, 0x70, // xy, vec2_sp
0x6c, 0x61, 0x74, 0x28, 0x30, 0x2e, 0x30, 0x29, 0x20, 0x29, 0x20, // lat(0.0) ) 
0x29, 0x20, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x32, // ) );.}.vec2
0x20, 0x65, 0x6e, 0x63, 0x6f, 0x64, 0x65, 0x4e, 0x6f, 0x72, 0x6d, //  encodeNorm
0x61, 0x6c, 0x4f, 0x63, 0x74, 0x61, 0x68, 0x65, 0x64, 0x72, 0x6f, // alOctahedro
0x6e, 0x28, 0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, 0x6e, 0x6f, 0x72, // n(vec3 _nor
0x6d, 0x61, 0x6c, 0x29, 0x0a, 0x7b, 0x0a, 0x5f, 0x6e, 0x6f, 0x72, // mal).{._nor
0x6d, 0x61, 0x6c, 0x20, 0x2f, 0x3d, 0x20, 0x61, 0x62, 0x73, 0x28, // mal /= abs(
0x5f, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x78, 0x29, 0x20, // _normal.x) 
0x2b, 0x20, 0x61, 0x62, 0x73, 0x28, 0x5f, 0x6e, 0x6f, 0x72, 0x6d, // + abs(_norm
0x61, 0x6c, 0x2e, 0x79, 0x29, 0x20, 0x2b, 0x20, 0x61, 0x62, 0x73, // al.y) + abs
0x28, 0x5f, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x7a, 0x29, // (_normal.z)
0x3b, 0x0a, 0x5f, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x78, // ;._normal.x
0x79, 0x20, 0x3d, 0x20, 0x5f, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, // y = _normal
0x2e, 0x7a, 0x20, 0x3e, 0x3d, 0x20, 0x30, 0x2e, 0x30, 0x20, 0x3f, // .z >= 0.0 ?
0x20, 0x5f, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x78, 0x79, //  _normal.xy
0x20, 0x3a, 0x20, 0x6f, 0x63, 0x74, 0x61, 0x68, 0x65, 0x64, 0x72, //  : octahedr
0x6f, 0x6e, 0x57, 0x72, 0x61, 0x70, 0x28, 0x5f, 0x6e, 0x6f, 0x72, // onWrap(_nor
0x6d, 0x61, 0x6c, 0x2e, 0x78, 0x79, 0x29, 0x3b, 0x0a, 0x5f, 0x6e, // mal.xy);._n
0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x78, 0x79, 0x20, 0x3d, 0x20, // ormal.xy = 
0x5f, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x78, 0x79, 0x20, // _normal.xy 
0x2a, 0x20, 0x30, 0x2e, 0x35, 0x20, 0x2b, 0x20, 0x30, 0x2e, 0x35, // * 0.5 + 0.5
0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x5f, 0x6e, // ;.return _n
0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x78, 0x79, 0x3b, 0x0a, 0x7d, // ormal.xy;.}
0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x64, 0x65, 0x63, 0x6f, 0x64, // .vec3 decod
0x65, 0x4e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x4f, 0x63, 0x74, 0x61, // eNormalOcta
0x68, 0x65, 0x64, 0x72, 0x6f, 0x6e, 0x28, 0x76, 0x65, 0x63, 0x32, // hedron(vec2
0x20, 0x5f, 0x65, 0x6e, 0x63, 0x6f, 0x64, 0x65, 0x64, 0x4e, 0x6f, //  _encodedNo
0x72, 0x6d, 0x61, 0x6c, 0x29, 0x0a, 0x7b, 0x0a, 0x5f, 0x65, 0x6e, // rmal).{._en
0x63, 0x6f, 0x64, 0x65, 0x64, 0x4e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, // codedNormal
0x20, 0x3d, 0x20, 0x5f, 0x65, 0x6e, 0x63, 0x6f, 0x64, 0x65, 0x64, //  = _encoded
0x4e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x20, 0x2a, 0x20, 0x32, 0x2e, // Normal * 2.
0x30, 0x20, 0x2d, 0x20, 0x31, 0x2e, 0x30, 0x3b, 0x0a, 0x76, 0x65, // 0 - 1.0;.ve
0x63, 0x33, 0x20, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x3b, 0x0a, // c3 normal;.
0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x7a, 0x20, 0x3d, 0x20, // normal.z = 
0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x61, 0x62, 0x73, 0x28, 0x5f, // 1.0 - abs(_
0x65, 0x6e, 0x63, 0x6f, 0x64, 0x65, 0x64, 0x4e, 0x6f, 0x72, 0x6d, // encodedNorm
0x61, 0x6c, 0x2e, 0x78, 0x29, 0x20, 0x2d, 0x20, 0x61, 0x62, 0x73, // al.x) - abs
0x28, 0x5f, 0x65, 0x6e, 0x63, 0x6f, 0x64, 0x65, 0x64, 0x4e, 0x6f, // (_encodedNo
0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x79, 0x29, 0x3b, 0x0a, 0x6e, 0x6f, // rmal.y);.no
0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x78, 0x79, 0x20, 0x3d, 0x20, 0x6e, // rmal.xy = n
0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x7a, 0x20, 0x3e, 0x3d, 0x20, // ormal.z >= 
0x30, 0x2e, 0x30, 0x20, 0x3f, 0x20, 0x5f, 0x65, 0x6e, 0x63, 0x6f, // 0.0 ? _enco
0x64, 0x65, 0x64, 0x4e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x78, // dedNormal.x
0x79, 0x20, 0x3a, 0x20, 0x6f, 0x63, 0x74, 0x61, 0x68, 0x65, 0x64, // y : octahed
0x72, 0x6f, 0x6e, 0x57, 0x72, 0x61, 0x70, 0x28, 0x5f, 0x65, 0x6e, // ronWrap(_en
0x63, 0x6f, 0x64, 0x65, 0x64, 0x4e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, // codedNormal
0x2e, 0x78, 0x79, 0x29, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, // .xy);.retur
0x6e, 0x20, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x69, 0x7a, 0x65, // n normalize
0x28, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x29, 0x3b, 0x0a, 0x7d, // (normal);.}
0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x63, 0x6f, 0x6e, 0x76, 0x65, // .vec3 conve
0x72, 0x74, 0x52, 0x47, 0x42, 0x32, 0x58, 0x59, 0x5a, 0x28, 0x76, // rtRGB2XYZ(v
0x65, 0x63, 0x33, 0x20, 0x5f, 0x72, 0x67, 0x62, 0x29, 0x0a, 0x7b, // ec3 _rgb).{
0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x78, 0x79, 0x7a, 0x3b, 0x0a, // .vec3 xyz;.
0x78, 0x79, 0x7a, 0x2e, 0x78, 0x20, 0x3d, 0x20, 0x64, 0x6f, 0x74, // xyz.x = dot
0x28, 0x76, 0x65, 0x63, 0x33, 0x28, 0x30, 0x2e, 0x34, 0x31, 0x32, // (vec3(0.412
0x34, 0x35, 0x36, 0x34, 0x2c, 0x20, 0x30, 0x2e, 0x33, 0x35, 0x37, // 4564, 0.357
0x35, 0x37, 0x36, 0x31, 0x2c, 0x20, 0x30, 0x2e, 0x31, 0x38, 0x30, // 5761, 0.180
0x34, 0x33, 0x37, 0x35, 0x29, 0x2c, 0x20, 0x5f, 0x72, 0x67, 0x62, // 4375), _rgb
0x29, 0x3b, 0x0a, 0x78, 0x79, 0x7a, 0x2e, 0x79, 0x20, 0x3d, 0x20, // );.xyz.y = 
0x64, 0x6f, 0x74, 0x28, 0x76, 0x65, 0x63, 0x33, 0x28, 0x30, 0x2e, // dot(vec3(0.
0x32, 0x31, 0x32, 0x36, 0x37, 0x32, 0x39, 0x2c, 0x20, 0x30, 0x2e, // 2126729, 0.
0x37, 0x31, 0x35, 0x31, 0x35, 0x32, 0x32, 0x2c, 0x20, 0x30, 0x2e, // 7151522, 0.
0x30, 0x37, 0x32, 0x31, 0x37, 0x35, 0x30, 0x29, 0x2c, 0x20, 0x5f, // 0721750), _
0x72, 0x67, 0x62, 0x29, 0x3b, 0x0a, 0x78, 0x79, 0x7a, 0x2e, 0x7a, // rgb);.xyz.z
0x20, 0x3d, 0x20, 0x64, 0x6f, 0x74, 0x28, 0x76, 0x65, 0x63, 0x33, //  = dot(vec3
0x28, 0x30, 0x2e, 0x30, 0x31, 0x39, 0x33, 0x33, 0x33, 0x39, 0x2c, // (0.0193339,
0x20, 0x30, 0x2e, 0x31, 0x31, 0x39, 0x31, 0x39, 0x32, 0x30, 0x2c, //  0.1191920,
0x20, 0x30, 0x2e, 0x39, 0x35, 0x30, 0x33, 0x30, 0x34, 0x31, 0x29, //  0.9503041)
0x2c, 0x20, 0x5f, 0x72, 0x67, 0x62, 0x29, 0x3b, 0x0a, 0x72, 0x65, // , _rgb);.re
0x74, 0x75, 0x72, 0x6e, 0x20, 0x78, 0x79, 0x7a, 0x3b, 0x0a, 0x7d, // turn xyz;.}
0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x63, 0x6f, 0x6e, 0x76, 0x65, // .vec3 conve
0x72, 0x74, 0x58, 0x59, 0x5a, 0x32, 0x52, 0x47, 0x42, 0x28, 0x76, // rtXYZ2RGB(v
0x65, 0x63, 0x33, 0x20, 0x5f, 0x78, 0x79, 0x7a, 0x29, 0x0a, 0x7b, // ec3 _xyz).{
0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x72, 0x67, 0x62, 0x3b, 0x0a, // .vec3 rgb;.
0x72, 0x67, 0x62, 0x2e, 0x78, 0x20, 0x3d, 0x20, 0x64, 0x6f, 0x74, // rgb.x = dot
0x28, 0x76, 0x65, 0x63, 0x33, 0x28, 0x20, 0x33, 0x2e, 0x32, 0x34, // (vec3( 3.24
0x30, 0x34, 0x35, 0x34, 0x32, 0x2c, 0x20, 0x2d, 0x31, 0x2e, 0x35, // 04542, -1.5
0x33, 0x37, 0x31, 0x33, 0x38, 0x35, 0x2c, 0x20, 0x2d, 0x30, 0x2e, // 371385, -0.
0x34, 0x39, 0x38, 0x35, 0x33, 0x31, 0x34, 0x29, 0x2c, 0x20, 0x5f, // 4985314), _
0x78, 0x79, 0x7a, 0x29, 0x3b, 0x0a, 0x72, 0x67, 0x62, 0x2e, 0x79, // xyz);.rgb.y
0x20, 0x3d, 0x20, 0x64, 0x6f, 0x74, 0x28, 0x76, 0x65, 0x63, 0x33, //  = dot(vec3
0x28, 0x2d, 0x30, 0x2e, 0x39, 0x36, 0x39, 0x32, 0x36, 0x36, 0x30, // (-0.9692660
0x2c, 0x20, 0x31, 0x2e, 0x38, 0x37, 0x36, 0x30, 0x31, 0x30, 0x38, // , 1.8760108
0x2c, 0x20, 0x30, 0x2e, 0x30, 0x34, 0x31, 0x35, 0x35, 0x36, 0x30, // , 0.0415560
0x29, 0x2c, 0x20, 0x5f, 0x78, 0x79, 0x7a, 0x29, 0x3b, 0x0a, 0x72, // ), _xyz);.r
0x67, 0x62, 0x2e, 0x7a, 0x20, 0x3d, 0x20, 0x64, 0x6f, 0x74, 0x28, // gb.z = dot(
0x76, 0x65, 0x63, 0x33, 0x28, 0x20, 0x30, 0x2e, 0x30, 0x35, 0x35, // vec3( 0.055
0x36, 0x34, 0x33, 0x34, 0x2c, 0x20, 0x2d, 0x30, 0x2e, 0x32, 0x30, // 6434, -0.20
0x34, 0x30, 0x32, 0x35, 0x39, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x35, // 40259, 1.05
0x37, 0x32, 0x32, 0x35, 0x32, 0x29, 0x2c, 0x20, 0x5f, 0x78, 0x79, // 72252), _xy
0x7a, 0x29, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, // z);.return 
0x72, 0x67, 0x62, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, // rgb;.}.vec3
0x20, 0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x74, 0x58, 0x59, 0x5a, //  convertXYZ
0x32, 0x59, 0x78, 0x79, 0x28, 0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, // 2Yxy(vec3 _
0x78, 0x79, 0x7a, 0x29, 0x0a, 0x7b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, // xyz).{.floa
0x74, 0x20, 0x69, 0x6e, 0x76, 0x20, 0x3d, 0x20, 0x31, 0x2e, 0x30, // t inv = 1.0
0x2f, 0x64, 0x6f, 0x74, 0x28, 0x5f, 0x78, 0x79, 0x7a, 0x2c, 0x20, // /dot(_xyz, 
0x76, 0x65, 0x63, 0x33, 0x28, 0x31, 0x2e, 0x30, 0x2c, 0x20, 0x31, // vec3(1.0, 1
0x2e, 0x30, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x20, 0x29, 0x3b, // .0, 1.0) );
0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, // .return vec
0x33, 0x28, 0x5f, 0x78, 0x79, 0x7a, 0x2e, 0x79, 0x2c, 0x20, 0x5f, // 3(_xyz.y, _
0x78, 0x79, 0x7a, 0x2e, 0x78, 0x2a, 0x69, 0x6e, 0x76, 0x2c, 0x20, // xyz.x*inv, 
0x5f, 0x78, 0x79, 0x7a, 0x2e, 0x79, 0x2a, 0x69, 0x6e, 0x76, 0x29, // _xyz.y*inv)
0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x63, 0x6f, // ;.}.vec3 co
0x6e, 0x76, 0x65, 0x72, 0x74, 0x59, 0x78, 0x79, 0x32, 0x58, 0x59, // nvertYxy2XY
0x5a, 0x28, 0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, 0x59, 0x78, 0x79, // Z(vec3 _Yxy
0x29, 0x0a, 0x7b, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x78, 0x79, // ).{.vec3 xy
0x7a, 0x3b, 0x0a, 0x78, 0x79, 0x7a, 0x2e, 0x78, 0x20, 0x3d, 0x20, // z;.xyz.x = 
0x5f, 0x59, 0x78, 0x79, 0x2e, 0x78, 0x2a, 0x5f, 0x59, 0x78, 0x79, // _Yxy.x*_Yxy
0x2e, 0x79, 0x2f, 0x5f, 0x59, 0x78, 0x79, 0x2e, 0x7a, 0x3b, 0x0a, // .y/_Yxy.z;.
0x78, 0x79, 0x7a, 0x2e, 0x79, 0x20, 0x3d, 0x20, 0x5f, 0x59, 0x78, // xyz.y = _Yx
0x79, 0x2e, 0x78, 0x3b, 0x0a, 0x78, 0x79, 0x7a, 0x2e, 0x7a, 0x20, // y.x;.xyz.z 
0x3d, 0x20, 0x5f, 0x59, 0x78, 0x79, 0x2e, 0x78, 0x2a, 0x28, 0x31, // = _Yxy.x*(1
0x2e, 0x30, 0x20, 0x2d, 0x20, 0x5f, 0x59, 0x78, 0x79, 0x2e, 0x79, // .0 - _Yxy.y
0x20, 0x2d, 0x20, 0x5f, 0x59, 0x78, 0x79, 0x2e, 0x7a, 0x29, 0x2f, //  - _Yxy.z)/
0x5f, 0x59, 0x78, 0x79, 0x2e, 0x7a, 0x3b, 0x0a, 0x72, 0x65, 0x74, // _Yxy.z;.ret
0x75, 0x72, 0x6e, 0x20, 0x78, 0x79, 0x7a, 0x3b, 0x0a, 0x7d, 0x0a, // urn xyz;.}.
0x76, 0x65, 0x63, 0x33, 0x20, 0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72, // vec3 conver
0x74, 0x52, 0x47, 0x42, 0x32, 0x59, 0x78, 0x79, 0x28, 0x76, 0x65, // tRGB2Yxy(ve
0x63, 0x33, 0x20, 0x5f, 0x72, 0x67, 0x62, 0x29, 0x0a, 0x7b, 0x0a, // c3 _rgb).{.
0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x63, 0x6f, 0x6e, 0x76, // return conv
0x65, 0x72, 0x74, 0x58, 0x59, 0x5a, 0x32, 0x59, 0x78, 0x79, 0x28, // ertXYZ2Yxy(
0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x74, 0x52, 0x47, 0x42, 0x32, // convertRGB2
0x58, 0x59, 0x5a, 0x28, 0x5f, 0x72, 0x67, 0x62, 0x29, 0x20, 0x29, // XYZ(_rgb) )
0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x63, 0x6f, // ;.}.vec3 co
0x6e, 0x76, 0x65, 0x72, 0x74, 0x59, 0x78, 0x79, 0x32, 0x52, 0x47, // nvertYxy2RG
0x42, 0x28, 0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, 0x59, 0x78, 0x79, // B(vec3 _Yxy
0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, // ).{.return 
0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x74, 0x58, 0x59, 0x5a, 0x32, // convertXYZ2
0x52, 0x47, 0x42, 0x28, 0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x74, // RGB(convert
0x59, 0x78, 0x79, 0x32, 0x58, 0x59, 0x5a, 0x28, 0x5f, 0x59, 0x78, // Yxy2XYZ(_Yx
0x79, 0x29, 0x20, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, // y) );.}.vec
0x33, 0x20, 0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x74, 0x52, 0x47, // 3 convertRG
0x42, 0x32, 0x59, 0x75, 0x76, 0x28, 0x76, 0x65, 0x63, 0x33, 0x20, // B2Yuv(vec3 
0x5f, 0x72, 0x67, 0x62, 0x29, 0x0a, 0x7b, 0x0a, 0x76, 0x65, 0x63, // _rgb).{.vec
0x33, 0x20, 0x79, 0x75, 0x76, 0x3b, 0x0a, 0x79, 0x75, 0x76, 0x2e, // 3 yuv;.yuv.
0x78, 0x20, 0x3d, 0x20, 0x64, 0x6f, 0x74, 0x28, 0x5f, 0x72, 0x67, // x = dot(_rg
0x62, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, 0x28, 0x30, 0x2e, 0x32, // b, vec3(0.2
0x39, 0x39, 0x2c, 0x20, 0x30, 0x2e, 0x35, 0x38, 0x37, 0x2c, 0x20, // 99, 0.587, 
0x30, 0x2e, 0x31, 0x31, 0x34, 0x29, 0x20, 0x29, 0x3b, 0x0a, 0x79, // 0.114) );.y
0x75, 0x76, 0x2e, 0x79, 0x20, 0x3d, 0x20, 0x28, 0x5f, 0x72, 0x67, // uv.y = (_rg
0x62, 0x2e, 0x78, 0x20, 0x2d, 0x20, 0x79, 0x75, 0x76, 0x2e, 0x78, // b.x - yuv.x
0x29, 0x2a, 0x30, 0x2e, 0x37, 0x31, 0x33, 0x20, 0x2b, 0x20, 0x30, // )*0.713 + 0
0x2e, 0x35, 0x3b, 0x0a, 0x79, 0x75, 0x76, 0x2e, 0x7a, 0x20, 0x3d, // .5;.yuv.z =
0x20, 0x28, 0x5f, 0x72, 0x67, 0x62, 0x2e, 0x7a, 0x20, 0x2d, 0x20, //  (_rgb.z - 
0x79, 0x75, 0x76, 0x2e, 0x78, 0x29, 0x2a, 0x30, 0x2e, 0x35, 0x36, // yuv.x)*0.56
0x34, 0x20, 0x2b, 0x20, 0x30, 0x2e, 0x35, 0x3b, 0x0a, 0x72, 0x65, // 4 + 0.5;.re
0x74, 0x75, 0x72, 0x6e, 0x20, 0x79, 0x75, 0x76, 0x3b, 0x0a, 0x7d, // turn yuv;.}
0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x63, 0x6f, 0x6e, 0x76, 0x65, // .vec3 conve
0x72, 0x74, 0x59, 0x75, 0x76, 0x32, 0x52, 0x47, 0x42, 0x28, 0x76, // rtYuv2RGB(v
0x65, 0x63, 0x33, 0x20, 0x5f, 0x79, 0x75, 0x76, 0x29, 0x0a, 0x7b, // ec3 _yuv).{
0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x72, 0x67, 0x62, 0x3b, 0x0a, // .vec3 rgb;.
0x72, 0x67, 0x62, 0x2e, 0x78, 0x20, 0x3d, 0x20, 0x5f, 0x79, 0x75, // rgb.x = _yu
0x76, 0x2e, 0x78, 0x20, 0x2b, 0x20, 0x31, 0x2e, 0x34, 0x30, 0x33, // v.x + 1.403
0x2a, 0x28, 0x5f, 0x79, 0x75, 0x76, 0x2e, 0x79, 0x2d, 0x30, 0x2e, // *(_yuv.y-0.
0x35, 0x29, 0x3b, 0x0a, 0x72, 0x67, 0x62, 0x2e, 0x79, 0x20, 0x3d, // 5);.rgb.y =
0x20, 0x5f, 0x79, 0x75, 0x76, 0x2e, 0x78, 0x20, 0x2d, 0x20, 0x30, //  _yuv.x - 0
0x2e, 0x33, 0x34, 0x34, 0x2a, 0x28, 0x5f, 0x79, 0x75, 0x76, 0x2e, // .344*(_yuv.
0x79, 0x2d, 0x30, 0x2e, 0x35, 0x29, 0x20, 0x2d, 0x20, 0x30, 0x2e, // y-0.5) - 0.
0x37, 0x31, 0x34, 0x2a, 0x28, 0x5f, 0x79, 0x75, 0x76, 0x2e, 0x7a, // 714*(_yuv.z
0x2d, 0x30, 0x2e, 0x35, 0x29, 0x3b, 0x0a, 0x72, 0x67, 0x62, 0x2e, // -0.5);.rgb.
0x7a, 0x20, 0x3d, 0x20, 0x5f, 0x79, 0x75, 0x76, 0x2e, 0x78, 0x20, // z = _yuv.x 
0x2b, 0x20, 0x31, 0x2e, 0x37, 0x37, 0x33, 0x2a, 0x28, 0x5f, 0x79, // + 1.773*(_y
0x75, 0x76, 0x2e, 0x7a, 0x2d, 0x30, 0x2e, 0x35, 0x29, 0x3b, 0x0a, // uv.z-0.5);.
0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x72, 0x67, 0x62, 0x3b, // return rgb;
0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x63, 0x6f, 0x6e, // .}.vec3 con
0x76, 0x65, 0x72, 0x74, 0x52, 0x47, 0x42, 0x32, 0x59, 0x49, 0x51, // vertRGB2YIQ
0x28, 0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, 0x72, 0x67, 0x62, 0x29, // (vec3 _rgb)
0x0a, 0x7b, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x79, 0x69, 0x71, // .{.vec3 yiq
0x3b, 0x0a, 0x79, 0x69, 0x71, 0x2e, 0x78, 0x20, 0x3d, 0x20, 0x64, // ;.yiq.x = d
0x6f, 0x74, 0x28, 0x76, 0x65, 0x63, 0x33, 0x28, 0x30, 0x2e, 0x32, // ot(vec3(0.2
0x39, 0x39, 0x2c, 0x20, 0x30, 0x2e, 0x35, 0x38, 0x37, 0x2c, 0x20, // 99, 0.587, 
0x30, 0x2e, 0x31, 0x31, 0x34, 0x20, 0x29, 0x2c, 0x20, 0x5f, 0x72, // 0.114 ), _r
0x67, 0x62, 0x29, 0x3b, 0x0a, 0x79, 0x69, 0x71, 0x2e, 0x79, 0x20, // gb);.yiq.y 
0x3d, 0x20, 0x64, 0x6f, 0x74, 0x28, 0x76, 0x65, 0x63, 0x33, 0x28, // = dot(vec3(
0x30, 0x2e, 0x35, 0x39, 0x35, 0x37, 0x31, 0x36, 0x2c, 0x20, 0x2d, // 0.595716, -
0x30, 0x2e, 0x32, 0x37, 0x34, 0x34, 0x35, 0x33, 0x2c, 0x20, 0x2d, // 0.274453, -
0x30, 0x2e, 0x33, 0x32, 0x31, 0x32, 0x36, 0x33, 0x29, 0x2c, 0x20, // 0.321263), 
0x5f, 0x72, 0x67, 0x62, 0x29, 0x3b, 0x0a, 0x79, 0x69, 0x71, 0x2e, // _rgb);.yiq.
0x7a, 0x20, 0x3d, 0x20, 0x64, 0x6f, 0x74, 0x28, 0x76, 0x65, 0x63, // z = dot(vec
0x33, 0x28, 0x30, 0x2e, 0x32, 0x31, 0x31, 0x34, 0x35, 0x36, 0x2c, // 3(0.211456,
0x20, 0x2d, 0x30, 0x2e, 0x35, 0x32, 0x32, 0x35, 0x39, 0x31, 0x2c, //  -0.522591,
0x20, 0x30, 0x2e, 0x33, 0x31, 0x31, 0x31, 0x33, 0x35, 0x29, 0x2c, //  0.311135),
0x20, 0x5f, 0x72, 0x67, 0x62, 0x29, 0x3b, 0x0a, 0x72, 0x65, 0x74, //  _rgb);.ret
0x75, 0x72, 0x6e, 0x20, 0x79, 0x69, 0x71, 0x3b, 0x0a, 0x7d, 0x0a, // urn yiq;.}.
0x76, 0x65, 0x63, 0x33, 0x20, 0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72, // vec3 conver
0x74, 0x59, 0x49, 0x51, 0x32, 0x52, 0x47, 0x42, 0x28, 0x76, 0x65, // tYIQ2RGB(ve
0x63, 0x33, 0x20, 0x5f, 0x79, 0x69, 0x71, 0x29, 0x0a, 0x7b, 0x0a, // c3 _yiq).{.
0x76, 0x65, 0x63, 0x33, 0x20, 0x72, 0x67, 0x62, 0x3b, 0x0a, 0x72, // vec3 rgb;.r
0x67, 0x62, 0x2e, 0x78, 0x20, 0x3d, 0x20, 0x64, 0x6f, 0x74, 0x28, // gb.x = dot(
0x76, 0x65, 0x63, 0x33, 0x28, 0x31, 0x2e, 0x30, 0x2c, 0x20, 0x30, // vec3(1.0, 0
0x2e, 0x39, 0x35, 0x36, 0x33, 0x2c, 0x20, 0x30, 0x2e, 0x36, 0x32, // .9563, 0.62
0x31, 0x30, 0x29, 0x2c, 0x20, 0x5f, 0x79, 0x69, 0x71, 0x29, 0x3b, // 10), _yiq);
0x0a, 0x72, 0x67, 0x62, 0x2e, 0x79, 0x20, 0x3d, 0x20, 0x64, 0x6f, // .rgb.y = do
0x74, 0x28, 0x76, 0x65, 0x63, 0x33, 0x28, 0x31, 0x2e, 0x30, 0x2c, // t(vec3(1.0,
0x20, 0x2d, 0x30, 0x2e, 0x32, 0x37, 0x32, 0x31, 0x2c, 0x20, 0x2d, //  -0.2721, -
0x30, 0x2e, 0x36, 0x34, 0x37, 0x34, 0x29, 0x2c, 0x20, 0x5f, 0x79, // 0.6474), _y
0x69, 0x71, 0x29, 0x3b, 0x0a, 0x72, 0x67, 0x62, 0x2e, 0x7a, 0x20, // iq);.rgb.z 
0x3d, 0x20, 0x64, 0x6f, 0x74, 0x28, 0x76, 0x65, 0x63, 0x33, 0x28, // = dot(vec3(
0x31, 0x2e, 0x30, 0x2c, 0x20, 0x2d, 0x31, 0x2e, 0x31, 0x30, 0x37, // 1.0, -1.107
0x30, 0x2c, 0x20, 0x31, 0x2e, 0x37, 0x30, 0x34, 0x36, 0x29, 0x2c, // 0, 1.7046),
0x20, 0x5f, 0x79, 0x69, 0x71, 0x29, 0x3b, 0x0a, 0x72, 0x65, 0x74, //  _yiq);.ret
0x75, 0x72, 0x6e, 0x20, 0x72, 0x67, 0x62, 0x3b, 0x0a, 0x7d, 0x0a, // urn rgb;.}.
0x76, 0x65, 0x63, 0x33, 0x20, 0x74, 0x6f, 0x4c, 0x69, 0x6e, 0x65, // vec3 toLine
0x61, 0x72, 0x28, 0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, 0x72, 0x67, // ar(vec3 _rg
0x62, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, // b).{.return
0x20, 0x70, 0x6f, 0x77, 0x28, 0x61, 0x62, 0x73, 0x28, 0x5f, 0x72, //  pow(abs(_r
0x67, 0x62, 0x29, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, 0x5f, 0x73, // gb), vec3_s
0x70, 0x6c, 0x61, 0x74, 0x28, 0x32, 0x2e, 0x32, 0x29, 0x20, 0x29, // plat(2.2) )
0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x74, 0x6f, // ;.}.vec4 to
0x4c, 0x69, 0x6e, 0x65, 0x61, 0x72, 0x28, 0x76, 0x65, 0x63, 0x34, // Linear(vec4
0x20, 0x5f, 0x72, 0x67, 0x62, 0x61, 0x29, 0x0a, 0x7b, 0x0a, 0x72, //  _rgba).{.r
0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x34, 0x28, // eturn vec4(
0x74, 0x6f, 0x4c, 0x69, 0x6e, 0x65, 0x61, 0x72, 0x28, 0x5f, 0x72, // toLinear(_r
0x67, 0x62, 0x61, 0x2e, 0x78, 0x79, 0x7a, 0x29, 0x2c, 0x20, 0x5f, // gba.xyz), _
0x72, 0x67, 0x62, 0x61, 0x2e, 0x77, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, // rgba.w);.}.
0x76, 0x65, 0x63, 0x33, 0x20, 0x74, 0x6f, 0x4c, 0x69, 0x6e, 0x65, // vec3 toLine
0x61, 0x72, 0x41, 0x63, 0x63, 0x75, 0x72, 0x61, 0x74, 0x65, 0x28, // arAccurate(
0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, 0x72, 0x67, 0x62, 0x29, 0x0a, // vec3 _rgb).
0x7b, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x6c, 0x6f, 0x20, 0x3d, // {.vec3 lo =
0x20, 0x5f, 0x72, 0x67, 0x62, 0x20, 0x2f, 0x20, 0x31, 0x32, 0x2e, //  _rgb / 12.
0x39, 0x32, 0x3b, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x68, 0x69, // 92;.vec3 hi
0x20, 0x3d, 0x20, 0x70, 0x6f, 0x77, 0x28, 0x20, 0x28, 0x5f, 0x72, //  = pow( (_r
0x67, 0x62, 0x20, 0x2b, 0x20, 0x30, 0x2e, 0x30, 0x35, 0x35, 0x29, // gb + 0.055)
0x20, 0x2f, 0x20, 0x31, 0x2e, 0x30, 0x35, 0x35, 0x2c, 0x20, 0x76, //  / 1.055, v
0x65, 0x63, 0x33, 0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, 0x28, 0x32, // ec3_splat(2
0x2e, 0x34, 0x29, 0x20, 0x29, 0x3b, 0x0a, 0x76, 0x65, 0x63, 0x33, // .4) );.vec3
0x20, 0x72, 0x67, 0x62, 0x20, 0x3d, 0x20, 0x6d, 0x69, 0x78, 0x28, //  rgb = mix(
0x68, 0x69, 0x2c, 0x20, 0x6c, 0x6f, 0x2c, 0x20, 0x76, 0x65, 0x63, // hi, lo, vec
0x33, 0x28, 0x6c, 0x65, 0x73, 0x73, 0x54, 0x68, 0x61, 0x6e, 0x45, // 3(lessThanE
0x71, 0x75, 0x61, 0x6c, 0x28, 0x5f, 0x72, 0x67, 0x62, 0x2c, 0x20, // qual(_rgb, 
0x76, 0x65, 0x63, 0x33, 0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, 0x28, // vec3_splat(
0x30, 0x2e, 0x30, 0x34, 0x30, 0x34, 0x35, 0x29, 0x20, 0x29, 0x20, // 0.04045) ) 
0x29, 0x20, 0x29, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, // ) );.return
0x20, 0x72, 0x67, 0x62, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, //  rgb;.}.vec
0x34, 0x20, 0x74, 0x6f, 0x4c, 0x69, 0x6e, 0x65, 0x61, 0x72, 0x41, // 4 toLinearA
0x63, 0x63, 0x75, 0x72, 0x61, 0x74, 0x65, 0x28, 0x76, 0x65, 0x63, // ccurate(vec
0x34, 0x20, 0x5f, 0x72, 0x67, 0x62, 0x61, 0x29, 0x0a, 0x7b, 0x0a, // 4 _rgba).{.
0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x34, // return vec4
0x28, 0x74, 0x6f, 0x4c, 0x69, 0x6e, 0x65, 0x61, 0x72, 0x41, 0x63, // (toLinearAc
0x63, 0x75, 0x72, 0x61, 0x74, 0x65, 0x28, 0x5f, 0x72, 0x67, 0x62, // curate(_rgb
0x61, 0x2e, 0x78, 0x79, 0x7a, 0x29, 0x2c, 0x20, 0x5f, 0x72, 0x67, // a.xyz), _rg
0x62, 0x61, 0x2e, 0x77, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, // ba.w);.}.fl
0x6f, 0x61, 0x74, 0x20, 0x74, 0x6f, 0x47, 0x61, 0x6d, 0x6d, 0x61, // oat toGamma
0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x72, 0x29, 0x0a, // (float _r).
0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x70, 0x6f, // {.return po
0x77, 0x28, 0x61, 0x62, 0x73, 0x28, 0x5f, 0x72, 0x29, 0x2c, 0x20, // w(abs(_r), 
0x31, 0x2e, 0x30, 0x2f, 0x32, 0x2e, 0x32, 0x29, 0x3b, 0x0a, 0x7d, // 1.0/2.2);.}
0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x74, 0x6f, 0x47, 0x61, 0x6d, // .vec3 toGam
0x6d, 0x61, 0x28, 0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, 0x72, 0x67, // ma(vec3 _rg
0x62, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, // b).{.return
0x20, 0x70, 0x6f, 0x77, 0x28, 0x61, 0x62, 0x73, 0x28, 0x5f, 0x72, //  pow(abs(_r
0x67, 0x62, 0x29, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, 0x5f, 0x73, // gb), vec3_s
0x70, 0x6c, 0x61, 0x74, 0x28, 0x31, 0x2e, 0x30, 0x2f, 0x32, 0x2e, // plat(1.0/2.
0x32, 0x29, 0x20, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, // 2) );.}.vec
0x34, 0x20, 0x74, 0x6f, 0x47, 0x61, 0x6d, 0x6d, 0x61, 0x28, 0x76, // 4 toGamma(v
0x65, 0x63, 0x34, 0x20, 0x5f, 0x72, 0x67, 0x62, 0x61, 0x29, 0x0a, // ec4 _rgba).
0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, // {.return ve
0x63, 0x34, 0x28, 0x74, 0x6f, 0x47, 0x61, 0x6d, 0x6d, 0x61, 0x28, // c4(toGamma(
0x5f, 0x72, 0x67, 0x62, 0x61, 0x2e, 0x78, 0x79, 0x7a, 0x29, 0x2c, // _rgba.xyz),
0x20, 0x5f, 0x72, 0x67, 0x62, 0x61, 0x2e, 0x77, 0x29, 0x3b, 0x0a, //  _rgba.w);.
0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x74, 0x6f, 0x47, 0x61, // }.vec3 toGa
0x6d, 0x6d, 0x61, 0x41, 0x63, 0x63, 0x75, 0x72, 0x61, 0x74, 0x65, // mmaAccurate
0x28, 0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, 0x72, 0x67, 0x62, 0x29, // (vec3 _rgb)
0x0a, 0x7b, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x6c, 0x6f, 0x20, // .{.vec3 lo 
0x3d, 0x20, 0x5f, 0x72, 0x67, 0x62, 0x20, 0x2a, 0x20, 0x31, 0x32, // = _rgb * 12
0x2e, 0x39, 0x32, 0x3b, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x68, // .92;.vec3 h
0x69, 0x20, 0x3d, 0x20, 0x70, 0x6f, 0x77, 0x28, 0x61, 0x62, 0x73, // i = pow(abs
0x28, 0x5f, 0x72, 0x67, 0x62, 0x29, 0x2c, 0x20, 0x76, 0x65, 0x63, // (_rgb), vec
0x33, 0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, 0x28, 0x31, 0x2e, 0x30, // 3_splat(1.0
0x2f, 0x32, 0x2e, 0x34, 0x29, 0x20, 0x29, 0x20, 0x2a, 0x20, 0x31, // /2.4) ) * 1
0x2e, 0x30, 0x35, 0x35, 0x20, 0x2d, 0x20, 0x30, 0x2e, 0x30, 0x35, // .055 - 0.05
0x35, 0x3b, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x72, 0x67, 0x62, // 5;.vec3 rgb
0x20, 0x3d, 0x20, 0x6d, 0x69, 0x78, 0x28, 0x68, 0x69, 0x2c, 0x20, //  = mix(hi, 
0x6c, 0x6f, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, 0x28, 0x6c, 0x65, // lo, vec3(le
0x73, 0x73, 0x54, 0x68, 0x61, 0x6e, 0x45, 0x71, 0x75, 0x61, 0x6c, // ssThanEqual
0x28, 0x5f, 0x72, 0x67, 0x62, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, // (_rgb, vec3
0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, 0x28, 0x30, 0x2e, 0x30, 0x30, // _splat(0.00
0x33, 0x31, 0x33, 0x30, 0x38, 0x29, 0x20, 0x29, 0x20, 0x29, 0x20, // 31308) ) ) 
0x29, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x72, // );.return r
0x67, 0x62, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, // gb;.}.vec4 
0x74, 0x6f, 0x47, 0x61, 0x6d, 0x6d, 0x61, 0x41, 0x63, 0x63, 0x75, // toGammaAccu
0x72, 0x61, 0x74, 0x65, 0x28, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, // rate(vec4 _
0x72, 0x67, 0x62, 0x61, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, // rgba).{.ret
0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x34, 0x28, 0x74, 0x6f, // urn vec4(to
0x47, 0x61, 0x6d, 0x6d, 0x61, 0x41, 0x63, 0x63, 0x75, 0x72, 0x61, // GammaAccura
0x74, 0x65, 0x28, 0x5f, 0x72, 0x67, 0x62, 0x61, 0x2e, 0x78, 0x79, // te(_rgba.xy
0x7a, 0x29, 0x2c, 0x20, 0x5f, 0x72, 0x67, 0x62, 0x61, 0x2e, 0x77, // z), _rgba.w
0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x74, // );.}.vec3 t
0x6f, 0x52, 0x65, 0x69, 0x6e, 0x68, 0x61, 0x72, 0x64, 0x28, 0x76, // oReinhard(v
0x65, 0x63, 0x33, 0x20, 0x5f, 0x72, 0x67, 0x62, 0x29, 0x0a, 0x7b, // ec3 _rgb).{
0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x74, 0x6f, 0x47, // .return toG
0x61, 0x6d, 0x6d, 0x61, 0x28, 0x5f, 0x72, 0x67, 0x62, 0x2f, 0x28, // amma(_rgb/(
0x5f, 0x72, 0x67, 0x62, 0x2b, 0x76, 0x65, 0x63, 0x33, 0x5f, 0x73, // _rgb+vec3_s
0x70, 0x6c, 0x61, 0x74, 0x28, 0x31, 0x2e, 0x30, 0x29, 0x20, 0x29, // plat(1.0) )
0x20, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, //  );.}.vec4 
0x74, 0x6f, 0x52, 0x65, 0x69, 0x6e, 0x68, 0x61, 0x72, 0x64, 0x28, // toReinhard(
0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x72, 0x67, 0x62, 0x61, 0x29, // vec4 _rgba)
0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, // .{.return v
0x65, 0x63, 0x34, 0x28, 0x74, 0x6f, 0x52, 0x65, 0x69, 0x6e, 0x68, // ec4(toReinh
0x61, 0x72, 0x64, 0x28, 0x5f, 0x72, 0x67, 0x62, 0x61, 0x2e, 0x78, // ard(_rgba.x
0x79, 0x7a, 0x29, 0x2c, 0x20, 0x5f, 0x72, 0x67, 0x62, 0x61, 0x2e, // yz), _rgba.
0x77, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, // w);.}.vec3 
0x74, 0x6f, 0x46, 0x69, 0x6c, 0x6d, 0x69, 0x63, 0x28, 0x76, 0x65, // toFilmic(ve
0x63, 0x33, 0x20, 0x5f, 0x72, 0x67, 0x62, 0x29, 0x0a, 0x7b, 0x0a, // c3 _rgb).{.
0x5f, 0x72, 0x67, 0x62, 0x20, 0x3d, 0x20, 0x6d, 0x61, 0x78, 0x28, // _rgb = max(
0x76, 0x65, 0x63, 0x33, 0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, 0x28, // vec3_splat(
0x30, 0x2e, 0x30, 0x29, 0x2c, 0x20, 0x5f, 0x72, 0x67, 0x62, 0x20, // 0.0), _rgb 
0x2d, 0x20, 0x30, 0x2e, 0x30, 0x30, 0x34, 0x29, 0x3b, 0x0a, 0x5f, // - 0.004);._
0x72, 0x67, 0x62, 0x20, 0x3d, 0x20, 0x28, 0x5f, 0x72, 0x67, 0x62, // rgb = (_rgb
0x2a, 0x28, 0x36, 0x2e, 0x32, 0x2a, 0x5f, 0x72, 0x67, 0x62, 0x20, // *(6.2*_rgb 
0x2b, 0x20, 0x30, 0x2e, 0x35, 0x29, 0x20, 0x29, 0x20, 0x2f, 0x20, // + 0.5) ) / 
0x28, 0x5f, 0x72, 0x67, 0x62, 0x2a, 0x28, 0x36, 0x2e, 0x32, 0x2a, // (_rgb*(6.2*
0x5f, 0x72, 0x67, 0x62, 0x20, 0x2b, 0x20, 0x31, 0x2e, 0x37, 0x29, // _rgb + 1.7)
0x20, 0x2b, 0x20, 0x30, 0x2e, 0x30, 0x36, 0x29, 0x3b, 0x0a, 0x72, //  + 0.06);.r
0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x5f, 0x72, 0x67, 0x62, 0x3b, // eturn _rgb;
0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x74, 0x6f, 0x46, // .}.vec4 toF
0x69, 0x6c, 0x6d, 0x69, 0x63, 0x28, 0x76, 0x65, 0x63, 0x34, 0x20, // ilmic(vec4 
0x5f, 0x72, 0x67, 0x62, 0x61, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, // _rgba).{.re
0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x34, 0x28, 0x74, // turn vec4(t
0x6f, 0x46, 0x69, 0x6c, 0x6d, 0x69, 0x63, 0x28, 0x5f, 0x72, 0x67, // oFilmic(_rg
0x62, 0x61, 0x2e, 0x78, 0x79, 0x7a, 0x29, 0x2c, 0x20, 0x5f, 0x72, // ba.xyz), _r
0x67, 0x62, 0x61, 0x2e, 0x77, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, // gba.w);.}.v
0x65, 0x63, 0x33, 0x20, 0x74, 0x6f, 0x41, 0x63, 0x65, 0x73, 0x46, // ec3 toAcesF
0x69, 0x6c, 0x6d, 0x69, 0x63, 0x28, 0x76, 0x65, 0x63, 0x33, 0x20, // ilmic(vec3 
0x5f, 0x72, 0x67, 0x62, 0x29, 0x0a, 0x7b, 0x0a, 0x66, 0x6c, 0x6f, // _rgb).{.flo
0x61, 0x74, 0x20, 0x61, 0x61, 0x20, 0x3d, 0x20, 0x32, 0x2e, 0x35, // at aa = 2.5
0x31, 0x66, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x62, // 1f;.float b
0x62, 0x20, 0x3d, 0x20, 0x30, 0x2e, 0x30, 0x33, 0x66, 0x3b, 0x0a, // b = 0.03f;.
0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x63, 0x63, 0x20, 0x3d, 0x20, // float cc = 
0x32, 0x2e, 0x34, 0x33, 0x66, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, // 2.43f;.floa
0x74, 0x20, 0x64, 0x64, 0x20, 0x3d, 0x20, 0x30, 0x2e, 0x35, 0x39, // t dd = 0.59
0x66, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x65, 0x65, // f;.float ee
0x20, 0x3d, 0x20, 0x30, 0x2e, 0x31, 0x34, 0x66, 0x3b, 0x0a, 0x72, //  = 0.14f;.r
0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x63, 0x6c, 0x61, 0x6d, 0x70, // eturn clamp
0x28, 0x28, 0x5f, 0x72, 0x67, 0x62, 0x2a, 0x28, 0x61, 0x61, 0x2a, // ((_rgb*(aa*
0x5f, 0x72, 0x67, 0x62, 0x20, 0x2b, 0x20, 0x62, 0x62, 0x29, 0x20, // _rgb + bb) 
0x29, 0x2f, 0x28, 0x5f, 0x72, 0x67, 0x62, 0x2a, 0x28, 0x63, 0x63, // )/(_rgb*(cc
0x2a, 0x5f, 0x72, 0x67, 0x62, 0x20, 0x2b, 0x20, 0x64, 0x64, 0x29, // *_rgb + dd)
0x20, 0x2b, 0x20, 0x65, 0x65, 0x29, 0x20, 0x2c, 0x20, 0x30, 0x2e, //  + ee) , 0.
0x30, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, // 0, 1.0);.}.
0x76, 0x65, 0x63, 0x34, 0x20, 0x74, 0x6f, 0x41, 0x63, 0x65, 0x73, // vec4 toAces
0x46, 0x69, 0x6c, 0x6d, 0x69, 0x63, 0x28, 0x76, 0x65, 0x63, 0x34, // Filmic(vec4
0x20, 0x5f, 0x72, 0x67, 0x62, 0x61, 0x29, 0x0a, 0x7b, 0x0a, 0x72, //  _rgba).{.r
0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x34, 0x28, // eturn vec4(
0x74, 0x6f, 0x41, 0x63, 0x65, 0x73, 0x46, 0x69, 0x6c, 0x6d, 0x69, // toAcesFilmi
0x63, 0x28, 0x5f, 0x72, 0x67, 0x62, 0x61, 0x2e, 0x78, 0x79, 0x7a, // c(_rgba.xyz
0x29, 0x2c, 0x20, 0x5f, 0x72, 0x67, 0x62, 0x61, 0x2e, 0x77, 0x29, // ), _rgba.w)
0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x6c, 0x75, // ;.}.vec3 lu
0x6d, 0x61, 0x28, 0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, 0x72, 0x67, // ma(vec3 _rg
0x62, 0x29, 0x0a, 0x7b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, // b).{.float 
0x79, 0x79, 0x20, 0x3d, 0x20, 0x64, 0x6f, 0x74, 0x28, 0x76, 0x65, // yy = dot(ve
0x63, 0x33, 0x28, 0x30, 0x2e, 0x32, 0x31, 0x32, 0x36, 0x37, 0x32, // c3(0.212672
0x39, 0x2c, 0x20, 0x30, 0x2e, 0x37, 0x31, 0x35, 0x31, 0x35, 0x32, // 9, 0.715152
0x32, 0x2c, 0x20, 0x30, 0x2e, 0x30, 0x37, 0x32, 0x31, 0x37, 0x35, // 2, 0.072175
0x30, 0x29, 0x2c, 0x20, 0x5f, 0x72, 0x67, 0x62, 0x29, 0x3b, 0x0a, // 0), _rgb);.
0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x33, // return vec3
0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, 0x28, 0x79, 0x79, 0x29, 0x3b, // _splat(yy);
0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x6c, 0x75, 0x6d, // .}.vec4 lum
0x61, 0x28, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x72, 0x67, 0x62, // a(vec4 _rgb
0x61, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, // a).{.return
0x20, 0x76, 0x65, 0x63, 0x34, 0x28, 0x6c, 0x75, 0x6d, 0x61, 0x28, //  vec4(luma(
0x5f, 0x72, 0x67, 0x62, 0x61, 0x2e, 0x78, 0x79, 0x7a, 0x29, 0x2c, // _rgba.xyz),
0x20, 0x5f, 0x72, 0x67, 0x62, 0x61, 0x2e, 0x77, 0x29, 0x3b, 0x0a, //  _rgba.w);.
0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x63, 0x6f, 0x6e, 0x53, // }.vec3 conS
0x61, 0x74, 0x42, 0x72, 0x69, 0x28, 0x76, 0x65, 0x63, 0x33, 0x20, // atBri(vec3 
0x5f, 0x72, 0x67, 0x62, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, // _rgb, vec3 
0x5f, 0x63, 0x73, 0x62, 0x29, 0x0a, 0x7b, 0x0a, 0x76, 0x65, 0x63, // _csb).{.vec
0x33, 0x20, 0x72, 0x67, 0x62, 0x20, 0x3d, 0x20, 0x5f, 0x72, 0x67, // 3 rgb = _rg
0x62, 0x20, 0x2a, 0x20, 0x5f, 0x63, 0x73, 0x62, 0x2e, 0x7a, 0x3b, // b * _csb.z;
0x0a, 0x72, 0x67, 0x62, 0x20, 0x3d, 0x20, 0x6d, 0x69, 0x78, 0x28, // .rgb = mix(
0x6c, 0x75, 0x6d, 0x61, 0x28, 0x72, 0x67, 0x62, 0x29, 0x2c, 0x20, // luma(rgb), 
0x72, 0x67, 0x62, 0x2c, 0x20, 0x5f, 0x63, 0x73, 0x62, 0x2e, 0x79, // rgb, _csb.y
0x29, 0x3b, 0x0a, 0x72, 0x67, 0x62, 0x20, 0x3d, 0x20, 0x6d, 0x69, // );.rgb = mi
0x78, 0x28, 0x76, 0x65, 0x63, 0x33, 0x5f, 0x73, 0x70, 0x6c, 0x61, // x(vec3_spla
0x74, 0x28, 0x30, 0x2e, 0x35, 0x29, 0x2c, 0x20, 0x72, 0x67, 0x62, // t(0.5), rgb
0x2c, 0x20, 0x5f, 0x63, 0x73, 0x62, 0x2e, 0x78, 0x29, 0x3b, 0x0a, // , _csb.x);.
0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x72, 0x67, 0x62, 0x3b, // return rgb;
0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, 0x6f, 0x6e, // .}.vec4 con
0x53, 0x61, 0x74, 0x42, 0x72, 0x69, 0x28, 0x76, 0x65, 0x63, 0x34, // SatBri(vec4
0x20, 0x5f, 0x72, 0x67, 0x62, 0x61, 0x2c, 0x20, 0x76, 0x65, 0x63, //  _rgba, vec
0x33, 0x20, 0x5f, 0x63, 0x73, 0x62, 0x29, 0x0a, 0x7b, 0x0a, 0x72, // 3 _csb).{.r
0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x34, 0x28, // eturn vec4(
0x63, 0x6f, 0x6e, 0x53, 0x61, 0x74, 0x42, 0x72, 0x69, 0x28, 0x5f, // conSatBri(_
0x72, 0x67, 0x62, 0x61, 0x2e, 0x78, 0x79, 0x7a, 0x2c, 0x20, 0x5f, // rgba.xyz, _
0x63, 0x73, 0x62, 0x29, 0x2c, 0x20, 0x5f, 0x72, 0x67, 0x62, 0x61, // csb), _rgba
0x2e, 0x77, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, // .w);.}.vec3
0x20, 0x70, 0x6f, 0x73, 0x74, 0x65, 0x72, 0x69, 0x7a, 0x65, 0x28, //  posterize(
0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, 0x72, 0x67, 0x62, 0x2c, 0x20, // vec3 _rgb, 
0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x6e, 0x75, 0x6d, 0x43, // float _numC
0x6f, 0x6c, 0x6f, 0x72, 0x73, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, // olors).{.re
0x74, 0x75, 0x72, 0x6e, 0x20, 0x66, 0x6c, 0x6f, 0x6f, 0x72, 0x28, // turn floor(
0x5f, 0x72, 0x67, 0x62, 0x2a, 0x5f, 0x6e, 0x75, 0x6d, 0x43, 0x6f, // _rgb*_numCo
0x6c, 0x6f, 0x72, 0x73, 0x29, 0x20, 0x2f, 0x20, 0x5f, 0x6e, 0x75, // lors) / _nu
0x6d, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x73, 0x3b, 0x0a, 0x7d, 0x0a, // mColors;.}.
0x76, 0x65, 0x63, 0x34, 0x20, 0x70, 0x6f, 0x73, 0x74, 0x65, 0x72, // vec4 poster
0x69, 0x7a, 0x65, 0x28, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x72, // ize(vec4 _r
0x67, 0x62, 0x61, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, // gba, float 
0x5f, 0x6e, 0x75, 0x6d, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x73, 0x29, // _numColors)
0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, // .{.return v
0x65, 0x63, 0x34, 0x28, 0x70, 0x6f, 0x73, 0x74, 0x65, 0x72, 0x69, // ec4(posteri
0x7a, 0x65, 0x28, 0x5f, 0x72, 0x67, 0x62, 0x61, 0x2e, 0x78, 0x79, // ze(_rgba.xy
0x7a, 0x2c, 0x20, 0x5f, 0x6e, 0x75, 0x6d, 0x43, 0x6f, 0x6c, 0x6f, // z, _numColo
0x72, 0x73, 0x29, 0x2c, 0x20, 0x5f, 0x72, 0x67, 0x62, 0x61, 0x2e, // rs), _rgba.
0x77, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, // w);.}.vec3 
0x73, 0x65, 0x70, 0x69, 0x61, 0x28, 0x76, 0x65, 0x63, 0x33, 0x20, // sepia(vec3 
0x5f, 0x72, 0x67, 0x62, 0x29, 0x0a, 0x7b, 0x0a, 0x76, 0x65, 0x63, // _rgb).{.vec
0x33, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x3b, 0x0a, 0x63, 0x6f, // 3 color;.co
0x6c, 0x6f, 0x72, 0x2e, 0x78, 0x20, 0x3d, 0x20, 0x64, 0x6f, 0x74, // lor.x = dot
0x28, 0x5f, 0x72, 0x67, 0x62, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, // (_rgb, vec3
0x28, 0x30, 0x2e, 0x33, 0x39, 0x33, 0x2c, 0x20, 0x30, 0x2e, 0x37, // (0.393, 0.7
0x36, 0x39, 0x2c, 0x20, 0x30, 0x2e, 0x31, 0x38, 0x39, 0x29, 0x20, // 69, 0.189) 
0x29, 0x3b, 0x0a, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2e, 0x79, 0x20, // );.color.y 
0x3d, 0x20, 0x64, 0x6f, 0x74, 0x28, 0x5f, 0x72, 0x67, 0x62, 0x2c, // = dot(_rgb,
0x20, 0x76, 0x65, 0x63, 0x33, 0x28, 0x30, 0x2e, 0x33, 0x34, 0x39, //  vec3(0.349
0x2c, 0x20, 0x30, 0x2e, 0x36, 0x38, 0x36, 0x2c, 0x20, 0x30, 0x2e, // , 0.686, 0.
0x31, 0x36, 0x38, 0x29, 0x20, 0x29, 0x3b, 0x0a, 0x63, 0x6f, 0x6c, // 168) );.col
0x6f, 0x72, 0x2e, 0x7a, 0x20, 0x3d, 0x20, 0x64, 0x6f, 0x74, 0x28, // or.z = dot(
0x5f, 0x72, 0x67, 0x62, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, 0x28, // _rgb, vec3(
0x30, 0x2e, 0x32, 0x37, 0x32, 0x2c, 0x20, 0x30, 0x2e, 0x35, 0x33, // 0.272, 0.53
0x34, 0x2c, 0x20, 0x30, 0x2e, 0x31, 0x33, 0x31, 0x29, 0x20, 0x29, // 4, 0.131) )
0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x63, 0x6f, // ;.return co
0x6c, 0x6f, 0x72, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x34, // lor;.}.vec4
0x20, 0x73, 0x65, 0x70, 0x69, 0x61, 0x28, 0x76, 0x65, 0x63, 0x34, //  sepia(vec4
0x20, 0x5f, 0x72, 0x67, 0x62, 0x61, 0x29, 0x0a, 0x7b, 0x0a, 0x72, //  _rgba).{.r
0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x34, 0x28, // eturn vec4(
0x73, 0x65, 0x70, 0x69, 0x61, 0x28, 0x5f, 0x72, 0x67, 0x62, 0x61, // sepia(_rgba
0x2e, 0x78, 0x79, 0x7a, 0x29, 0x2c, 0x20, 0x5f, 0x72, 0x67, 0x62, // .xyz), _rgb
0x61, 0x2e, 0x77, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, // a.w);.}.vec
0x33, 0x20, 0x62, 0x6c, 0x65, 0x6e, 0x64, 0x4f, 0x76, 0x65, 0x72, // 3 blendOver
0x6c, 0x61, 0x79, 0x28, 0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, 0x62, // lay(vec3 _b
0x61, 0x73, 0x65, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, // ase, vec3 _
0x62, 0x6c, 0x65, 0x6e, 0x64, 0x29, 0x0a, 0x7b, 0x0a, 0x76, 0x65, // blend).{.ve
0x63, 0x33, 0x20, 0x6c, 0x74, 0x20, 0x3d, 0x20, 0x32, 0x2e, 0x30, // c3 lt = 2.0
0x20, 0x2a, 0x20, 0x5f, 0x62, 0x61, 0x73, 0x65, 0x20, 0x2a, 0x20, //  * _base * 
0x5f, 0x62, 0x6c, 0x65, 0x6e, 0x64, 0x3b, 0x0a, 0x76, 0x65, 0x63, // _blend;.vec
0x33, 0x20, 0x67, 0x74, 0x65, 0x20, 0x3d, 0x20, 0x31, 0x2e, 0x30, // 3 gte = 1.0
0x20, 0x2d, 0x20, 0x32, 0x2e, 0x30, 0x20, 0x2a, 0x20, 0x28, 0x31, //  - 2.0 * (1
0x2e, 0x30, 0x20, 0x2d, 0x20, 0x5f, 0x62, 0x61, 0x73, 0x65, 0x29, // .0 - _base)
0x20, 0x2a, 0x20, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x5f, //  * (1.0 - _
0x62, 0x6c, 0x65, 0x6e, 0x64, 0x29, 0x3b, 0x0a, 0x72, 0x65, 0x74, // blend);.ret
0x75, 0x72, 0x6e, 0x20, 0x6d, 0x69, 0x78, 0x28, 0x6c, 0x74, 0x2c, // urn mix(lt,
0x20, 0x67, 0x74, 0x65, 0x2c, 0x20, 0x73, 0x74, 0x65, 0x70, 0x28, //  gte, step(
0x76, 0x65, 0x63, 0x33, 0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, 0x28, // vec3_splat(
0x30, 0x2e, 0x35, 0x29, 0x2c, 0x20, 0x5f, 0x62, 0x61, 0x73, 0x65, // 0.5), _base
0x29, 0x20, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x34, // ) );.}.vec4
0x20, 0x62, 0x6c, 0x65, 0x6e, 0x64, 0x4f, 0x76, 0x65, 0x72, 0x6c, //  blendOverl
0x61, 0x79, 0x28, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x62, 0x61, // ay(vec4 _ba
0x73, 0x65, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x62, // se, vec4 _b
0x6c, 0x65, 0x6e, 0x64, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, // lend).{.ret
0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x34, 0x28, 0x62, 0x6c, // urn vec4(bl
0x65, 0x6e, 0x64, 0x4f, 0x76, 0x65, 0x72, 0x6c, 0x61, 0x79, 0x28, // endOverlay(
0x5f, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x78, 0x79, 0x7a, 0x2c, 0x20, // _base.xyz, 
0x5f, 0x62, 0x6c, 0x65, 0x6e, 0x64, 0x2e, 0x78, 0x79, 0x7a, 0x29, // _blend.xyz)
0x2c, 0x20, 0x5f, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x77, 0x29, 0x3b, // , _base.w);
0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x61, 0x64, 0x6a, // .}.vec3 adj
0x75, 0x73, 0x74, 0x48, 0x75, 0x65, 0x28, 0x76, 0x65, 0x63, 0x33, // ustHue(vec3
0x20, 0x5f, 0x72, 0x67, 0x62, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, //  _rgb, floa
0x74, 0x20, 0x5f, 0x68, 0x75, 0x65, 0x29, 0x0a, 0x7b, 0x0a, 0x76, // t _hue).{.v
0x65, 0x63, 0x33, 0x20, 0x79, 0x69, 0x71, 0x20, 0x3d, 0x20, 0x63, // ec3 yiq = c
0x6f, 0x6e, 0x76, 0x65, 0x72, 0x74, 0x52, 0x47, 0x42, 0x32, 0x59, // onvertRGB2Y
0x49, 0x51, 0x28, 0x5f, 0x72, 0x67, 0x62, 0x29, 0x3b, 0x0a, 0x66, // IQ(_rgb);.f
0x6c, 0x6f, 0x61, 0x74, 0x20, 0x61, 0x6e, 0x67, 0x6c, 0x65, 0x20, // loat angle 
0x3d, 0x20, 0x5f, 0x68, 0x75, 0x65, 0x20, 0x2b, 0x20, 0x61, 0x74, // = _hue + at
0x61, 0x6e, 0x28, 0x79, 0x69, 0x71, 0x2e, 0x7a, 0x2c, 0x20, 0x79, // an(yiq.z, y
0x69, 0x71, 0x2e, 0x79, 0x29, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, // iq.y);.floa
0x74, 0x20, 0x6c, 0x65, 0x6e, 0x20, 0x3d, 0x20, 0x6c, 0x65, 0x6e, // t len = len
0x67, 0x74, 0x68, 0x28, 0x79, 0x69, 0x71, 0x2e, 0x79, 0x7a, 0x29, // gth(yiq.yz)
0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x63, 0x6f, // ;.return co
0x6e, 0x76, 0x65, 0x72, 0x74, 0x59, 0x49, 0x51, 0x32, 0x52, 0x47, // nvertYIQ2RG
0x42, 0x28, 0x76, 0x65, 0x63, 0x33, 0x28, 0x79, 0x69, 0x71, 0x2e, // B(vec3(yiq.
0x78, 0x2c, 0x20, 0x6c, 0x65, 0x6e, 0x2a, 0x63, 0x6f, 0x73, 0x28, // x, len*cos(
0x61, 0x6e, 0x67, 0x6c, 0x65, 0x29, 0x2c, 0x20, 0x6c, 0x65, 0x6e, // angle), len
0x2a, 0x73, 0x69, 0x6e, 0x28, 0x61, 0x6e, 0x67, 0x6c, 0x65, 0x29, // *sin(angle)
0x20, 0x29, 0x20, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, //  ) );.}.vec
0x34, 0x20, 0x70, 0x61, 0x63, 0x6b, 0x46, 0x6c, 0x6f, 0x61, 0x74, // 4 packFloat
0x54, 0x6f, 0x52, 0x67, 0x62, 0x61, 0x28, 0x66, 0x6c, 0x6f, 0x61, // ToRgba(floa
0x74, 0x20, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x29, 0x0a, 0x7b, // t _value).{
0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x34, // .const vec4
0x20, 0x73, 0x68, 0x69, 0x66, 0x74, 0x20, 0x3d, 0x20, 0x76, 0x65, //  shift = ve
0x63, 0x34, 0x28, 0x32, 0x35, 0x36, 0x20, 0x2a, 0x20, 0x32, 0x35, // c4(256 * 25
0x36, 0x20, 0x2a, 0x20, 0x32, 0x35, 0x36, 0x2c, 0x20, 0x32, 0x35, // 6 * 256, 25
0x36, 0x20, 0x2a, 0x20, 0x32, 0x35, 0x36, 0x2c, 0x20, 0x32, 0x35, // 6 * 256, 25
0x36, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x3b, 0x0a, 0x63, 0x6f, // 6, 1.0);.co
0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x6d, 0x61, // nst vec4 ma
0x73, 0x6b, 0x20, 0x3d, 0x20, 0x76, 0x65, 0x63, 0x34, 0x28, 0x30, // sk = vec4(0
0x2c, 0x20, 0x31, 0x2e, 0x30, 0x20, 0x2f, 0x20, 0x32, 0x35, 0x36, // , 1.0 / 256
0x2e, 0x30, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x20, 0x2f, 0x20, 0x32, // .0, 1.0 / 2
0x35, 0x36, 0x2e, 0x30, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x20, 0x2f, // 56.0, 1.0 /
0x20, 0x32, 0x35, 0x36, 0x2e, 0x30, 0x29, 0x3b, 0x0a, 0x76, 0x65, //  256.0);.ve
0x63, 0x34, 0x20, 0x63, 0x6f, 0x6d, 0x70, 0x20, 0x3d, 0x20, 0x66, // c4 comp = f
0x72, 0x61, 0x63, 0x74, 0x28, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, // ract(_value
0x20, 0x2a, 0x20, 0x73, 0x68, 0x69, 0x66, 0x74, 0x29, 0x3b, 0x0a, //  * shift);.
0x63, 0x6f, 0x6d, 0x70, 0x20, 0x2d, 0x3d, 0x20, 0x63, 0x6f, 0x6d, // comp -= com
0x70, 0x2e, 0x78, 0x78, 0x79, 0x7a, 0x20, 0x2a, 0x20, 0x6d, 0x61, // p.xxyz * ma
0x73, 0x6b, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, // sk;.return 
0x63, 0x6f, 0x6d, 0x70, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, // comp;.}.flo
0x61, 0x74, 0x20, 0x75, 0x6e, 0x70, 0x61, 0x63, 0x6b, 0x52, 0x67, // at unpackRg
0x62, 0x61, 0x54, 0x6f, 0x46, 0x6c, 0x6f, 0x61, 0x74, 0x28, 0x76, // baToFloat(v
0x65, 0x63, 0x34, 0x20, 0x5f, 0x72, 0x67, 0x62, 0x61, 0x29, 0x0a, // ec4 _rgba).
0x7b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, // {.const vec
0x34, 0x20, 0x73, 0x68, 0x69, 0x66, 0x74, 0x20, 0x3d, 0x20, 0x76, // 4 shift = v
0x65, 0x63, 0x34, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2f, 0x20, 0x28, // ec4(1.0 / (
0x32, 0x35, 0x36, 0x2e, 0x30, 0x20, 0x2a, 0x20, 0x32, 0x35, 0x36, // 256.0 * 256
0x2e, 0x30, 0x20, 0x2a, 0x20, 0x32, 0x35, 0x36, 0x2e, 0x30, 0x29, // .0 * 256.0)
0x2c, 0x20, 0x31, 0x2e, 0x30, 0x20, 0x2f, 0x20, 0x28, 0x32, 0x35, // , 1.0 / (25
0x36, 0x2e, 0x30, 0x20, 0x2a, 0x20, 0x32, 0x35, 0x36, 0x2e, 0x30, // 6.0 * 256.0
0x29, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x20, 0x2f, 0x20, 0x32, 0x35, // ), 1.0 / 25
0x36, 0x2e, 0x30, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x3b, 0x0a, // 6.0, 1.0);.
0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x64, 0x6f, 0x74, 0x28, // return dot(
0x5f, 0x72, 0x67, 0x62, 0x61, 0x2c, 0x20, 0x73, 0x68, 0x69, 0x66, // _rgba, shif
0x74, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x32, 0x20, // t);.}.vec2 
0x70, 0x61, 0x63, 0x6b, 0x48, 0x61, 0x6c, 0x66, 0x46, 0x6c, 0x6f, // packHalfFlo
0x61, 0x74, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x76, // at(float _v
0x61, 0x6c, 0x75, 0x65, 0x29, 0x0a, 0x7b, 0x0a, 0x63, 0x6f, 0x6e, // alue).{.con
0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x32, 0x20, 0x73, 0x68, 0x69, // st vec2 shi
0x66, 0x74, 0x20, 0x3d, 0x20, 0x76, 0x65, 0x63, 0x32, 0x28, 0x32, // ft = vec2(2
0x35, 0x36, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x3b, 0x0a, 0x63, // 56, 1.0);.c
0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x32, 0x20, 0x6d, // onst vec2 m
0x61, 0x73, 0x6b, 0x20, 0x3d, 0x20, 0x76, 0x65, 0x63, 0x32, 0x28, // ask = vec2(
0x30, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x20, 0x2f, 0x20, 0x32, 0x35, // 0, 1.0 / 25
0x36, 0x2e, 0x30, 0x29, 0x3b, 0x0a, 0x76, 0x65, 0x63, 0x32, 0x20, // 6.0);.vec2 
0x63, 0x6f, 0x6d, 0x70, 0x20, 0x3d, 0x20, 0x66, 0x72, 0x61, 0x63, // comp = frac
0x74, 0x28, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x20, 0x2a, 0x20, // t(_value * 
0x73, 0x68, 0x69, 0x66, 0x74, 0x29, 0x3b, 0x0a, 0x63, 0x6f, 0x6d, // shift);.com
0x70, 0x20, 0x2d, 0x3d, 0x20, 0x63, 0x6f, 0x6d, 0x70, 0x2e, 0x78, // p -= comp.x
0x78, 0x20, 0x2a, 0x20, 0x6d, 0x61, 0x73, 0x6b, 0x3b, 0x0a, 0x72, // x * mask;.r
0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x63, 0x6f, 0x6d, 0x70, 0x3b, // eturn comp;
0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x75, 0x6e, // .}.float un
0x70, 0x61, 0x63, 0x6b, 0x48, 0x61, 0x6c, 0x66, 0x46, 0x6c, 0x6f, // packHalfFlo
0x61, 0x74, 0x28, 0x76, 0x65, 0x63, 0x32, 0x20, 0x5f, 0x72, 0x67, // at(vec2 _rg
0x29, 0x0a, 0x7b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, // ).{.const v
0x65, 0x63, 0x32, 0x20, 0x73, 0x68, 0x69, 0x66, 0x74, 0x20, 0x3d, // ec2 shift =
0x20, 0x76, 0x65, 0x63, 0x32, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2f, //  vec2(1.0 /
0x20, 0x32, 0x35, 0x36, 0x2e, 0x30, 0x2c, 0x20, 0x31, 0x2e, 0x30, //  256.0, 1.0
0x29, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x64, // );.return d
0x6f, 0x74, 0x28, 0x5f, 0x72, 0x67, 0x2c, 0x20, 0x73, 0x68, 0x69, // ot(_rg, shi
0x66, 0x74, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, // ft);.}.floa
0x74, 0x20, 0x72, 0x61, 0x6e, 0x64, 0x6f, 0x6d, 0x28, 0x76, 0x65, // t random(ve
0x63, 0x32, 0x20, 0x5f, 0x75, 0x76, 0x29, 0x0a, 0x7b, 0x0a, 0x72, // c2 _uv).{.r
0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x66, 0x72, 0x61, 0x63, 0x74, // eturn fract
0x28, 0x73, 0x69, 0x6e, 0x28, 0x64, 0x6f, 0x74, 0x28, 0x5f, 0x75, // (sin(dot(_u
0x76, 0x2e, 0x78, 0x79, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x32, 0x28, // v.xy, vec2(
0x31, 0x32, 0x2e, 0x39, 0x38, 0x39, 0x38, 0x2c, 0x20, 0x37, 0x38, // 12.9898, 78
0x2e, 0x32, 0x33, 0x33, 0x29, 0x20, 0x29, 0x20, 0x29, 0x20, 0x2a, // .233) ) ) *
0x20, 0x34, 0x33, 0x37, 0x35, 0x38, 0x2e, 0x35, 0x34, 0x35, 0x33, //  43758.5453
0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x66, // );.}.vec3 f
0x69, 0x78, 0x43, 0x75, 0x62, 0x65, 0x4c, 0x6f, 0x6f, 0x6b, 0x75, // ixCubeLooku
0x70, 0x28, 0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, 0x76, 0x2c, 0x20, // p(vec3 _v, 
0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x6c, 0x6f, 0x64, 0x2c, // float _lod,
0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x74, 0x6f, 0x70, //  float _top
0x4c, 0x65, 0x76, 0x65, 0x6c, 0x43, 0x75, 0x62, 0x65, 0x53, 0x69, // LevelCubeSi
0x7a, 0x65, 0x29, 0x0a, 0x7b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, // ze).{.float
0x20, 0x61, 0x78, 0x20, 0x3d, 0x20, 0x61, 0x62, 0x73, 0x28, 0x5f, //  ax = abs(_
0x76, 0x2e, 0x78, 0x29, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, // v.x);.float
0x20, 0x61, 0x79, 0x20, 0x3d, 0x20, 0x61, 0x62, 0x73, 0x28, 0x5f, //  ay = abs(_
0x76, 0x2e, 0x79, 0x29, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, // v.y);.float
0x20, 0x61, 0x7a, 0x20, 0x3d, 0x20, 0x61, 0x62, 0x73, 0x28, 0x5f, //  az = abs(_
0x76, 0x2e, 0x7a, 0x29, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, // v.z);.float
0x20, 0x76, 0x6d, 0x61, 0x78, 0x20, 0x3d, 0x20, 0x6d, 0x61, 0x78, //  vmax = max
0x28, 0x6d, 0x61, 0x78, 0x28, 0x61, 0x78, 0x2c, 0x20, 0x61, 0x79, // (max(ax, ay
0x29, 0x2c, 0x20, 0x61, 0x7a, 0x29, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, // ), az);.flo
0x61, 0x74, 0x20, 0x73, 0x63, 0x61, 0x6c, 0x65, 0x20, 0x3d, 0x20, // at scale = 
0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x65, 0x78, 0x70, 0x32, 0x28, // 1.0 - exp2(
0x5f, 0x6c, 0x6f, 0x64, 0x29, 0x20, 0x2f, 0x20, 0x5f, 0x74, 0x6f, // _lod) / _to
0x70, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x43, 0x75, 0x62, 0x65, 0x53, // pLevelCubeS
0x69, 0x7a, 0x65, 0x3b, 0x0a, 0x69, 0x66, 0x20, 0x28, 0x61, 0x78, // ize;.if (ax
0x20, 0x21, 0x3d, 0x20, 0x76, 0x6d, 0x61, 0x78, 0x29, 0x20, 0x7b, //  != vmax) {
0x20, 0x5f, 0x76, 0x2e, 0x78, 0x20, 0x2a, 0x3d, 0x20, 0x73, 0x63, //  _v.x *= sc
0x61, 0x6c, 0x65, 0x3b, 0x20, 0x7d, 0x0a, 0x69, 0x66, 0x20, 0x28, // ale; }.if (
0x61, 0x79, 0x20, 0x21, 0x3d, 0x20, 0x76, 0x6d, 0x61, 0x78, 0x29, // ay != vmax)
0x20, 0x7b, 0x20, 0x5f, 0x76, 0x2e, 0x79, 0x20, 0x2a, 0x3d, 0x20, //  { _v.y *= 
0x73, 0x63, 0x61, 0x6c, 0x65, 0x3b, 0x20, 0x7d, 0x0a, 0x69, 0x66, // scale; }.if
0x20, 0x28, 0x61, 0x7a, 0x20, 0x21, 0x3d, 0x20, 0x76, 0x6d, 0x61, //  (az != vma
0x78, 0x29, 0x20, 0x7b, 0x20, 0x5f, 0x76, 0x2e, 0x7a, 0x20, 0x2a, // x) { _v.z *
0x3d, 0x20, 0x73, 0x63, 0x61, 0x6c, 0x65, 0x3b, 0x20, 0x7d, 0x0a, // = scale; }.
0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x5f, 0x76, 0x3b, 0x0a, // return _v;.
0x7d, 0x0a, 0x76, 0x65, 0x63, 0x32, 0x20, 0x74, 0x65, 0x78, 0x74, // }.vec2 text
0x75, 0x72, 0x65, 0x32, 0x44, 0x42, 0x63, 0x35, 0x28, 0x73, 0x61, // ure2DBc5(sa
0x6d, 0x70, 0x6c, 0x65, 0x72, 0x32, 0x44, 0x20, 0x5f, 0x73, 0x61, // mpler2D _sa
0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x32, // mpler, vec2
0x20, 0x5f, 0x75, 0x76, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, //  _uv).{.ret
0x75, 0x72, 0x6e, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, // urn texture
0x28, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, // (_sampler, 
0x5f, 0x75, 0x76, 0x29, 0x2e, 0x78, 0x79, 0x3b, 0x0a, 0x7d, 0x0a, // _uv).xy;.}.
0x6d, 0x61, 0x74, 0x33, 0x20, 0x63, 0x6f, 0x66, 0x61, 0x63, 0x74, // mat3 cofact
0x6f, 0x72, 0x28, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x5f, 0x6d, 0x29, // or(mat4 _m)
0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x6d, // .{.return m
0x61, 0x74, 0x33, 0x28, 0x0a, 0x5f, 0x6d, 0x5b, 0x31, 0x5d, 0x5b, // at3(._m[1][
0x31, 0x5d, 0x2a, 0x5f, 0x6d, 0x5b, 0x32, 0x5d, 0x5b, 0x32, 0x5d, // 1]*_m[2][2]
0x2d, 0x5f, 0x6d, 0x5b, 0x31, 0x5d, 0x5b, 0x32, 0x5d, 0x2a, 0x5f, // -_m[1][2]*_
0x6d, 0x5b, 0x32, 0x5d, 0x5b, 0x31, 0x5d, 0x2c, 0x0a, 0x5f, 0x6d, // m[2][1],._m
0x5b, 0x31, 0x5d, 0x5b, 0x32, 0x5d, 0x2a, 0x5f, 0x6d, 0x5b, 0x32, // [1][2]*_m[2
0x5d, 0x5b, 0x30, 0x5d, 0x2d, 0x5f, 0x6d, 0x5b, 0x31, 0x5d, 0x5b, // ][0]-_m[1][
0x30, 0x5d, 0x2a, 0x5f, 0x6d, 0x5b, 0x32, 0x5d, 0x5b, 0x32, 0x5d, // 0]*_m[2][2]
0x2c, 0x0a, 0x5f, 0x6d, 0x5b, 0x31, 0x5d, 0x5b, 0x30, 0x5d, 0x2a, // ,._m[1][0]*
0x5f, 0x6d, 0x5b, 0x32, 0x5d, 0x5b, 0x31, 0x5d, 0x2d, 0x5f, 0x6d, // _m[2][1]-_m
0x5b, 0x31, 0x5d, 0x5b, 0x31, 0x5d, 0x2a, 0x5f, 0x6d, 0x5b, 0x32, // [1][1]*_m[2
0x5d, 0x5b, 0x30, 0x5d, 0x2c, 0x0a, 0x5f, 0x6d, 0x5b, 0x30, 0x5d, // ][0],._m[0]
0x5b, 0x32, 0x5d, 0x2a, 0x5f, 0x6d, 0x5b, 0x32, 0x5d, 0x5b, 0x31, // [2]*_m[2][1
0x5d, 0x2d, 0x5f, 0x6d, 0x5b, 0x30, 0x5d, 0x5b, 0x31, 0x5d, 0x2a, // ]-_m[0][1]*
0x5f, 0x6d, 0x5b, 0x32, 0x5d, 0x5b, 0x32, 0x5d, 0x2c, 0x0a, 0x5f, // _m[2][2],._
0x6d, 0x5b, 0x30, 0x5d, 0x5b, 0x30, 0x5d, 0x2a, 0x5f, 0x6d, 0x5b, // m[0][0]*_m[
0x32, 0x5d, 0x5b, 0x32, 0x5d, 0x2d, 0x5f, 0x6d, 0x5b, 0x30, 0x5d, // 2][2]-_m[0]
0x5b, 0x32, 0x5d, 0x2a, 0x5f, 0x6d, 0x5b, 0x32, 0x5d, 0x5b, 0x30, // [2]*_m[2][0
0x5d, 0x2c, 0x0a, 0x5f, 0x6d, 0x5b, 0x30, 0x5d, 0x5b, 0x31, 0x5d, // ],._m[0][1]
0x2a, 0x5f, 0x6d, 0x5b, 0x32, 0x5d, 0x5b, 0x30, 0x5d, 0x2d, 0x5f, // *_m[2][0]-_
0x6d, 0x5b, 0x30, 0x5d, 0x5b, 0x30, 0x5d, 0x2a, 0x5f, 0x6d, 0x5b, // m[0][0]*_m[
0x32, 0x5d, 0x5b, 0x31, 0x5d, 0x2c, 0x0a, 0x5f, 0x6d, 0x5b, 0x30, // 2][1],._m[0
0x5d, 0x5b, 0x31, 0x5d, 0x2a, 0x5f, 0x6d, 0x5b, 0x31, 0x5d, 0x5b, // ][1]*_m[1][
0x32, 0x5d, 0x2d, 0x5f, 0x6d, 0x5b, 0x30, 0x5d, 0x5b, 0x32, 0x5d, // 2]-_m[0][2]
0x2a, 0x5f, 0x6d, 0x5b, 0x31, 0x5d, 0x5b, 0x31, 0x5d, 0x2c, 0x0a, // *_m[1][1],.
0x5f, 0x6d, 0x5b, 0x30, 0x5d, 0x5b, 0x32, 0x5d, 0x2a, 0x5f, 0x6d, // _m[0][2]*_m
0x5b, 0x31, 0x5d, 0x5b, 0x30, 0x5d, 0x2d, 0x5f, 0x6d, 0x5b, 0x30, // [1][0]-_m[0
0x5d, 0x5b, 0x30, 0x5d, 0x2a, 0x5f, 0x6d, 0x5b, 0x31, 0x5d, 0x5b, // ][0]*_m[1][
0x32, 0x5d, 0x2c, 0x0a, 0x5f, 0x6d, 0x5b, 0x30, 0x5d, 0x5b, 0x30, // 2],._m[0][0
0x5d, 0x2a, 0x5f, 0x6d, 0x5b, 0x31, 0x5d, 0x5b, 0x31, 0x5d, 0x2d, // ]*_m[1][1]-
0x5f, 0x6d, 0x5b, 0x30, 0x5d, 0x5b, 0x31, 0x5d, 0x2a, 0x5f, 0x6d, // _m[0][1]*_m
0x5b, 0x31, 0x5d, 0x5b, 0x30, 0x5d, 0x0a, 0x29, 0x3b, 0x0a, 0x7d, // [1][0].);.}
0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x74, 0x6f, 0x43, 0x6c, // .float toCl
0x69, 0x70, 0x53, 0x70, 0x61, 0x63, 0x65, 0x44, 0x65, 0x70, 0x74, // ipSpaceDept
0x68, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x64, 0x65, // h(float _de
0x70, 0x74, 0x68, 0x54, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x5a, // pthTextureZ
0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, // ).{.return 
0x5f, 0x64, 0x65, 0x70, 0x74, 0x68, 0x54, 0x65, 0x78, 0x74, 0x75, // _depthTextu
0x72, 0x65, 0x5a, 0x20, 0x2a, 0x20, 0x32, 0x2e, 0x30, 0x20, 0x2d, // reZ * 2.0 -
0x20, 0x31, 0x2e, 0x30, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, //  1.0;.}.vec
0x33, 0x20, 0x63, 0x6c, 0x69, 0x70, 0x54, 0x6f, 0x57, 0x6f, 0x72, // 3 clipToWor
0x6c, 0x64, 0x28, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x5f, 0x69, 0x6e, // ld(mat4 _in
0x76, 0x56, 0x69, 0x65, 0x77, 0x50, 0x72, 0x6f, 0x6a, 0x2c, 0x20, // vViewProj, 
0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, 0x63, 0x6c, 0x69, 0x70, 0x50, // vec3 _clipP
0x6f, 0x73, 0x29, 0x0a, 0x7b, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, // os).{.vec4 
0x77, 0x70, 0x6f, 0x73, 0x20, 0x3d, 0x20, 0x28, 0x20, 0x28, 0x5f, // wpos = ( (_
0x69, 0x6e, 0x76, 0x56, 0x69, 0x65, 0x77, 0x50, 0x72, 0x6f, 0x6a, // invViewProj
0x29, 0x20, 0x2a, 0x20, 0x28, 0x76, 0x65, 0x63, 0x34, 0x28, 0x5f, // ) * (vec4(_
0x63, 0x6c, 0x69, 0x70, 0x50, 0x6f, 0x73, 0x2c, 0x20, 0x31, 0x2e, // clipPos, 1.
0x30, 0x29, 0x20, 0x29, 0x20, 0x29, 0x3b, 0x0a, 0x72, 0x65, 0x74, // 0) ) );.ret
0x75, 0x72, 0x6e, 0x20, 0x77, 0x70, 0x6f, 0x73, 0x2e, 0x78, 0x79, // urn wpos.xy
0x7a, 0x20, 0x2f, 0x20, 0x77, 0x70, 0x6f, 0x73, 0x2e, 0x77, 0x3b, // z / wpos.w;
0x0a, 0x7d, 0x0a, 0x76, 0x6f, 0x69, 0x64, 0x20, 0x6d, 0x61, 0x69, // .}.void mai
0x6e, 0x28, 0x29, 0x0a, 0x7b, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, // n().{.vec4 
0x70, 0x6f, 0x73, 0x20, 0x3d, 0x20, 0x28, 0x20, 0x28, 0x75, 0x5f, // pos = ( (u_
0x76, 0x69, 0x65, 0x77, 0x50, 0x72, 0x6f, 0x6a, 0x29, 0x20, 0x2a, // viewProj) *
0x20, 0x28, 0x76, 0x65, 0x63, 0x34, 0x28, 0x61, 0x5f, 0x70, 0x6f, //  (vec4(a_po
0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x78, 0x79, 0x2c, 0x20, // sition.xy, 
0x30, 0x2e, 0x30, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x20, 0x29, // 0.0, 1.0) )
0x20, 0x29, 0x3b, 0x0a, 0x67, 0x6c, 0x5f, 0x50, 0x6f, 0x73, 0x69, //  );.gl_Posi
0x74, 0x69, 0x6f, 0x6e, 0x20, 0x3d, 0x20, 0x76, 0x65, 0x63, 0x34, // tion = vec4
0x28, 0x70, 0x6f, 0x73, 0x2e, 0x78, 0x2c, 0x20, 0x70, 0x6f, 0x73, // (pos.x, pos
0x2e, 0x79, 0x2c, 0x20, 0x30, 0x2e, 0x30, 0x2c, 0x20, 0x31, 0x2e, // .y, 0.0, 1.
0x30, 0x29, 0x3b, 0x0a, 0x76, 0x5f, 0x74, 0x65, 0x78, 0x63, 0x6f, // 0);.v_texco
0x6f, 0x72, 0x64, 0x30, 0x20, 0x3d, 0x20, 0x61, 0x5f, 0x74, 0x65, // ord0 = a_te
0x78, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x30, 0x3b, 0x0a, 0x76, 0x5f, // xcoord0;.v_
0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x30, 0x20, 0x3d, 0x20, 0x61, 0x5f, // color0 = a_
0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x30, 0x3b, 0x0a, 0x7d, 0x0a, 0x00, // color0;.}..
};
