{
0x46, 0x53, 0x48, 0x0b, 0x01, 0x83, 0xf2, 0xe1, 0x00, 0x00, 0x00, // FSH...òá...
0x00, 0x00, 0x00, 0x57, 0x28, 0x00, 0x00, 0x23, 0x76, 0x65, 0x72, // ...W(..#ver
0x73, 0x69, 0x6f, 0x6e, 0x20, 0x34, 0x34, 0x30, 0x0a, 0x23, 0x64, // sion 440.#d
0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, // efine textu
0x72, 0x65, 0x32, 0x44, 0x4c, 0x6f, 0x64, 0x20, 0x20, 0x20, 0x20, // re2DLod
0x20, 0x20, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x4c, //    textureL
0x6f, 0x64, 0x0a, 0x23, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, // od.#define
0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x32, 0x44, 0x47, 0x72, // texture2DGr
0x61, 0x64, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x74, 0x65, 0x78, // ad      tex
0x74, 0x75, 0x72, 0x65, 0x47, 0x72, 0x61, 0x64, 0x0a, 0x23, 0x64, // tureGrad.#d
0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, // efine textu
0x72, 0x65, 0x32, 0x44, 0x50, 0x72, 0x6f, 0x6a, 0x4c, 0x6f, 0x64, // re2DProjLod
0x20, 0x20, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x50, //    textureP
0x72, 0x6f, 0x6a, 0x4c, 0x6f, 0x64, 0x0a, 0x23, 0x64, 0x65, 0x66, // rojLod.#def
0x69, 0x6e, 0x65, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, // ine texture
0x32, 0x44, 0x50, 0x72, 0x6f, 0x6a, 0x47, 0x72, 0x61, 0x64, 0x20, // 2DProjGrad
0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x50, 0x72, 0x6f, //  texturePro
0x6a, 0x47, 0x72, 0x61, 0x64, 0x0a, 0x23, 0x64, 0x65, 0x66, 0x69, // jGrad.#defi
0x6e, 0x65, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x43, // ne textureC
0x75, 0x62, 0x65, 0x4c, 0x6f, 0x64, 0x20, 0x20, 0x20, 0x20, 0x20, // ubeLod
0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x4c, 0x6f, 0x64, 0x0a, // textureLod.
0x23, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, 0x74, 0x65, 0x78, // #define tex
0x74, 0x75, 0x72, 0x65, 0x43, 0x75, 0x62, 0x65, 0x47, 0x72, 0x61, // tureCubeGra
0x64, 0x20, 0x20, 0x20, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, // d    textur
0x65, 0x47, 0x72, 0x61, 0x64, 0x0a, 0x23, 0x64, 0x65, 0x66, 0x69, // eGrad.#defi
0x6e, 0x65, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x33, // ne texture3
0x44, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // D
0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x0a, 0x23, 0x64, 0x65, // texture.#de
0x66, 0x69, 0x6e, 0x65, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, // fine textur
0x65, 0x32, 0x44, 0x4c, 0x6f, 0x66, 0x4f, 0x66, 0x66, 0x73, 0x65, // e2DLofOffse
0x74, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x4c, 0x6f, // t textureLo
0x64, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x0a, 0x23, 0x64, 0x65, // dOffset.#de
0x66, 0x69, 0x6e, 0x65, 0x20, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, // fine attrib
0x75, 0x74, 0x65, 0x20, 0x69, 0x6e, 0x0a, 0x23, 0x64, 0x65, 0x66, // ute in.#def
0x69, 0x6e, 0x65, 0x20, 0x76, 0x61, 0x72, 0x79, 0x69, 0x6e, 0x67, // ine varying
0x20, 0x69, 0x6e, 0x0a, 0x23, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, //  in.#define
0x20, 0x62, 0x67, 0x66, 0x78, 0x53, 0x68, 0x61, 0x64, 0x6f, 0x77, //  bgfxShadow
0x32, 0x44, 0x28, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, // 2D(_sampler
0x2c, 0x20, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x29, 0x20, 0x20, // , _coord)
0x20, 0x20, 0x20, 0x76, 0x65, 0x63, 0x34, 0x5f, 0x73, 0x70, 0x6c, //    vec4_spl
0x61, 0x74, 0x28, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x28, // at(texture(
0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x5f, // _sampler, _
0x63, 0x6f, 0x6f, 0x72, 0x64, 0x29, 0x29, 0x0a, 0x23, 0x64, 0x65, // coord)).#de
0x66, 0x69, 0x6e, 0x65, 0x20, 0x62, 0x67, 0x66, 0x78, 0x53, 0x68, // fine bgfxSh
0x61, 0x64, 0x6f, 0x77, 0x32, 0x44, 0x50, 0x72, 0x6f, 0x6a, 0x28, // adow2DProj(
0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x5f, // _sampler, _
0x63, 0x6f, 0x6f, 0x72, 0x64, 0x29, 0x20, 0x76, 0x65, 0x63, 0x34, // coord) vec4
0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, 0x28, 0x74, 0x65, 0x78, 0x74, // _splat(text
0x75, 0x72, 0x65, 0x50, 0x72, 0x6f, 0x6a, 0x28, 0x5f, 0x73, 0x61, // ureProj(_sa
0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x5f, 0x63, 0x6f, 0x6f, // mpler, _coo
0x72, 0x64, 0x29, 0x29, 0x0a, 0x76, 0x61, 0x72, 0x79, 0x69, 0x6e, // rd)).varyin
0x67, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x76, 0x5f, 0x63, 0x6f, // g vec4 v_co
0x6c, 0x6f, 0x72, 0x30, 0x3b, 0x0a, 0x76, 0x61, 0x72, 0x79, 0x69, // lor0;.varyi
0x6e, 0x67, 0x20, 0x76, 0x65, 0x63, 0x32, 0x20, 0x76, 0x5f, 0x74, // ng vec2 v_t
0x65, 0x78, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x30, 0x3b, 0x0a, 0x76, // excoord0;.v
0x65, 0x63, 0x33, 0x20, 0x69, 0x6e, 0x73, 0x74, 0x4d, 0x75, 0x6c, // ec3 instMul
0x28, 0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, 0x76, 0x65, 0x63, 0x2c, // (vec3 _vec,
0x20, 0x6d, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x6d, 0x74, 0x78, 0x29, //  mat3 _mtx)
0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x28, //  { return (
0x20, 0x28, 0x5f, 0x76, 0x65, 0x63, 0x29, 0x20, 0x2a, 0x20, 0x28, //  (_vec) * (
0x5f, 0x6d, 0x74, 0x78, 0x29, 0x20, 0x29, 0x3b, 0x20, 0x7d, 0x0a, // _mtx) ); }.
0x76, 0x65, 0x63, 0x33, 0x20, 0x69, 0x6e, 0x73, 0x74, 0x4d, 0x75, // vec3 instMu
0x6c, 0x28, 0x6d, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x6d, 0x74, 0x78, // l(mat3 _mtx
0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, 0x76, 0x65, 0x63, // , vec3 _vec
0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, // ) { return
0x28, 0x20, 0x28, 0x5f, 0x6d, 0x74, 0x78, 0x29, 0x20, 0x2a, 0x20, // ( (_mtx) *
0x28, 0x5f, 0x76, 0x65, 0x63, 0x29, 0x20, 0x29, 0x3b, 0x20, 0x7d, // (_vec) ); }
0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x69, 0x6e, 0x73, 0x74, 0x4d, // .vec4 instM
0x75, 0x6c, 0x28, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x76, 0x65, // ul(vec4 _ve
0x63, 0x2c, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x5f, 0x6d, 0x74, // c, mat4 _mt
0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, // x) { return
0x20, 0x28, 0x20, 0x28, 0x5f, 0x76, 0x65, 0x63, 0x29, 0x20, 0x2a, //  ( (_vec) *
0x20, 0x28, 0x5f, 0x6d, 0x74, 0x78, 0x29, 0x20, 0x29, 0x3b, 0x20, //  (_mtx) );
0x7d, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x69, 0x6e, 0x73, 0x74, // }.vec4 inst
0x4d, 0x75, 0x6c, 0x28, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x5f, 0x6d, // Mul(mat4 _m
0x74, 0x78, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x76, // tx, vec4 _v
0x65, 0x63, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, // ec) { retur
0x6e, 0x20, 0x28, 0x20, 0x28, 0x5f, 0x6d, 0x74, 0x78, 0x29, 0x20, // n ( (_mtx)
0x2a, 0x20, 0x28, 0x5f, 0x76, 0x65, 0x63, 0x29, 0x20, 0x29, 0x3b, // * (_vec) );
0x20, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x72, 0x63, //  }.float rc
0x70, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x61, 0x29, // p(float _a)
0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x31, //  { return 1
0x2e, 0x30, 0x2f, 0x5f, 0x61, 0x3b, 0x20, 0x7d, 0x0a, 0x76, 0x65, // .0/_a; }.ve
0x63, 0x32, 0x20, 0x72, 0x63, 0x70, 0x28, 0x76, 0x65, 0x63, 0x32, // c2 rcp(vec2
0x20, 0x5f, 0x61, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, //  _a) { retu
0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x32, 0x28, 0x31, 0x2e, 0x30, // rn vec2(1.0
0x29, 0x2f, 0x5f, 0x61, 0x3b, 0x20, 0x7d, 0x0a, 0x76, 0x65, 0x63, // )/_a; }.vec
0x33, 0x20, 0x72, 0x63, 0x70, 0x28, 0x76, 0x65, 0x63, 0x33, 0x20, // 3 rcp(vec3
0x5f, 0x61, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, // _a) { retur
0x6e, 0x20, 0x76, 0x65, 0x63, 0x33, 0x28, 0x31, 0x2e, 0x30, 0x29, // n vec3(1.0)
0x2f, 0x5f, 0x61, 0x3b, 0x20, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x34, // /_a; }.vec4
0x20, 0x72, 0x63, 0x70, 0x28, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, //  rcp(vec4 _
0x61, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, // a) { return
0x20, 0x76, 0x65, 0x63, 0x34, 0x28, 0x31, 0x2e, 0x30, 0x29, 0x2f, //  vec4(1.0)/
0x5f, 0x61, 0x3b, 0x20, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x32, 0x20, // _a; }.vec2
0x76, 0x65, 0x63, 0x32, 0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, 0x28, // vec2_splat(
0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x78, 0x29, 0x20, 0x7b, // float _x) {
0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, //  return vec
0x32, 0x28, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x29, 0x3b, 0x20, // 2(_x, _x);
0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x76, 0x65, 0x63, 0x33, // }.vec3 vec3
0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, 0x28, 0x66, 0x6c, 0x6f, 0x61, // _splat(floa
0x74, 0x20, 0x5f, 0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, // t _x) { ret
0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x33, 0x28, 0x5f, 0x78, // urn vec3(_x
0x2c, 0x20, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x29, 0x3b, 0x20, // , _x, _x);
0x7d, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x76, 0x65, 0x63, 0x34, // }.vec4 vec4
0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, 0x28, 0x66, 0x6c, 0x6f, 0x61, // _splat(floa
0x74, 0x20, 0x5f, 0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, // t _x) { ret
0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x34, 0x28, 0x5f, 0x78, // urn vec4(_x
0x2c, 0x20, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x2c, 0x20, 0x5f, // , _x, _x, _
0x78, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x75, 0x76, 0x65, 0x63, 0x32, // x); }.uvec2
0x20, 0x75, 0x76, 0x65, 0x63, 0x32, 0x5f, 0x73, 0x70, 0x6c, 0x61, //  uvec2_spla
0x74, 0x28, 0x75, 0x69, 0x6e, 0x74, 0x20, 0x5f, 0x78, 0x29, 0x20, // t(uint _x)
0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x75, 0x76, // { return uv
0x65, 0x63, 0x32, 0x28, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x29, // ec2(_x, _x)
0x3b, 0x20, 0x7d, 0x0a, 0x75, 0x76, 0x65, 0x63, 0x33, 0x20, 0x75, // ; }.uvec3 u
0x76, 0x65, 0x63, 0x33, 0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, 0x28, // vec3_splat(
0x75, 0x69, 0x6e, 0x74, 0x20, 0x5f, 0x78, 0x29, 0x20, 0x7b, 0x20, // uint _x) {
0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x75, 0x76, 0x65, 0x63, // return uvec
0x33, 0x28, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x2c, 0x20, 0x5f, // 3(_x, _x, _
0x78, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x75, 0x76, 0x65, 0x63, 0x34, // x); }.uvec4
0x20, 0x75, 0x76, 0x65, 0x63, 0x34, 0x5f, 0x73, 0x70, 0x6c, 0x61, //  uvec4_spla
0x74, 0x28, 0x75, 0x69, 0x6e, 0x74, 0x20, 0x5f, 0x78, 0x29, 0x20, // t(uint _x)
0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x75, 0x76, // { return uv
0x65, 0x63, 0x34, 0x28, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x2c, // ec4(_x, _x,
0x20, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x29, 0x3b, 0x20, 0x7d, //  _x, _x); }
0x0a, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x6d, 0x74, 0x78, 0x46, 0x72, // .mat4 mtxFr
0x6f, 0x6d, 0x52, 0x6f, 0x77, 0x73, 0x28, 0x76, 0x65, 0x63, 0x34, // omRows(vec4
0x20, 0x5f, 0x30, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, //  _0, vec4 _
0x31, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x32, 0x2c, // 1, vec4 _2,
0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x33, 0x29, 0x0a, 0x7b, //  vec4 _3).{
0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x74, 0x72, 0x61, // .return tra
0x6e, 0x73, 0x70, 0x6f, 0x73, 0x65, 0x28, 0x6d, 0x61, 0x74, 0x34, // nspose(mat4
0x28, 0x5f, 0x30, 0x2c, 0x20, 0x5f, 0x31, 0x2c, 0x20, 0x5f, 0x32, // (_0, _1, _2
0x2c, 0x20, 0x5f, 0x33, 0x29, 0x20, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, // , _3) );.}.
0x6d, 0x61, 0x74, 0x34, 0x20, 0x6d, 0x74, 0x78, 0x46, 0x72, 0x6f, // mat4 mtxFro
0x6d, 0x43, 0x6f, 0x6c, 0x73, 0x28, 0x76, 0x65, 0x63, 0x34, 0x20, // mCols(vec4
0x5f, 0x30, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x31, // _0, vec4 _1
0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x32, 0x2c, 0x20, // , vec4 _2,
0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x33, 0x29, 0x0a, 0x7b, 0x0a, // vec4 _3).{.
0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x6d, 0x61, 0x74, 0x34, // return mat4
0x28, 0x5f, 0x30, 0x2c, 0x20, 0x5f, 0x31, 0x2c, 0x20, 0x5f, 0x32, // (_0, _1, _2
0x2c, 0x20, 0x5f, 0x33, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x6d, 0x61, // , _3);.}.ma
0x74, 0x33, 0x20, 0x6d, 0x74, 0x78, 0x46, 0x72, 0x6f, 0x6d, 0x52, // t3 mtxFromR
0x6f, 0x77, 0x73, 0x28, 0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, 0x30, // ows(vec3 _0
0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, 0x31, 0x2c, 0x20, // , vec3 _1,
0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, 0x32, 0x29, 0x0a, 0x7b, 0x0a, // vec3 _2).{.
0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x74, 0x72, 0x61, 0x6e, // return tran
0x73, 0x70, 0x6f, 0x73, 0x65, 0x28, 0x6d, 0x61, 0x74, 0x33, 0x28, // spose(mat3(
0x5f, 0x30, 0x2c, 0x20, 0x5f, 0x31, 0x2c, 0x20, 0x5f, 0x32, 0x29, // _0, _1, _2)
0x20, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x6d, 0x61, 0x74, 0x33, 0x20, //  );.}.mat3
0x6d, 0x74, 0x78, 0x46, 0x72, 0x6f, 0x6d, 0x43, 0x6f, 0x6c, 0x73, // mtxFromCols
0x28, 0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, 0x30, 0x2c, 0x20, 0x76, // (vec3 _0, v
0x65, 0x63, 0x33, 0x20, 0x5f, 0x31, 0x2c, 0x20, 0x76, 0x65, 0x63, // ec3 _1, vec
0x33, 0x20, 0x5f, 0x32, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, // 3 _2).{.ret
0x75, 0x72, 0x6e, 0x20, 0x6d, 0x61, 0x74, 0x33, 0x28, 0x5f, 0x30, // urn mat3(_0
0x2c, 0x20, 0x5f, 0x31, 0x2c, 0x20, 0x5f, 0x32, 0x29, 0x3b, 0x0a, // , _1, _2);.
0x7d, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x76, // }.uniform v
0x65, 0x63, 0x34, 0x20, 0x75, 0x5f, 0x76, 0x69, 0x65, 0x77, 0x52, // ec4 u_viewR
0x65, 0x63, 0x74, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, // ect;.unifor
0x6d, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x75, 0x5f, 0x76, 0x69, // m vec4 u_vi
0x65, 0x77, 0x54, 0x65, 0x78, 0x65, 0x6c, 0x3b, 0x0a, 0x75, 0x6e, // ewTexel;.un
0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, // iform mat4
0x75, 0x5f, 0x76, 0x69, 0x65, 0x77, 0x3b, 0x0a, 0x75, 0x6e, 0x69, // u_view;.uni
0x66, 0x6f, 0x72, 0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x75, // form mat4 u
0x5f, 0x69, 0x6e, 0x76, 0x56, 0x69, 0x65, 0x77, 0x3b, 0x0a, 0x75, // _invView;.u
0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, // niform mat4
0x20, 0x75, 0x5f, 0x70, 0x72, 0x6f, 0x6a, 0x3b, 0x0a, 0x75, 0x6e, //  u_proj;.un
0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, // iform mat4
0x75, 0x5f, 0x69, 0x6e, 0x76, 0x50, 0x72, 0x6f, 0x6a, 0x3b, 0x0a, // u_invProj;.
0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x6d, 0x61, 0x74, // uniform mat
0x34, 0x20, 0x75, 0x5f, 0x76, 0x69, 0x65, 0x77, 0x50, 0x72, 0x6f, // 4 u_viewPro
0x6a, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, // j;.uniform
0x6d, 0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, 0x69, 0x6e, 0x76, 0x56, // mat4 u_invV
0x69, 0x65, 0x77, 0x50, 0x72, 0x6f, 0x6a, 0x3b, 0x0a, 0x75, 0x6e, // iewProj;.un
0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, // iform mat4
0x75, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x5b, 0x33, 0x32, 0x5d, // u_model[32]
0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x6d, // ;.uniform m
0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, // at4 u_model
0x56, 0x69, 0x65, 0x77, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, // View;.unifo
0x72, 0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, 0x6d, // rm mat4 u_m
0x6f, 0x64, 0x65, 0x6c, 0x56, 0x69, 0x65, 0x77, 0x50, 0x72, 0x6f, // odelViewPro
0x6a, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, // j;.uniform
0x76, 0x65, 0x63, 0x34, 0x20, 0x75, 0x5f, 0x61, 0x6c, 0x70, 0x68, // vec4 u_alph
0x61, 0x52, 0x65, 0x66, 0x34, 0x3b, 0x0a, 0x76, 0x65, 0x63, 0x34, // aRef4;.vec4
0x20, 0x65, 0x6e, 0x63, 0x6f, 0x64, 0x65, 0x52, 0x45, 0x38, 0x28, //  encodeRE8(
0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x72, 0x29, 0x0a, 0x7b, // float _r).{
0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x65, 0x78, 0x70, 0x6f, // .float expo
0x6e, 0x65, 0x6e, 0x74, 0x20, 0x3d, 0x20, 0x63, 0x65, 0x69, 0x6c, // nent = ceil
0x28, 0x6c, 0x6f, 0x67, 0x32, 0x28, 0x5f, 0x72, 0x29, 0x20, 0x29, // (log2(_r) )
0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, // ;.return ve
0x63, 0x34, 0x28, 0x5f, 0x72, 0x20, 0x2f, 0x20, 0x65, 0x78, 0x70, // c4(_r / exp
0x32, 0x28, 0x65, 0x78, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x29, // 2(exponent)
0x0a, 0x2c, 0x20, 0x30, 0x2e, 0x30, 0x0a, 0x2c, 0x20, 0x30, 0x2e, // ., 0.0., 0.
0x30, 0x0a, 0x2c, 0x20, 0x28, 0x65, 0x78, 0x70, 0x6f, 0x6e, 0x65, // 0., (expone
0x6e, 0x74, 0x20, 0x2b, 0x20, 0x31, 0x32, 0x38, 0x2e, 0x30, 0x29, // nt + 128.0)
0x20, 0x2f, 0x20, 0x32, 0x35, 0x35, 0x2e, 0x30, 0x0a, 0x29, 0x3b, //  / 255.0.);
0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x64, 0x65, // .}.float de
0x63, 0x6f, 0x64, 0x65, 0x52, 0x45, 0x38, 0x28, 0x76, 0x65, 0x63, // codeRE8(vec
0x34, 0x20, 0x5f, 0x72, 0x65, 0x38, 0x29, 0x0a, 0x7b, 0x0a, 0x66, // 4 _re8).{.f
0x6c, 0x6f, 0x61, 0x74, 0x20, 0x65, 0x78, 0x70, 0x6f, 0x6e, 0x65, // loat expone
0x6e, 0x74, 0x20, 0x3d, 0x20, 0x5f, 0x72, 0x65, 0x38, 0x2e, 0x77, // nt = _re8.w
0x20, 0x2a, 0x20, 0x32, 0x35, 0x35, 0x2e, 0x30, 0x20, 0x2d, 0x20, //  * 255.0 -
0x31, 0x32, 0x38, 0x2e, 0x30, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, // 128.0;.retu
0x72, 0x6e, 0x20, 0x5f, 0x72, 0x65, 0x38, 0x2e, 0x78, 0x20, 0x2a, // rn _re8.x *
0x20, 0x65, 0x78, 0x70, 0x32, 0x28, 0x65, 0x78, 0x70, 0x6f, 0x6e, //  exp2(expon
0x65, 0x6e, 0x74, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, // ent);.}.vec
0x34, 0x20, 0x65, 0x6e, 0x63, 0x6f, 0x64, 0x65, 0x52, 0x47, 0x42, // 4 encodeRGB
0x45, 0x38, 0x28, 0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, 0x72, 0x67, // E8(vec3 _rg
0x62, 0x29, 0x0a, 0x7b, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x72, // b).{.vec4 r
0x67, 0x62, 0x65, 0x38, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, // gbe8;.float
0x20, 0x6d, 0x61, 0x78, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, //  maxCompone
0x6e, 0x74, 0x20, 0x3d, 0x20, 0x6d, 0x61, 0x78, 0x28, 0x6d, 0x61, // nt = max(ma
0x78, 0x28, 0x5f, 0x72, 0x67, 0x62, 0x2e, 0x78, 0x2c, 0x20, 0x5f, // x(_rgb.x, _
0x72, 0x67, 0x62, 0x2e, 0x79, 0x29, 0x2c, 0x20, 0x5f, 0x72, 0x67, // rgb.y), _rg
0x62, 0x2e, 0x7a, 0x29, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, // b.z);.float
0x20, 0x65, 0x78, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x20, 0x3d, //  exponent =
0x20, 0x63, 0x65, 0x69, 0x6c, 0x28, 0x6c, 0x6f, 0x67, 0x32, 0x28, //  ceil(log2(
0x6d, 0x61, 0x78, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, // maxComponen
0x74, 0x29, 0x20, 0x29, 0x3b, 0x0a, 0x72, 0x67, 0x62, 0x65, 0x38, // t) );.rgbe8
0x2e, 0x78, 0x79, 0x7a, 0x20, 0x3d, 0x20, 0x5f, 0x72, 0x67, 0x62, // .xyz = _rgb
0x20, 0x2f, 0x20, 0x65, 0x78, 0x70, 0x32, 0x28, 0x65, 0x78, 0x70, //  / exp2(exp
0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x29, 0x3b, 0x0a, 0x72, 0x67, 0x62, // onent);.rgb
0x65, 0x38, 0x2e, 0x77, 0x20, 0x3d, 0x20, 0x28, 0x65, 0x78, 0x70, // e8.w = (exp
0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x20, 0x2b, 0x20, 0x31, 0x32, 0x38, // onent + 128
0x2e, 0x30, 0x29, 0x20, 0x2f, 0x20, 0x32, 0x35, 0x35, 0x2e, 0x30, // .0) / 255.0
0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x72, 0x67, // ;.return rg
0x62, 0x65, 0x38, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, // be8;.}.vec3
0x20, 0x64, 0x65, 0x63, 0x6f, 0x64, 0x65, 0x52, 0x47, 0x42, 0x45, //  decodeRGBE
0x38, 0x28, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x72, 0x67, 0x62, // 8(vec4 _rgb
0x65, 0x38, 0x29, 0x0a, 0x7b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, // e8).{.float
0x20, 0x65, 0x78, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x20, 0x3d, //  exponent =
0x20, 0x5f, 0x72, 0x67, 0x62, 0x65, 0x38, 0x2e, 0x77, 0x20, 0x2a, //  _rgbe8.w *
0x20, 0x32, 0x35, 0x35, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x31, 0x32, //  255.0 - 12
0x38, 0x2e, 0x30, 0x3b, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x72, // 8.0;.vec3 r
0x67, 0x62, 0x20, 0x3d, 0x20, 0x5f, 0x72, 0x67, 0x62, 0x65, 0x38, // gb = _rgbe8
0x2e, 0x78, 0x79, 0x7a, 0x20, 0x2a, 0x20, 0x65, 0x78, 0x70, 0x32, // .xyz * exp2
0x28, 0x65, 0x78, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x29, 0x3b, // (exponent);
0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x72, 0x67, 0x62, // .return rgb
0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x65, 0x6e, // ;.}.vec3 en
0x63, 0x6f, 0x64, 0x65, 0x4e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x55, // codeNormalU
0x69, 0x6e, 0x74, 0x28, 0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, 0x6e, // int(vec3 _n
0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, // ormal).{.re
0x74, 0x75, 0x72, 0x6e, 0x20, 0x5f, 0x6e, 0x6f, 0x72, 0x6d, 0x61, // turn _norma
0x6c, 0x20, 0x2a, 0x20, 0x30, 0x2e, 0x35, 0x20, 0x2b, 0x20, 0x30, // l * 0.5 + 0
0x2e, 0x35, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, // .5;.}.vec3
0x64, 0x65, 0x63, 0x6f, 0x64, 0x65, 0x4e, 0x6f, 0x72, 0x6d, 0x61, // decodeNorma
0x6c, 0x55, 0x69, 0x6e, 0x74, 0x28, 0x76, 0x65, 0x63, 0x33, 0x20, // lUint(vec3
0x5f, 0x65, 0x6e, 0x63, 0x6f, 0x64, 0x65, 0x64, 0x4e, 0x6f, 0x72, // _encodedNor
0x6d, 0x61, 0x6c, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, // mal).{.retu
0x72, 0x6e, 0x20, 0x5f, 0x65, 0x6e, 0x63, 0x6f, 0x64, 0x65, 0x64, // rn _encoded
0x4e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x20, 0x2a, 0x20, 0x32, 0x2e, // Normal * 2.
0x30, 0x20, 0x2d, 0x20, 0x31, 0x2e, 0x30, 0x3b, 0x0a, 0x7d, 0x0a, // 0 - 1.0;.}.
0x76, 0x65, 0x63, 0x32, 0x20, 0x65, 0x6e, 0x63, 0x6f, 0x64, 0x65, // vec2 encode
0x4e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x53, 0x70, 0x68, 0x65, 0x72, // NormalSpher
0x65, 0x4d, 0x61, 0x70, 0x28, 0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, // eMap(vec3 _
0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x29, 0x0a, 0x7b, 0x0a, 0x72, // normal).{.r
0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x6e, 0x6f, 0x72, 0x6d, 0x61, // eturn norma
0x6c, 0x69, 0x7a, 0x65, 0x28, 0x5f, 0x6e, 0x6f, 0x72, 0x6d, 0x61, // lize(_norma
0x6c, 0x2e, 0x78, 0x79, 0x29, 0x20, 0x2a, 0x20, 0x73, 0x71, 0x72, // l.xy) * sqr
0x74, 0x28, 0x5f, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x7a, // t(_normal.z
0x20, 0x2a, 0x20, 0x30, 0x2e, 0x35, 0x20, 0x2b, 0x20, 0x30, 0x2e, //  * 0.5 + 0.
0x35, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, // 5);.}.vec3
0x64, 0x65, 0x63, 0x6f, 0x64, 0x65, 0x4e, 0x6f, 0x72, 0x6d, 0x61, // decodeNorma
0x6c, 0x53, 0x70, 0x68, 0x65, 0x72, 0x65, 0x4d, 0x61, 0x70, 0x28, // lSphereMap(
0x76, 0x65, 0x63, 0x32, 0x20, 0x5f, 0x65, 0x6e, 0x63, 0x6f, 0x64, // vec2 _encod
0x65, 0x64, 0x4e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x29, 0x0a, 0x7b, // edNormal).{
0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x7a, 0x7a, 0x20, 0x3d, // .float zz =
0x20, 0x64, 0x6f, 0x74, 0x28, 0x5f, 0x65, 0x6e, 0x63, 0x6f, 0x64, //  dot(_encod
0x65, 0x64, 0x4e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2c, 0x20, 0x5f, // edNormal, _
0x65, 0x6e, 0x63, 0x6f, 0x64, 0x65, 0x64, 0x4e, 0x6f, 0x72, 0x6d, // encodedNorm
0x61, 0x6c, 0x29, 0x20, 0x2a, 0x20, 0x32, 0x2e, 0x30, 0x20, 0x2d, // al) * 2.0 -
0x20, 0x31, 0x2e, 0x30, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, //  1.0;.retur
0x6e, 0x20, 0x76, 0x65, 0x63, 0x33, 0x28, 0x6e, 0x6f, 0x72, 0x6d, // n vec3(norm
0x61, 0x6c, 0x69, 0x7a, 0x65, 0x28, 0x5f, 0x65, 0x6e, 0x63, 0x6f, // alize(_enco
0x64, 0x65, 0x64, 0x4e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x78, // dedNormal.x
0x79, 0x29, 0x20, 0x2a, 0x20, 0x73, 0x71, 0x72, 0x74, 0x28, 0x31, // y) * sqrt(1
0x2e, 0x30, 0x20, 0x2d, 0x20, 0x7a, 0x7a, 0x2a, 0x7a, 0x7a, 0x29, // .0 - zz*zz)
0x2c, 0x20, 0x7a, 0x7a, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, // , zz);.}.ve
0x63, 0x32, 0x20, 0x6f, 0x63, 0x74, 0x61, 0x68, 0x65, 0x64, 0x72, // c2 octahedr
0x6f, 0x6e, 0x57, 0x72, 0x61, 0x70, 0x28, 0x76, 0x65, 0x63, 0x32, // onWrap(vec2
0x20, 0x5f, 0x76, 0x61, 0x6c, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, //  _val).{.re
0x74, 0x75, 0x72, 0x6e, 0x20, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, // turn (1.0 -
0x20, 0x61, 0x62, 0x73, 0x28, 0x5f, 0x76, 0x61, 0x6c, 0x2e, 0x79, //  abs(_val.y
0x78, 0x29, 0x20, 0x29, 0x0a, 0x2a, 0x20, 0x6d, 0x69, 0x78, 0x28, // x) ).* mix(
0x76, 0x65, 0x63, 0x32, 0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, 0x28, // vec2_splat(
0x2d, 0x31, 0x2e, 0x30, 0x29, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x32, // -1.0), vec2
0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, 0x28, 0x31, 0x2e, 0x30, 0x29, // _splat(1.0)
0x2c, 0x20, 0x76, 0x65, 0x63, 0x32, 0x28, 0x67, 0x72, 0x65, 0x61, // , vec2(grea
0x74, 0x65, 0x72, 0x54, 0x68, 0x61, 0x6e, 0x45, 0x71, 0x75, 0x61, // terThanEqua
0x6c, 0x28, 0x5f, 0x76, 0x61, 0x6c, 0x2e, 0x78, 0x79, 0x2c, 0x20, // l(_val.xy,
0x76, 0x65, 0x63, 0x32, 0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, 0x28, // vec2_splat(
0x30, 0x2e, 0x30, 0x29, 0x20, 0x29, 0x20, 0x29, 0x20, 0x29, 0x3b, // 0.0) ) ) );
0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x32, 0x20, 0x65, 0x6e, 0x63, // .}.vec2 enc
0x6f, 0x64, 0x65, 0x4e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x4f, 0x63, // odeNormalOc
0x74, 0x61, 0x68, 0x65, 0x64, 0x72, 0x6f, 0x6e, 0x28, 0x76, 0x65, // tahedron(ve
0x63, 0x33, 0x20, 0x5f, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x29, // c3 _normal)
0x0a, 0x7b, 0x0a, 0x5f, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x20, // .{._normal
0x2f, 0x3d, 0x20, 0x61, 0x62, 0x73, 0x28, 0x5f, 0x6e, 0x6f, 0x72, // /= abs(_nor
0x6d, 0x61, 0x6c, 0x2e, 0x78, 0x29, 0x20, 0x2b, 0x20, 0x61, 0x62, // mal.x) + ab
0x73, 0x28, 0x5f, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x79, // s(_normal.y
0x29, 0x20, 0x2b, 0x20, 0x61, 0x62, 0x73, 0x28, 0x5f, 0x6e, 0x6f, // ) + abs(_no
0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x7a, 0x29, 0x3b, 0x0a, 0x5f, 0x6e, // rmal.z);._n
0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x78, 0x79, 0x20, 0x3d, 0x20, // ormal.xy =
0x5f, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x7a, 0x20, 0x3e, // _normal.z >
0x3d, 0x20, 0x30, 0x2e, 0x30, 0x20, 0x3f, 0x20, 0x5f, 0x6e, 0x6f, // = 0.0 ? _no
0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x78, 0x79, 0x20, 0x3a, 0x20, 0x6f, // rmal.xy : o
0x63, 0x74, 0x61, 0x68, 0x65, 0x64, 0x72, 0x6f, 0x6e, 0x57, 0x72, // ctahedronWr
0x61, 0x70, 0x28, 0x5f, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, // ap(_normal.
0x78, 0x79, 0x29, 0x3b, 0x0a, 0x5f, 0x6e, 0x6f, 0x72, 0x6d, 0x61, // xy);._norma
0x6c, 0x2e, 0x78, 0x79, 0x20, 0x3d, 0x20, 0x5f, 0x6e, 0x6f, 0x72, // l.xy = _nor
0x6d, 0x61, 0x6c, 0x2e, 0x78, 0x79, 0x20, 0x2a, 0x20, 0x30, 0x2e, // mal.xy * 0.
0x35, 0x20, 0x2b, 0x20, 0x30, 0x2e, 0x35, 0x3b, 0x0a, 0x72, 0x65, // 5 + 0.5;.re
0x74, 0x75, 0x72, 0x6e, 0x20, 0x5f, 0x6e, 0x6f, 0x72, 0x6d, 0x61, // turn _norma
0x6c, 0x2e, 0x78, 0x79, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, // l.xy;.}.vec
0x33, 0x20, 0x64, 0x65, 0x63, 0x6f, 0x64, 0x65, 0x4e, 0x6f, 0x72, // 3 decodeNor
0x6d, 0x61, 0x6c, 0x4f, 0x63, 0x74, 0x61, 0x68, 0x65, 0x64, 0x72, // malOctahedr
0x6f, 0x6e, 0x28, 0x76, 0x65, 0x63, 0x32, 0x20, 0x5f, 0x65, 0x6e, // on(vec2 _en
0x63, 0x6f, 0x64, 0x65, 0x64, 0x4e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, // codedNormal
0x29, 0x0a, 0x7b, 0x0a, 0x5f, 0x65, 0x6e, 0x63, 0x6f, 0x64, 0x65, // ).{._encode
0x64, 0x4e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x20, 0x3d, 0x20, 0x5f, // dNormal = _
0x65, 0x6e, 0x63, 0x6f, 0x64, 0x65, 0x64, 0x4e, 0x6f, 0x72, 0x6d, // encodedNorm
0x61, 0x6c, 0x20, 0x2a, 0x20, 0x32, 0x2e, 0x30, 0x20, 0x2d, 0x20, // al * 2.0 -
0x31, 0x2e, 0x30, 0x3b, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x6e, // 1.0;.vec3 n
0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x3b, 0x0a, 0x6e, 0x6f, 0x72, 0x6d, // ormal;.norm
0x61, 0x6c, 0x2e, 0x7a, 0x20, 0x3d, 0x20, 0x31, 0x2e, 0x30, 0x20, // al.z = 1.0
0x2d, 0x20, 0x61, 0x62, 0x73, 0x28, 0x5f, 0x65, 0x6e, 0x63, 0x6f, // - abs(_enco
0x64, 0x65, 0x64, 0x4e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x78, // dedNormal.x
0x29, 0x20, 0x2d, 0x20, 0x61, 0x62, 0x73, 0x28, 0x5f, 0x65, 0x6e, // ) - abs(_en
0x63, 0x6f, 0x64, 0x65, 0x64, 0x4e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, // codedNormal
0x2e, 0x79, 0x29, 0x3b, 0x0a, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, // .y);.normal
0x2e, 0x78, 0x79, 0x20, 0x3d, 0x20, 0x6e, 0x6f, 0x72, 0x6d, 0x61, // .xy = norma
0x6c, 0x2e, 0x7a, 0x20, 0x3e, 0x3d, 0x20, 0x30, 0x2e, 0x30, 0x20, // l.z >= 0.0
0x3f, 0x20, 0x5f, 0x65, 0x6e, 0x63, 0x6f, 0x64, 0x65, 0x64, 0x4e, // ? _encodedN
0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x78, 0x79, 0x20, 0x3a, 0x20, // ormal.xy :
0x6f, 0x63, 0x74, 0x61, 0x68, 0x65, 0x64, 0x72, 0x6f, 0x6e, 0x57, // octahedronW
0x72, 0x61, 0x70, 0x28, 0x5f, 0x65, 0x6e, 0x63, 0x6f, 0x64, 0x65, // rap(_encode
0x64, 0x4e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x78, 0x79, 0x29, // dNormal.xy)
0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x6e, 0x6f, // ;.return no
0x72, 0x6d, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x28, 0x6e, 0x6f, 0x72, // rmalize(nor
0x6d, 0x61, 0x6c, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, // mal);.}.vec
0x33, 0x20, 0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x74, 0x52, 0x47, // 3 convertRG
0x42, 0x32, 0x58, 0x59, 0x5a, 0x28, 0x76, 0x65, 0x63, 0x33, 0x20, // B2XYZ(vec3
0x5f, 0x72, 0x67, 0x62, 0x29, 0x0a, 0x7b, 0x0a, 0x76, 0x65, 0x63, // _rgb).{.vec
0x33, 0x20, 0x78, 0x79, 0x7a, 0x3b, 0x0a, 0x78, 0x79, 0x7a, 0x2e, // 3 xyz;.xyz.
0x78, 0x20, 0x3d, 0x20, 0x64, 0x6f, 0x74, 0x28, 0x76, 0x65, 0x63, // x = dot(vec
0x33, 0x28, 0x30, 0x2e, 0x34, 0x31, 0x32, 0x34, 0x35, 0x36, 0x34, // 3(0.4124564
0x2c, 0x20, 0x30, 0x2e, 0x33, 0x35, 0x37, 0x35, 0x37, 0x36, 0x31, // , 0.3575761
0x2c, 0x20, 0x30, 0x2e, 0x31, 0x38, 0x30, 0x34, 0x33, 0x37, 0x35, // , 0.1804375
0x29, 0x2c, 0x20, 0x5f, 0x72, 0x67, 0x62, 0x29, 0x3b, 0x0a, 0x78, // ), _rgb);.x
0x79, 0x7a, 0x2e, 0x79, 0x20, 0x3d, 0x20, 0x64, 0x6f, 0x74, 0x28, // yz.y = dot(
0x76, 0x65, 0x63, 0x33, 0x28, 0x30, 0x2e, 0x32, 0x31, 0x32, 0x36, // vec3(0.2126
0x37, 0x32, 0x39, 0x2c, 0x20, 0x30, 0x2e, 0x37, 0x31, 0x35, 0x31, // 729, 0.7151
0x35, 0x32, 0x32, 0x2c, 0x20, 0x30, 0x2e, 0x30, 0x37, 0x32, 0x31, // 522, 0.0721
0x37, 0x35, 0x30, 0x29, 0x2c, 0x20, 0x5f, 0x72, 0x67, 0x62, 0x29, // 750), _rgb)
0x3b, 0x0a, 0x78, 0x79, 0x7a, 0x2e, 0x7a, 0x20, 0x3d, 0x20, 0x64, // ;.xyz.z = d
0x6f, 0x74, 0x28, 0x76, 0x65, 0x63, 0x33, 0x28, 0x30, 0x2e, 0x30, // ot(vec3(0.0
0x31, 0x39, 0x33, 0x33, 0x33, 0x39, 0x2c, 0x20, 0x30, 0x2e, 0x31, // 193339, 0.1
0x31, 0x39, 0x31, 0x39, 0x32, 0x30, 0x2c, 0x20, 0x30, 0x2e, 0x39, // 191920, 0.9
0x35, 0x30, 0x33, 0x30, 0x34, 0x31, 0x29, 0x2c, 0x20, 0x5f, 0x72, // 503041), _r
0x67, 0x62, 0x29, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, // gb);.return
0x20, 0x78, 0x79, 0x7a, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, //  xyz;.}.vec
0x33, 0x20, 0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x74, 0x58, 0x59, // 3 convertXY
0x5a, 0x32, 0x52, 0x47, 0x42, 0x28, 0x76, 0x65, 0x63, 0x33, 0x20, // Z2RGB(vec3
0x5f, 0x78, 0x79, 0x7a, 0x29, 0x0a, 0x7b, 0x0a, 0x76, 0x65, 0x63, // _xyz).{.vec
0x33, 0x20, 0x72, 0x67, 0x62, 0x3b, 0x0a, 0x72, 0x67, 0x62, 0x2e, // 3 rgb;.rgb.
0x78, 0x20, 0x3d, 0x20, 0x64, 0x6f, 0x74, 0x28, 0x76, 0x65, 0x63, // x = dot(vec
0x33, 0x28, 0x20, 0x33, 0x2e, 0x32, 0x34, 0x30, 0x34, 0x35, 0x34, // 3( 3.240454
0x32, 0x2c, 0x20, 0x2d, 0x31, 0x2e, 0x35, 0x33, 0x37, 0x31, 0x33, // 2, -1.53713
0x38, 0x35, 0x2c, 0x20, 0x2d, 0x30, 0x2e, 0x34, 0x39, 0x38, 0x35, // 85, -0.4985
0x33, 0x31, 0x34, 0x29, 0x2c, 0x20, 0x5f, 0x78, 0x79, 0x7a, 0x29, // 314), _xyz)
0x3b, 0x0a, 0x72, 0x67, 0x62, 0x2e, 0x79, 0x20, 0x3d, 0x20, 0x64, // ;.rgb.y = d
0x6f, 0x74, 0x28, 0x76, 0x65, 0x63, 0x33, 0x28, 0x2d, 0x30, 0x2e, // ot(vec3(-0.
0x39, 0x36, 0x39, 0x32, 0x36, 0x36, 0x30, 0x2c, 0x20, 0x31, 0x2e, // 9692660, 1.
0x38, 0x37, 0x36, 0x30, 0x31, 0x30, 0x38, 0x2c, 0x20, 0x30, 0x2e, // 8760108, 0.
0x30, 0x34, 0x31, 0x35, 0x35, 0x36, 0x30, 0x29, 0x2c, 0x20, 0x5f, // 0415560), _
0x78, 0x79, 0x7a, 0x29, 0x3b, 0x0a, 0x72, 0x67, 0x62, 0x2e, 0x7a, // xyz);.rgb.z
0x20, 0x3d, 0x20, 0x64, 0x6f, 0x74, 0x28, 0x76, 0x65, 0x63, 0x33, //  = dot(vec3
0x28, 0x20, 0x30, 0x2e, 0x30, 0x35, 0x35, 0x36, 0x34, 0x33, 0x34, // ( 0.0556434
0x2c, 0x20, 0x2d, 0x30, 0x2e, 0x32, 0x30, 0x34, 0x30, 0x32, 0x35, // , -0.204025
0x39, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x35, 0x37, 0x32, 0x32, 0x35, // 9, 1.057225
0x32, 0x29, 0x2c, 0x20, 0x5f, 0x78, 0x79, 0x7a, 0x29, 0x3b, 0x0a, // 2), _xyz);.
0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x72, 0x67, 0x62, 0x3b, // return rgb;
0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x63, 0x6f, 0x6e, // .}.vec3 con
0x76, 0x65, 0x72, 0x74, 0x58, 0x59, 0x5a, 0x32, 0x59, 0x78, 0x79, // vertXYZ2Yxy
0x28, 0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, 0x78, 0x79, 0x7a, 0x29, // (vec3 _xyz)
0x0a, 0x7b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x69, 0x6e, // .{.float in
0x76, 0x20, 0x3d, 0x20, 0x31, 0x2e, 0x30, 0x2f, 0x64, 0x6f, 0x74, // v = 1.0/dot
0x28, 0x5f, 0x78, 0x79, 0x7a, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, // (_xyz, vec3
0x28, 0x31, 0x2e, 0x30, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x2c, 0x20, // (1.0, 1.0,
0x31, 0x2e, 0x30, 0x29, 0x20, 0x29, 0x3b, 0x0a, 0x72, 0x65, 0x74, // 1.0) );.ret
0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x33, 0x28, 0x5f, 0x78, // urn vec3(_x
0x79, 0x7a, 0x2e, 0x79, 0x2c, 0x20, 0x5f, 0x78, 0x79, 0x7a, 0x2e, // yz.y, _xyz.
0x78, 0x2a, 0x69, 0x6e, 0x76, 0x2c, 0x20, 0x5f, 0x78, 0x79, 0x7a, // x*inv, _xyz
0x2e, 0x79, 0x2a, 0x69, 0x6e, 0x76, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, // .y*inv);.}.
0x76, 0x65, 0x63, 0x33, 0x20, 0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72, // vec3 conver
0x74, 0x59, 0x78, 0x79, 0x32, 0x58, 0x59, 0x5a, 0x28, 0x76, 0x65, // tYxy2XYZ(ve
0x63, 0x33, 0x20, 0x5f, 0x59, 0x78, 0x79, 0x29, 0x0a, 0x7b, 0x0a, // c3 _Yxy).{.
0x76, 0x65, 0x63, 0x33, 0x20, 0x78, 0x79, 0x7a, 0x3b, 0x0a, 0x78, // vec3 xyz;.x
0x79, 0x7a, 0x2e, 0x78, 0x20, 0x3d, 0x20, 0x5f, 0x59, 0x78, 0x79, // yz.x = _Yxy
0x2e, 0x78, 0x2a, 0x5f, 0x59, 0x78, 0x79, 0x2e, 0x79, 0x2f, 0x5f, // .x*_Yxy.y/_
0x59, 0x78, 0x79, 0x2e, 0x7a, 0x3b, 0x0a, 0x78, 0x79, 0x7a, 0x2e, // Yxy.z;.xyz.
0x79, 0x20, 0x3d, 0x20, 0x5f, 0x59, 0x78, 0x79, 0x2e, 0x78, 0x3b, // y = _Yxy.x;
0x0a, 0x78, 0x79, 0x7a, 0x2e, 0x7a, 0x20, 0x3d, 0x20, 0x5f, 0x59, // .xyz.z = _Y
0x78, 0x79, 0x2e, 0x78, 0x2a, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, // xy.x*(1.0 -
0x20, 0x5f, 0x59, 0x78, 0x79, 0x2e, 0x79, 0x20, 0x2d, 0x20, 0x5f, //  _Yxy.y - _
0x59, 0x78, 0x79, 0x2e, 0x7a, 0x29, 0x2f, 0x5f, 0x59, 0x78, 0x79, // Yxy.z)/_Yxy
0x2e, 0x7a, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, // .z;.return
0x78, 0x79, 0x7a, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, // xyz;.}.vec3
0x20, 0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x74, 0x52, 0x47, 0x42, //  convertRGB
0x32, 0x59, 0x78, 0x79, 0x28, 0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, // 2Yxy(vec3 _
0x72, 0x67, 0x62, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, // rgb).{.retu
0x72, 0x6e, 0x20, 0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x74, 0x58, // rn convertX
0x59, 0x5a, 0x32, 0x59, 0x78, 0x79, 0x28, 0x63, 0x6f, 0x6e, 0x76, // YZ2Yxy(conv
0x65, 0x72, 0x74, 0x52, 0x47, 0x42, 0x32, 0x58, 0x59, 0x5a, 0x28, // ertRGB2XYZ(
0x5f, 0x72, 0x67, 0x62, 0x29, 0x20, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, // _rgb) );.}.
0x76, 0x65, 0x63, 0x33, 0x20, 0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72, // vec3 conver
0x74, 0x59, 0x78, 0x79, 0x32, 0x52, 0x47, 0x42, 0x28, 0x76, 0x65, // tYxy2RGB(ve
0x63, 0x33, 0x20, 0x5f, 0x59, 0x78, 0x79, 0x29, 0x0a, 0x7b, 0x0a, // c3 _Yxy).{.
0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x63, 0x6f, 0x6e, 0x76, // return conv
0x65, 0x72, 0x74, 0x58, 0x59, 0x5a, 0x32, 0x52, 0x47, 0x42, 0x28, // ertXYZ2RGB(
0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x74, 0x59, 0x78, 0x79, 0x32, // convertYxy2
0x58, 0x59, 0x5a, 0x28, 0x5f, 0x59, 0x78, 0x79, 0x29, 0x20, 0x29, // XYZ(_Yxy) )
0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x63, 0x6f, // ;.}.vec3 co
0x6e, 0x76, 0x65, 0x72, 0x74, 0x52, 0x47, 0x42, 0x32, 0x59, 0x75, // nvertRGB2Yu
0x76, 0x28, 0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, 0x72, 0x67, 0x62, // v(vec3 _rgb
0x29, 0x0a, 0x7b, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x79, 0x75, // ).{.vec3 yu
0x76, 0x3b, 0x0a, 0x79, 0x75, 0x76, 0x2e, 0x78, 0x20, 0x3d, 0x20, // v;.yuv.x =
0x64, 0x6f, 0x74, 0x28, 0x5f, 0x72, 0x67, 0x62, 0x2c, 0x20, 0x76, // dot(_rgb, v
0x65, 0x63, 0x33, 0x28, 0x30, 0x2e, 0x32, 0x39, 0x39, 0x2c, 0x20, // ec3(0.299,
0x30, 0x2e, 0x35, 0x38, 0x37, 0x2c, 0x20, 0x30, 0x2e, 0x31, 0x31, // 0.587, 0.11
0x34, 0x29, 0x20, 0x29, 0x3b, 0x0a, 0x79, 0x75, 0x76, 0x2e, 0x79, // 4) );.yuv.y
0x20, 0x3d, 0x20, 0x28, 0x5f, 0x72, 0x67, 0x62, 0x2e, 0x78, 0x20, //  = (_rgb.x
0x2d, 0x20, 0x79, 0x75, 0x76, 0x2e, 0x78, 0x29, 0x2a, 0x30, 0x2e, // - yuv.x)*0.
0x37, 0x31, 0x33, 0x20, 0x2b, 0x20, 0x30, 0x2e, 0x35, 0x3b, 0x0a, // 713 + 0.5;.
0x79, 0x75, 0x76, 0x2e, 0x7a, 0x20, 0x3d, 0x20, 0x28, 0x5f, 0x72, // yuv.z = (_r
0x67, 0x62, 0x2e, 0x7a, 0x20, 0x2d, 0x20, 0x79, 0x75, 0x76, 0x2e, // gb.z - yuv.
0x78, 0x29, 0x2a, 0x30, 0x2e, 0x35, 0x36, 0x34, 0x20, 0x2b, 0x20, // x)*0.564 +
0x30, 0x2e, 0x35, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, // 0.5;.return
0x20, 0x79, 0x75, 0x76, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, //  yuv;.}.vec
0x33, 0x20, 0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x74, 0x59, 0x75, // 3 convertYu
0x76, 0x32, 0x52, 0x47, 0x42, 0x28, 0x76, 0x65, 0x63, 0x33, 0x20, // v2RGB(vec3
0x5f, 0x79, 0x75, 0x76, 0x29, 0x0a, 0x7b, 0x0a, 0x76, 0x65, 0x63, // _yuv).{.vec
0x33, 0x20, 0x72, 0x67, 0x62, 0x3b, 0x0a, 0x72, 0x67, 0x62, 0x2e, // 3 rgb;.rgb.
0x78, 0x20, 0x3d, 0x20, 0x5f, 0x79, 0x75, 0x76, 0x2e, 0x78, 0x20, // x = _yuv.x
0x2b, 0x20, 0x31, 0x2e, 0x34, 0x30, 0x33, 0x2a, 0x28, 0x5f, 0x79, // + 1.403*(_y
0x75, 0x76, 0x2e, 0x79, 0x2d, 0x30, 0x2e, 0x35, 0x29, 0x3b, 0x0a, // uv.y-0.5);.
0x72, 0x67, 0x62, 0x2e, 0x79, 0x20, 0x3d, 0x20, 0x5f, 0x79, 0x75, // rgb.y = _yu
0x76, 0x2e, 0x78, 0x20, 0x2d, 0x20, 0x30, 0x2e, 0x33, 0x34, 0x34, // v.x - 0.344
0x2a, 0x28, 0x5f, 0x79, 0x75, 0x76, 0x2e, 0x79, 0x2d, 0x30, 0x2e, // *(_yuv.y-0.
0x35, 0x29, 0x20, 0x2d, 0x20, 0x30, 0x2e, 0x37, 0x31, 0x34, 0x2a, // 5) - 0.714*
0x28, 0x5f, 0x79, 0x75, 0x76, 0x2e, 0x7a, 0x2d, 0x30, 0x2e, 0x35, // (_yuv.z-0.5
0x29, 0x3b, 0x0a, 0x72, 0x67, 0x62, 0x2e, 0x7a, 0x20, 0x3d, 0x20, // );.rgb.z =
0x5f, 0x79, 0x75, 0x76, 0x2e, 0x78, 0x20, 0x2b, 0x20, 0x31, 0x2e, // _yuv.x + 1.
0x37, 0x37, 0x33, 0x2a, 0x28, 0x5f, 0x79, 0x75, 0x76, 0x2e, 0x7a, // 773*(_yuv.z
0x2d, 0x30, 0x2e, 0x35, 0x29, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, // -0.5);.retu
0x72, 0x6e, 0x20, 0x72, 0x67, 0x62, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, // rn rgb;.}.v
0x65, 0x63, 0x33, 0x20, 0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x74, // ec3 convert
0x52, 0x47, 0x42, 0x32, 0x59, 0x49, 0x51, 0x28, 0x76, 0x65, 0x63, // RGB2YIQ(vec
0x33, 0x20, 0x5f, 0x72, 0x67, 0x62, 0x29, 0x0a, 0x7b, 0x0a, 0x76, // 3 _rgb).{.v
0x65, 0x63, 0x33, 0x20, 0x79, 0x69, 0x71, 0x3b, 0x0a, 0x79, 0x69, // ec3 yiq;.yi
0x71, 0x2e, 0x78, 0x20, 0x3d, 0x20, 0x64, 0x6f, 0x74, 0x28, 0x76, // q.x = dot(v
0x65, 0x63, 0x33, 0x28, 0x30, 0x2e, 0x32, 0x39, 0x39, 0x2c, 0x20, // ec3(0.299,
0x30, 0x2e, 0x35, 0x38, 0x37, 0x2c, 0x20, 0x30, 0x2e, 0x31, 0x31, // 0.587, 0.11
0x34, 0x20, 0x29, 0x2c, 0x20, 0x5f, 0x72, 0x67, 0x62, 0x29, 0x3b, // 4 ), _rgb);
0x0a, 0x79, 0x69, 0x71, 0x2e, 0x79, 0x20, 0x3d, 0x20, 0x64, 0x6f, // .yiq.y = do
0x74, 0x28, 0x76, 0x65, 0x63, 0x33, 0x28, 0x30, 0x2e, 0x35, 0x39, // t(vec3(0.59
0x35, 0x37, 0x31, 0x36, 0x2c, 0x20, 0x2d, 0x30, 0x2e, 0x32, 0x37, // 5716, -0.27
0x34, 0x34, 0x35, 0x33, 0x2c, 0x20, 0x2d, 0x30, 0x2e, 0x33, 0x32, // 4453, -0.32
0x31, 0x32, 0x36, 0x33, 0x29, 0x2c, 0x20, 0x5f, 0x72, 0x67, 0x62, // 1263), _rgb
0x29, 0x3b, 0x0a, 0x79, 0x69, 0x71, 0x2e, 0x7a, 0x20, 0x3d, 0x20, // );.yiq.z =
0x64, 0x6f, 0x74, 0x28, 0x76, 0x65, 0x63, 0x33, 0x28, 0x30, 0x2e, // dot(vec3(0.
0x32, 0x31, 0x31, 0x34, 0x35, 0x36, 0x2c, 0x20, 0x2d, 0x30, 0x2e, // 211456, -0.
0x35, 0x32, 0x32, 0x35, 0x39, 0x31, 0x2c, 0x20, 0x30, 0x2e, 0x33, // 522591, 0.3
0x31, 0x31, 0x31, 0x33, 0x35, 0x29, 0x2c, 0x20, 0x5f, 0x72, 0x67, // 11135), _rg
0x62, 0x29, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, // b);.return
0x79, 0x69, 0x71, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, // yiq;.}.vec3
0x20, 0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x74, 0x59, 0x49, 0x51, //  convertYIQ
0x32, 0x52, 0x47, 0x42, 0x28, 0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, // 2RGB(vec3 _
0x79, 0x69, 0x71, 0x29, 0x0a, 0x7b, 0x0a, 0x76, 0x65, 0x63, 0x33, // yiq).{.vec3
0x20, 0x72, 0x67, 0x62, 0x3b, 0x0a, 0x72, 0x67, 0x62, 0x2e, 0x78, //  rgb;.rgb.x
0x20, 0x3d, 0x20, 0x64, 0x6f, 0x74, 0x28, 0x76, 0x65, 0x63, 0x33, //  = dot(vec3
0x28, 0x31, 0x2e, 0x30, 0x2c, 0x20, 0x30, 0x2e, 0x39, 0x35, 0x36, // (1.0, 0.956
0x33, 0x2c, 0x20, 0x30, 0x2e, 0x36, 0x32, 0x31, 0x30, 0x29, 0x2c, // 3, 0.6210),
0x20, 0x5f, 0x79, 0x69, 0x71, 0x29, 0x3b, 0x0a, 0x72, 0x67, 0x62, //  _yiq);.rgb
0x2e, 0x79, 0x20, 0x3d, 0x20, 0x64, 0x6f, 0x74, 0x28, 0x76, 0x65, // .y = dot(ve
0x63, 0x33, 0x28, 0x31, 0x2e, 0x30, 0x2c, 0x20, 0x2d, 0x30, 0x2e, // c3(1.0, -0.
0x32, 0x37, 0x32, 0x31, 0x2c, 0x20, 0x2d, 0x30, 0x2e, 0x36, 0x34, // 2721, -0.64
0x37, 0x34, 0x29, 0x2c, 0x20, 0x5f, 0x79, 0x69, 0x71, 0x29, 0x3b, // 74), _yiq);
0x0a, 0x72, 0x67, 0x62, 0x2e, 0x7a, 0x20, 0x3d, 0x20, 0x64, 0x6f, // .rgb.z = do
0x74, 0x28, 0x76, 0x65, 0x63, 0x33, 0x28, 0x31, 0x2e, 0x30, 0x2c, // t(vec3(1.0,
0x20, 0x2d, 0x31, 0x2e, 0x31, 0x30, 0x37, 0x30, 0x2c, 0x20, 0x31, //  -1.1070, 1
0x2e, 0x37, 0x30, 0x34, 0x36, 0x29, 0x2c, 0x20, 0x5f, 0x79, 0x69, // .7046), _yi
0x71, 0x29, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, // q);.return
0x72, 0x67, 0x62, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, // rgb;.}.vec3
0x20, 0x74, 0x6f, 0x4c, 0x69, 0x6e, 0x65, 0x61, 0x72, 0x28, 0x76, //  toLinear(v
0x65, 0x63, 0x33, 0x20, 0x5f, 0x72, 0x67, 0x62, 0x29, 0x0a, 0x7b, // ec3 _rgb).{
0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x70, 0x6f, 0x77, // .return pow
0x28, 0x61, 0x62, 0x73, 0x28, 0x5f, 0x72, 0x67, 0x62, 0x29, 0x2c, // (abs(_rgb),
0x20, 0x76, 0x65, 0x63, 0x33, 0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, //  vec3_splat
0x28, 0x32, 0x2e, 0x32, 0x29, 0x20, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, // (2.2) );.}.
0x76, 0x65, 0x63, 0x34, 0x20, 0x74, 0x6f, 0x4c, 0x69, 0x6e, 0x65, // vec4 toLine
0x61, 0x72, 0x28, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x72, 0x67, // ar(vec4 _rg
0x62, 0x61, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, // ba).{.retur
0x6e, 0x20, 0x76, 0x65, 0x63, 0x34, 0x28, 0x74, 0x6f, 0x4c, 0x69, // n vec4(toLi
0x6e, 0x65, 0x61, 0x72, 0x28, 0x5f, 0x72, 0x67, 0x62, 0x61, 0x2e, // near(_rgba.
0x78, 0x79, 0x7a, 0x29, 0x2c, 0x20, 0x5f, 0x72, 0x67, 0x62, 0x61, // xyz), _rgba
0x2e, 0x77, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, // .w);.}.vec3
0x20, 0x74, 0x6f, 0x4c, 0x69, 0x6e, 0x65, 0x61, 0x72, 0x41, 0x63, //  toLinearAc
0x63, 0x75, 0x72, 0x61, 0x74, 0x65, 0x28, 0x76, 0x65, 0x63, 0x33, // curate(vec3
0x20, 0x5f, 0x72, 0x67, 0x62, 0x29, 0x0a, 0x7b, 0x0a, 0x76, 0x65, //  _rgb).{.ve
0x63, 0x33, 0x20, 0x6c, 0x6f, 0x20, 0x3d, 0x20, 0x5f, 0x72, 0x67, // c3 lo = _rg
0x62, 0x20, 0x2f, 0x20, 0x31, 0x32, 0x2e, 0x39, 0x32, 0x3b, 0x0a, // b / 12.92;.
0x76, 0x65, 0x63, 0x33, 0x20, 0x68, 0x69, 0x20, 0x3d, 0x20, 0x70, // vec3 hi = p
0x6f, 0x77, 0x28, 0x20, 0x28, 0x5f, 0x72, 0x67, 0x62, 0x20, 0x2b, // ow( (_rgb +
0x20, 0x30, 0x2e, 0x30, 0x35, 0x35, 0x29, 0x20, 0x2f, 0x20, 0x31, //  0.055) / 1
0x2e, 0x30, 0x35, 0x35, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, 0x5f, // .055, vec3_
0x73, 0x70, 0x6c, 0x61, 0x74, 0x28, 0x32, 0x2e, 0x34, 0x29, 0x20, // splat(2.4)
0x29, 0x3b, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x72, 0x67, 0x62, // );.vec3 rgb
0x20, 0x3d, 0x20, 0x6d, 0x69, 0x78, 0x28, 0x68, 0x69, 0x2c, 0x20, //  = mix(hi,
0x6c, 0x6f, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, 0x28, 0x6c, 0x65, // lo, vec3(le
0x73, 0x73, 0x54, 0x68, 0x61, 0x6e, 0x45, 0x71, 0x75, 0x61, 0x6c, // ssThanEqual
0x28, 0x5f, 0x72, 0x67, 0x62, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, // (_rgb, vec3
0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, 0x28, 0x30, 0x2e, 0x30, 0x34, // _splat(0.04
0x30, 0x34, 0x35, 0x29, 0x20, 0x29, 0x20, 0x29, 0x20, 0x29, 0x3b, // 045) ) ) );
0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x72, 0x67, 0x62, // .return rgb
0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x74, 0x6f, // ;.}.vec4 to
0x4c, 0x69, 0x6e, 0x65, 0x61, 0x72, 0x41, 0x63, 0x63, 0x75, 0x72, // LinearAccur
0x61, 0x74, 0x65, 0x28, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x72, // ate(vec4 _r
0x67, 0x62, 0x61, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, // gba).{.retu
0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x34, 0x28, 0x74, 0x6f, 0x4c, // rn vec4(toL
0x69, 0x6e, 0x65, 0x61, 0x72, 0x41, 0x63, 0x63, 0x75, 0x72, 0x61, // inearAccura
0x74, 0x65, 0x28, 0x5f, 0x72, 0x67, 0x62, 0x61, 0x2e, 0x78, 0x79, // te(_rgba.xy
0x7a, 0x29, 0x2c, 0x20, 0x5f, 0x72, 0x67, 0x62, 0x61, 0x2e, 0x77, // z), _rgba.w
0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, // );.}.float
0x74, 0x6f, 0x47, 0x61, 0x6d, 0x6d, 0x61, 0x28, 0x66, 0x6c, 0x6f, // toGamma(flo
0x61, 0x74, 0x20, 0x5f, 0x72, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, // at _r).{.re
0x74, 0x75, 0x72, 0x6e, 0x20, 0x70, 0x6f, 0x77, 0x28, 0x61, 0x62, // turn pow(ab
0x73, 0x28, 0x5f, 0x72, 0x29, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x2f, // s(_r), 1.0/
0x32, 0x2e, 0x32, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, // 2.2);.}.vec
0x33, 0x20, 0x74, 0x6f, 0x47, 0x61, 0x6d, 0x6d, 0x61, 0x28, 0x76, // 3 toGamma(v
0x65, 0x63, 0x33, 0x20, 0x5f, 0x72, 0x67, 0x62, 0x29, 0x0a, 0x7b, // ec3 _rgb).{
0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x70, 0x6f, 0x77, // .return pow
0x28, 0x61, 0x62, 0x73, 0x28, 0x5f, 0x72, 0x67, 0x62, 0x29, 0x2c, // (abs(_rgb),
0x20, 0x76, 0x65, 0x63, 0x33, 0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, //  vec3_splat
0x28, 0x31, 0x2e, 0x30, 0x2f, 0x32, 0x2e, 0x32, 0x29, 0x20, 0x29, // (1.0/2.2) )
0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x74, 0x6f, // ;.}.vec4 to
0x47, 0x61, 0x6d, 0x6d, 0x61, 0x28, 0x76, 0x65, 0x63, 0x34, 0x20, // Gamma(vec4
0x5f, 0x72, 0x67, 0x62, 0x61, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, // _rgba).{.re
0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x34, 0x28, 0x74, // turn vec4(t
0x6f, 0x47, 0x61, 0x6d, 0x6d, 0x61, 0x28, 0x5f, 0x72, 0x67, 0x62, // oGamma(_rgb
0x61, 0x2e, 0x78, 0x79, 0x7a, 0x29, 0x2c, 0x20, 0x5f, 0x72, 0x67, // a.xyz), _rg
0x62, 0x61, 0x2e, 0x77, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, // ba.w);.}.ve
0x63, 0x33, 0x20, 0x74, 0x6f, 0x47, 0x61, 0x6d, 0x6d, 0x61, 0x41, // c3 toGammaA
0x63, 0x63, 0x75, 0x72, 0x61, 0x74, 0x65, 0x28, 0x76, 0x65, 0x63, // ccurate(vec
0x33, 0x20, 0x5f, 0x72, 0x67, 0x62, 0x29, 0x0a, 0x7b, 0x0a, 0x76, // 3 _rgb).{.v
0x65, 0x63, 0x33, 0x20, 0x6c, 0x6f, 0x20, 0x3d, 0x20, 0x5f, 0x72, // ec3 lo = _r
0x67, 0x62, 0x20, 0x2a, 0x20, 0x31, 0x32, 0x2e, 0x39, 0x32, 0x3b, // gb * 12.92;
0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x68, 0x69, 0x20, 0x3d, 0x20, // .vec3 hi =
0x70, 0x6f, 0x77, 0x28, 0x61, 0x62, 0x73, 0x28, 0x5f, 0x72, 0x67, // pow(abs(_rg
0x62, 0x29, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, 0x5f, 0x73, 0x70, // b), vec3_sp
0x6c, 0x61, 0x74, 0x28, 0x31, 0x2e, 0x30, 0x2f, 0x32, 0x2e, 0x34, // lat(1.0/2.4
0x29, 0x20, 0x29, 0x20, 0x2a, 0x20, 0x31, 0x2e, 0x30, 0x35, 0x35, // ) ) * 1.055
0x20, 0x2d, 0x20, 0x30, 0x2e, 0x30, 0x35, 0x35, 0x3b, 0x0a, 0x76, //  - 0.055;.v
0x65, 0x63, 0x33, 0x20, 0x72, 0x67, 0x62, 0x20, 0x3d, 0x20, 0x6d, // ec3 rgb = m
0x69, 0x78, 0x28, 0x68, 0x69, 0x2c, 0x20, 0x6c, 0x6f, 0x2c, 0x20, // ix(hi, lo,
0x76, 0x65, 0x63, 0x33, 0x28, 0x6c, 0x65, 0x73, 0x73, 0x54, 0x68, // vec3(lessTh
0x61, 0x6e, 0x45, 0x71, 0x75, 0x61, 0x6c, 0x28, 0x5f, 0x72, 0x67, // anEqual(_rg
0x62, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, 0x5f, 0x73, 0x70, 0x6c, // b, vec3_spl
0x61, 0x74, 0x28, 0x30, 0x2e, 0x30, 0x30, 0x33, 0x31, 0x33, 0x30, // at(0.003130
0x38, 0x29, 0x20, 0x29, 0x20, 0x29, 0x20, 0x29, 0x3b, 0x0a, 0x72, // 8) ) ) );.r
0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x72, 0x67, 0x62, 0x3b, 0x0a, // eturn rgb;.
0x7d, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x74, 0x6f, 0x47, 0x61, // }.vec4 toGa
0x6d, 0x6d, 0x61, 0x41, 0x63, 0x63, 0x75, 0x72, 0x61, 0x74, 0x65, // mmaAccurate
0x28, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x72, 0x67, 0x62, 0x61, // (vec4 _rgba
0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, // ).{.return
0x76, 0x65, 0x63, 0x34, 0x28, 0x74, 0x6f, 0x47, 0x61, 0x6d, 0x6d, // vec4(toGamm
0x61, 0x41, 0x63, 0x63, 0x75, 0x72, 0x61, 0x74, 0x65, 0x28, 0x5f, // aAccurate(_
0x72, 0x67, 0x62, 0x61, 0x2e, 0x78, 0x79, 0x7a, 0x29, 0x2c, 0x20, // rgba.xyz),
0x5f, 0x72, 0x67, 0x62, 0x61, 0x2e, 0x77, 0x29, 0x3b, 0x0a, 0x7d, // _rgba.w);.}
0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x74, 0x6f, 0x52, 0x65, 0x69, // .vec3 toRei
0x6e, 0x68, 0x61, 0x72, 0x64, 0x28, 0x76, 0x65, 0x63, 0x33, 0x20, // nhard(vec3
0x5f, 0x72, 0x67, 0x62, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, // _rgb).{.ret
0x75, 0x72, 0x6e, 0x20, 0x74, 0x6f, 0x47, 0x61, 0x6d, 0x6d, 0x61, // urn toGamma
0x28, 0x5f, 0x72, 0x67, 0x62, 0x2f, 0x28, 0x5f, 0x72, 0x67, 0x62, // (_rgb/(_rgb
0x2b, 0x76, 0x65, 0x63, 0x33, 0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, // +vec3_splat
0x28, 0x31, 0x2e, 0x30, 0x29, 0x20, 0x29, 0x20, 0x29, 0x3b, 0x0a, // (1.0) ) );.
0x7d, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x74, 0x6f, 0x52, 0x65, // }.vec4 toRe
0x69, 0x6e, 0x68, 0x61, 0x72, 0x64, 0x28, 0x76, 0x65, 0x63, 0x34, // inhard(vec4
0x20, 0x5f, 0x72, 0x67, 0x62, 0x61, 0x29, 0x0a, 0x7b, 0x0a, 0x72, //  _rgba).{.r
0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x34, 0x28, // eturn vec4(
0x74, 0x6f, 0x52, 0x65, 0x69, 0x6e, 0x68, 0x61, 0x72, 0x64, 0x28, // toReinhard(
0x5f, 0x72, 0x67, 0x62, 0x61, 0x2e, 0x78, 0x79, 0x7a, 0x29, 0x2c, // _rgba.xyz),
0x20, 0x5f, 0x72, 0x67, 0x62, 0x61, 0x2e, 0x77, 0x29, 0x3b, 0x0a, //  _rgba.w);.
0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x74, 0x6f, 0x46, 0x69, // }.vec3 toFi
0x6c, 0x6d, 0x69, 0x63, 0x28, 0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, // lmic(vec3 _
0x72, 0x67, 0x62, 0x29, 0x0a, 0x7b, 0x0a, 0x5f, 0x72, 0x67, 0x62, // rgb).{._rgb
0x20, 0x3d, 0x20, 0x6d, 0x61, 0x78, 0x28, 0x76, 0x65, 0x63, 0x33, //  = max(vec3
0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, 0x28, 0x30, 0x2e, 0x30, 0x29, // _splat(0.0)
0x2c, 0x20, 0x5f, 0x72, 0x67, 0x62, 0x20, 0x2d, 0x20, 0x30, 0x2e, // , _rgb - 0.
0x30, 0x30, 0x34, 0x29, 0x3b, 0x0a, 0x5f, 0x72, 0x67, 0x62, 0x20, // 004);._rgb
0x3d, 0x20, 0x28, 0x5f, 0x72, 0x67, 0x62, 0x2a, 0x28, 0x36, 0x2e, // = (_rgb*(6.
0x32, 0x2a, 0x5f, 0x72, 0x67, 0x62, 0x20, 0x2b, 0x20, 0x30, 0x2e, // 2*_rgb + 0.
0x35, 0x29, 0x20, 0x29, 0x20, 0x2f, 0x20, 0x28, 0x5f, 0x72, 0x67, // 5) ) / (_rg
0x62, 0x2a, 0x28, 0x36, 0x2e, 0x32, 0x2a, 0x5f, 0x72, 0x67, 0x62, // b*(6.2*_rgb
0x20, 0x2b, 0x20, 0x31, 0x2e, 0x37, 0x29, 0x20, 0x2b, 0x20, 0x30, //  + 1.7) + 0
0x2e, 0x30, 0x36, 0x29, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, // .06);.retur
0x6e, 0x20, 0x5f, 0x72, 0x67, 0x62, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, // n _rgb;.}.v
0x65, 0x63, 0x34, 0x20, 0x74, 0x6f, 0x46, 0x69, 0x6c, 0x6d, 0x69, // ec4 toFilmi
0x63, 0x28, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x72, 0x67, 0x62, // c(vec4 _rgb
0x61, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, // a).{.return
0x20, 0x76, 0x65, 0x63, 0x34, 0x28, 0x74, 0x6f, 0x46, 0x69, 0x6c, //  vec4(toFil
0x6d, 0x69, 0x63, 0x28, 0x5f, 0x72, 0x67, 0x62, 0x61, 0x2e, 0x78, // mic(_rgba.x
0x79, 0x7a, 0x29, 0x2c, 0x20, 0x5f, 0x72, 0x67, 0x62, 0x61, 0x2e, // yz), _rgba.
0x77, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, // w);.}.vec3
0x74, 0x6f, 0x41, 0x63, 0x65, 0x73, 0x46, 0x69, 0x6c, 0x6d, 0x69, // toAcesFilmi
0x63, 0x28, 0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, 0x72, 0x67, 0x62, // c(vec3 _rgb
0x29, 0x0a, 0x7b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x61, // ).{.float a
0x61, 0x20, 0x3d, 0x20, 0x32, 0x2e, 0x35, 0x31, 0x66, 0x3b, 0x0a, // a = 2.51f;.
0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x62, 0x62, 0x20, 0x3d, 0x20, // float bb =
0x30, 0x2e, 0x30, 0x33, 0x66, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, // 0.03f;.floa
0x74, 0x20, 0x63, 0x63, 0x20, 0x3d, 0x20, 0x32, 0x2e, 0x34, 0x33, // t cc = 2.43
0x66, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x64, 0x64, // f;.float dd
0x20, 0x3d, 0x20, 0x30, 0x2e, 0x35, 0x39, 0x66, 0x3b, 0x0a, 0x66, //  = 0.59f;.f
0x6c, 0x6f, 0x61, 0x74, 0x20, 0x65, 0x65, 0x20, 0x3d, 0x20, 0x30, // loat ee = 0
0x2e, 0x31, 0x34, 0x66, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, // .14f;.retur
0x6e, 0x20, 0x63, 0x6c, 0x61, 0x6d, 0x70, 0x28, 0x28, 0x5f, 0x72, // n clamp((_r
0x67, 0x62, 0x2a, 0x28, 0x61, 0x61, 0x2a, 0x5f, 0x72, 0x67, 0x62, // gb*(aa*_rgb
0x20, 0x2b, 0x20, 0x62, 0x62, 0x29, 0x20, 0x29, 0x2f, 0x28, 0x5f, //  + bb) )/(_
0x72, 0x67, 0x62, 0x2a, 0x28, 0x63, 0x63, 0x2a, 0x5f, 0x72, 0x67, // rgb*(cc*_rg
0x62, 0x20, 0x2b, 0x20, 0x64, 0x64, 0x29, 0x20, 0x2b, 0x20, 0x65, // b + dd) + e
0x65, 0x29, 0x20, 0x2c, 0x20, 0x30, 0x2e, 0x30, 0x2c, 0x20, 0x31, // e) , 0.0, 1
0x2e, 0x30, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x34, // .0);.}.vec4
0x20, 0x74, 0x6f, 0x41, 0x63, 0x65, 0x73, 0x46, 0x69, 0x6c, 0x6d, //  toAcesFilm
0x69, 0x63, 0x28, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x72, 0x67, // ic(vec4 _rg
0x62, 0x61, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, // ba).{.retur
0x6e, 0x20, 0x76, 0x65, 0x63, 0x34, 0x28, 0x74, 0x6f, 0x41, 0x63, // n vec4(toAc
0x65, 0x73, 0x46, 0x69, 0x6c, 0x6d, 0x69, 0x63, 0x28, 0x5f, 0x72, // esFilmic(_r
0x67, 0x62, 0x61, 0x2e, 0x78, 0x79, 0x7a, 0x29, 0x2c, 0x20, 0x5f, // gba.xyz), _
0x72, 0x67, 0x62, 0x61, 0x2e, 0x77, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, // rgba.w);.}.
0x76, 0x65, 0x63, 0x33, 0x20, 0x6c, 0x75, 0x6d, 0x61, 0x28, 0x76, // vec3 luma(v
0x65, 0x63, 0x33, 0x20, 0x5f, 0x72, 0x67, 0x62, 0x29, 0x0a, 0x7b, // ec3 _rgb).{
0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x79, 0x79, 0x20, 0x3d, // .float yy =
0x20, 0x64, 0x6f, 0x74, 0x28, 0x76, 0x65, 0x63, 0x33, 0x28, 0x30, //  dot(vec3(0
0x2e, 0x32, 0x31, 0x32, 0x36, 0x37, 0x32, 0x39, 0x2c, 0x20, 0x30, // .2126729, 0
0x2e, 0x37, 0x31, 0x35, 0x31, 0x35, 0x32, 0x32, 0x2c, 0x20, 0x30, // .7151522, 0
0x2e, 0x30, 0x37, 0x32, 0x31, 0x37, 0x35, 0x30, 0x29, 0x2c, 0x20, // .0721750),
0x5f, 0x72, 0x67, 0x62, 0x29, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, // _rgb);.retu
0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x33, 0x5f, 0x73, 0x70, 0x6c, // rn vec3_spl
0x61, 0x74, 0x28, 0x79, 0x79, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, // at(yy);.}.v
0x65, 0x63, 0x34, 0x20, 0x6c, 0x75, 0x6d, 0x61, 0x28, 0x76, 0x65, // ec4 luma(ve
0x63, 0x34, 0x20, 0x5f, 0x72, 0x67, 0x62, 0x61, 0x29, 0x0a, 0x7b, // c4 _rgba).{
0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, // .return vec
0x34, 0x28, 0x6c, 0x75, 0x6d, 0x61, 0x28, 0x5f, 0x72, 0x67, 0x62, // 4(luma(_rgb
0x61, 0x2e, 0x78, 0x79, 0x7a, 0x29, 0x2c, 0x20, 0x5f, 0x72, 0x67, // a.xyz), _rg
0x62, 0x61, 0x2e, 0x77, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, // ba.w);.}.ve
0x63, 0x33, 0x20, 0x63, 0x6f, 0x6e, 0x53, 0x61, 0x74, 0x42, 0x72, // c3 conSatBr
0x69, 0x28, 0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, 0x72, 0x67, 0x62, // i(vec3 _rgb
0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, 0x63, 0x73, 0x62, // , vec3 _csb
0x29, 0x0a, 0x7b, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x72, 0x67, // ).{.vec3 rg
0x62, 0x20, 0x3d, 0x20, 0x5f, 0x72, 0x67, 0x62, 0x20, 0x2a, 0x20, // b = _rgb *
0x5f, 0x63, 0x73, 0x62, 0x2e, 0x7a, 0x3b, 0x0a, 0x72, 0x67, 0x62, // _csb.z;.rgb
0x20, 0x3d, 0x20, 0x6d, 0x69, 0x78, 0x28, 0x6c, 0x75, 0x6d, 0x61, //  = mix(luma
0x28, 0x72, 0x67, 0x62, 0x29, 0x2c, 0x20, 0x72, 0x67, 0x62, 0x2c, // (rgb), rgb,
0x20, 0x5f, 0x63, 0x73, 0x62, 0x2e, 0x79, 0x29, 0x3b, 0x0a, 0x72, //  _csb.y);.r
0x67, 0x62, 0x20, 0x3d, 0x20, 0x6d, 0x69, 0x78, 0x28, 0x76, 0x65, // gb = mix(ve
0x63, 0x33, 0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, 0x28, 0x30, 0x2e, // c3_splat(0.
0x35, 0x29, 0x2c, 0x20, 0x72, 0x67, 0x62, 0x2c, 0x20, 0x5f, 0x63, // 5), rgb, _c
0x73, 0x62, 0x2e, 0x78, 0x29, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, // sb.x);.retu
0x72, 0x6e, 0x20, 0x72, 0x67, 0x62, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, // rn rgb;.}.v
0x65, 0x63, 0x34, 0x20, 0x63, 0x6f, 0x6e, 0x53, 0x61, 0x74, 0x42, // ec4 conSatB
0x72, 0x69, 0x28, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x72, 0x67, // ri(vec4 _rg
0x62, 0x61, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, 0x63, // ba, vec3 _c
0x73, 0x62, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, // sb).{.retur
0x6e, 0x20, 0x76, 0x65, 0x63, 0x34, 0x28, 0x63, 0x6f, 0x6e, 0x53, // n vec4(conS
0x61, 0x74, 0x42, 0x72, 0x69, 0x28, 0x5f, 0x72, 0x67, 0x62, 0x61, // atBri(_rgba
0x2e, 0x78, 0x79, 0x7a, 0x2c, 0x20, 0x5f, 0x63, 0x73, 0x62, 0x29, // .xyz, _csb)
0x2c, 0x20, 0x5f, 0x72, 0x67, 0x62, 0x61, 0x2e, 0x77, 0x29, 0x3b, // , _rgba.w);
0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x70, 0x6f, 0x73, // .}.vec3 pos
0x74, 0x65, 0x72, 0x69, 0x7a, 0x65, 0x28, 0x76, 0x65, 0x63, 0x33, // terize(vec3
0x20, 0x5f, 0x72, 0x67, 0x62, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, //  _rgb, floa
0x74, 0x20, 0x5f, 0x6e, 0x75, 0x6d, 0x43, 0x6f, 0x6c, 0x6f, 0x72, // t _numColor
0x73, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, // s).{.return
0x20, 0x66, 0x6c, 0x6f, 0x6f, 0x72, 0x28, 0x5f, 0x72, 0x67, 0x62, //  floor(_rgb
0x2a, 0x5f, 0x6e, 0x75, 0x6d, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x73, // *_numColors
0x29, 0x20, 0x2f, 0x20, 0x5f, 0x6e, 0x75, 0x6d, 0x43, 0x6f, 0x6c, // ) / _numCol
0x6f, 0x72, 0x73, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x34, // ors;.}.vec4
0x20, 0x70, 0x6f, 0x73, 0x74, 0x65, 0x72, 0x69, 0x7a, 0x65, 0x28, //  posterize(
0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x72, 0x67, 0x62, 0x61, 0x2c, // vec4 _rgba,
0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x6e, 0x75, 0x6d, //  float _num
0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x73, 0x29, 0x0a, 0x7b, 0x0a, 0x72, // Colors).{.r
0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x34, 0x28, // eturn vec4(
0x70, 0x6f, 0x73, 0x74, 0x65, 0x72, 0x69, 0x7a, 0x65, 0x28, 0x5f, // posterize(_
0x72, 0x67, 0x62, 0x61, 0x2e, 0x78, 0x79, 0x7a, 0x2c, 0x20, 0x5f, // rgba.xyz, _
0x6e, 0x75, 0x6d, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x73, 0x29, 0x2c, // numColors),
0x20, 0x5f, 0x72, 0x67, 0x62, 0x61, 0x2e, 0x77, 0x29, 0x3b, 0x0a, //  _rgba.w);.
0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x73, 0x65, 0x70, 0x69, // }.vec3 sepi
0x61, 0x28, 0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, 0x72, 0x67, 0x62, // a(vec3 _rgb
0x29, 0x0a, 0x7b, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x63, 0x6f, // ).{.vec3 co
0x6c, 0x6f, 0x72, 0x3b, 0x0a, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2e, // lor;.color.
0x78, 0x20, 0x3d, 0x20, 0x64, 0x6f, 0x74, 0x28, 0x5f, 0x72, 0x67, // x = dot(_rg
0x62, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, 0x28, 0x30, 0x2e, 0x33, // b, vec3(0.3
0x39, 0x33, 0x2c, 0x20, 0x30, 0x2e, 0x37, 0x36, 0x39, 0x2c, 0x20, // 93, 0.769,
0x30, 0x2e, 0x31, 0x38, 0x39, 0x29, 0x20, 0x29, 0x3b, 0x0a, 0x63, // 0.189) );.c
0x6f, 0x6c, 0x6f, 0x72, 0x2e, 0x79, 0x20, 0x3d, 0x20, 0x64, 0x6f, // olor.y = do
0x74, 0x28, 0x5f, 0x72, 0x67, 0x62, 0x2c, 0x20, 0x76, 0x65, 0x63, // t(_rgb, vec
0x33, 0x28, 0x30, 0x2e, 0x33, 0x34, 0x39, 0x2c, 0x20, 0x30, 0x2e, // 3(0.349, 0.
0x36, 0x38, 0x36, 0x2c, 0x20, 0x30, 0x2e, 0x31, 0x36, 0x38, 0x29, // 686, 0.168)
0x20, 0x29, 0x3b, 0x0a, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2e, 0x7a, //  );.color.z
0x20, 0x3d, 0x20, 0x64, 0x6f, 0x74, 0x28, 0x5f, 0x72, 0x67, 0x62, //  = dot(_rgb
0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, 0x28, 0x30, 0x2e, 0x32, 0x37, // , vec3(0.27
0x32, 0x2c, 0x20, 0x30, 0x2e, 0x35, 0x33, 0x34, 0x2c, 0x20, 0x30, // 2, 0.534, 0
0x2e, 0x31, 0x33, 0x31, 0x29, 0x20, 0x29, 0x3b, 0x0a, 0x72, 0x65, // .131) );.re
0x74, 0x75, 0x72, 0x6e, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x3b, // turn color;
0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x73, 0x65, 0x70, // .}.vec4 sep
0x69, 0x61, 0x28, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x72, 0x67, // ia(vec4 _rg
0x62, 0x61, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, // ba).{.retur
0x6e, 0x20, 0x76, 0x65, 0x63, 0x34, 0x28, 0x73, 0x65, 0x70, 0x69, // n vec4(sepi
0x61, 0x28, 0x5f, 0x72, 0x67, 0x62, 0x61, 0x2e, 0x78, 0x79, 0x7a, // a(_rgba.xyz
0x29, 0x2c, 0x20, 0x5f, 0x72, 0x67, 0x62, 0x61, 0x2e, 0x77, 0x29, // ), _rgba.w)
0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x62, 0x6c, // ;.}.vec3 bl
0x65, 0x6e, 0x64, 0x4f, 0x76, 0x65, 0x72, 0x6c, 0x61, 0x79, 0x28, // endOverlay(
0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, 0x62, 0x61, 0x73, 0x65, 0x2c, // vec3 _base,
0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, 0x62, 0x6c, 0x65, 0x6e, //  vec3 _blen
0x64, 0x29, 0x0a, 0x7b, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x6c, // d).{.vec3 l
0x74, 0x20, 0x3d, 0x20, 0x32, 0x2e, 0x30, 0x20, 0x2a, 0x20, 0x5f, // t = 2.0 * _
0x62, 0x61, 0x73, 0x65, 0x20, 0x2a, 0x20, 0x5f, 0x62, 0x6c, 0x65, // base * _ble
0x6e, 0x64, 0x3b, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x67, 0x74, // nd;.vec3 gt
0x65, 0x20, 0x3d, 0x20, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x32, // e = 1.0 - 2
0x2e, 0x30, 0x20, 0x2a, 0x20, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, // .0 * (1.0 -
0x20, 0x5f, 0x62, 0x61, 0x73, 0x65, 0x29, 0x20, 0x2a, 0x20, 0x28, //  _base) * (
0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x5f, 0x62, 0x6c, 0x65, 0x6e, // 1.0 - _blen
0x64, 0x29, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, // d);.return
0x6d, 0x69, 0x78, 0x28, 0x6c, 0x74, 0x2c, 0x20, 0x67, 0x74, 0x65, // mix(lt, gte
0x2c, 0x20, 0x73, 0x74, 0x65, 0x70, 0x28, 0x76, 0x65, 0x63, 0x33, // , step(vec3
0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, 0x28, 0x30, 0x2e, 0x35, 0x29, // _splat(0.5)
0x2c, 0x20, 0x5f, 0x62, 0x61, 0x73, 0x65, 0x29, 0x20, 0x29, 0x3b, // , _base) );
0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x62, 0x6c, 0x65, // .}.vec4 ble
0x6e, 0x64, 0x4f, 0x76, 0x65, 0x72, 0x6c, 0x61, 0x79, 0x28, 0x76, // ndOverlay(v
0x65, 0x63, 0x34, 0x20, 0x5f, 0x62, 0x61, 0x73, 0x65, 0x2c, 0x20, // ec4 _base,
0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x62, 0x6c, 0x65, 0x6e, 0x64, // vec4 _blend
0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, // ).{.return
0x76, 0x65, 0x63, 0x34, 0x28, 0x62, 0x6c, 0x65, 0x6e, 0x64, 0x4f, // vec4(blendO
0x76, 0x65, 0x72, 0x6c, 0x61, 0x79, 0x28, 0x5f, 0x62, 0x61, 0x73, // verlay(_bas
0x65, 0x2e, 0x78, 0x79, 0x7a, 0x2c, 0x20, 0x5f, 0x62, 0x6c, 0x65, // e.xyz, _ble
0x6e, 0x64, 0x2e, 0x78, 0x79, 0x7a, 0x29, 0x2c, 0x20, 0x5f, 0x62, // nd.xyz), _b
0x61, 0x73, 0x65, 0x2e, 0x77, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, // ase.w);.}.v
0x65, 0x63, 0x33, 0x20, 0x61, 0x64, 0x6a, 0x75, 0x73, 0x74, 0x48, // ec3 adjustH
0x75, 0x65, 0x28, 0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, 0x72, 0x67, // ue(vec3 _rg
0x62, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x68, // b, float _h
0x75, 0x65, 0x29, 0x0a, 0x7b, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, // ue).{.vec3
0x79, 0x69, 0x71, 0x20, 0x3d, 0x20, 0x63, 0x6f, 0x6e, 0x76, 0x65, // yiq = conve
0x72, 0x74, 0x52, 0x47, 0x42, 0x32, 0x59, 0x49, 0x51, 0x28, 0x5f, // rtRGB2YIQ(_
0x72, 0x67, 0x62, 0x29, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, // rgb);.float
0x20, 0x61, 0x6e, 0x67, 0x6c, 0x65, 0x20, 0x3d, 0x20, 0x5f, 0x68, //  angle = _h
0x75, 0x65, 0x20, 0x2b, 0x20, 0x61, 0x74, 0x61, 0x6e, 0x28, 0x79, // ue + atan(y
0x69, 0x71, 0x2e, 0x7a, 0x2c, 0x20, 0x79, 0x69, 0x71, 0x2e, 0x79, // iq.z, yiq.y
0x29, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x6c, 0x65, // );.float le
0x6e, 0x20, 0x3d, 0x20, 0x6c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x28, // n = length(
0x79, 0x69, 0x71, 0x2e, 0x79, 0x7a, 0x29, 0x3b, 0x0a, 0x72, 0x65, // yiq.yz);.re
0x74, 0x75, 0x72, 0x6e, 0x20, 0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72, // turn conver
0x74, 0x59, 0x49, 0x51, 0x32, 0x52, 0x47, 0x42, 0x28, 0x76, 0x65, // tYIQ2RGB(ve
0x63, 0x33, 0x28, 0x79, 0x69, 0x71, 0x2e, 0x78, 0x2c, 0x20, 0x6c, // c3(yiq.x, l
0x65, 0x6e, 0x2a, 0x63, 0x6f, 0x73, 0x28, 0x61, 0x6e, 0x67, 0x6c, // en*cos(angl
0x65, 0x29, 0x2c, 0x20, 0x6c, 0x65, 0x6e, 0x2a, 0x73, 0x69, 0x6e, // e), len*sin
0x28, 0x61, 0x6e, 0x67, 0x6c, 0x65, 0x29, 0x20, 0x29, 0x20, 0x29, // (angle) ) )
0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x70, 0x61, // ;.}.vec4 pa
0x63, 0x6b, 0x46, 0x6c, 0x6f, 0x61, 0x74, 0x54, 0x6f, 0x52, 0x67, // ckFloatToRg
0x62, 0x61, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x76, // ba(float _v
0x61, 0x6c, 0x75, 0x65, 0x29, 0x0a, 0x7b, 0x0a, 0x63, 0x6f, 0x6e, // alue).{.con
0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x73, 0x68, 0x69, // st vec4 shi
0x66, 0x74, 0x20, 0x3d, 0x20, 0x76, 0x65, 0x63, 0x34, 0x28, 0x32, // ft = vec4(2
0x35, 0x36, 0x20, 0x2a, 0x20, 0x32, 0x35, 0x36, 0x20, 0x2a, 0x20, // 56 * 256 *
0x32, 0x35, 0x36, 0x2c, 0x20, 0x32, 0x35, 0x36, 0x20, 0x2a, 0x20, // 256, 256 *
0x32, 0x35, 0x36, 0x2c, 0x20, 0x32, 0x35, 0x36, 0x2c, 0x20, 0x31, // 256, 256, 1
0x2e, 0x30, 0x29, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, // .0);.const
0x76, 0x65, 0x63, 0x34, 0x20, 0x6d, 0x61, 0x73, 0x6b, 0x20, 0x3d, // vec4 mask =
0x20, 0x76, 0x65, 0x63, 0x34, 0x28, 0x30, 0x2c, 0x20, 0x31, 0x2e, //  vec4(0, 1.
0x30, 0x20, 0x2f, 0x20, 0x32, 0x35, 0x36, 0x2e, 0x30, 0x2c, 0x20, // 0 / 256.0,
0x31, 0x2e, 0x30, 0x20, 0x2f, 0x20, 0x32, 0x35, 0x36, 0x2e, 0x30, // 1.0 / 256.0
0x2c, 0x20, 0x31, 0x2e, 0x30, 0x20, 0x2f, 0x20, 0x32, 0x35, 0x36, // , 1.0 / 256
0x2e, 0x30, 0x29, 0x3b, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, // .0);.vec4 c
0x6f, 0x6d, 0x70, 0x20, 0x3d, 0x20, 0x66, 0x72, 0x61, 0x63, 0x74, // omp = fract
0x28, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x20, 0x2a, 0x20, 0x73, // (_value * s
0x68, 0x69, 0x66, 0x74, 0x29, 0x3b, 0x0a, 0x63, 0x6f, 0x6d, 0x70, // hift);.comp
0x20, 0x2d, 0x3d, 0x20, 0x63, 0x6f, 0x6d, 0x70, 0x2e, 0x78, 0x78, //  -= comp.xx
0x79, 0x7a, 0x20, 0x2a, 0x20, 0x6d, 0x61, 0x73, 0x6b, 0x3b, 0x0a, // yz * mask;.
0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x63, 0x6f, 0x6d, 0x70, // return comp
0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x75, // ;.}.float u
0x6e, 0x70, 0x61, 0x63, 0x6b, 0x52, 0x67, 0x62, 0x61, 0x54, 0x6f, // npackRgbaTo
0x46, 0x6c, 0x6f, 0x61, 0x74, 0x28, 0x76, 0x65, 0x63, 0x34, 0x20, // Float(vec4
0x5f, 0x72, 0x67, 0x62, 0x61, 0x29, 0x0a, 0x7b, 0x0a, 0x63, 0x6f, // _rgba).{.co
0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x73, 0x68, // nst vec4 sh
0x69, 0x66, 0x74, 0x20, 0x3d, 0x20, 0x76, 0x65, 0x63, 0x34, 0x28, // ift = vec4(
0x31, 0x2e, 0x30, 0x20, 0x2f, 0x20, 0x28, 0x32, 0x35, 0x36, 0x2e, // 1.0 / (256.
0x30, 0x20, 0x2a, 0x20, 0x32, 0x35, 0x36, 0x2e, 0x30, 0x20, 0x2a, // 0 * 256.0 *
0x20, 0x32, 0x35, 0x36, 0x2e, 0x30, 0x29, 0x2c, 0x20, 0x31, 0x2e, //  256.0), 1.
0x30, 0x20, 0x2f, 0x20, 0x28, 0x32, 0x35, 0x36, 0x2e, 0x30, 0x20, // 0 / (256.0
0x2a, 0x20, 0x32, 0x35, 0x36, 0x2e, 0x30, 0x29, 0x2c, 0x20, 0x31, // * 256.0), 1
0x2e, 0x30, 0x20, 0x2f, 0x20, 0x32, 0x35, 0x36, 0x2e, 0x30, 0x2c, // .0 / 256.0,
0x20, 0x31, 0x2e, 0x30, 0x29, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, //  1.0);.retu
0x72, 0x6e, 0x20, 0x64, 0x6f, 0x74, 0x28, 0x5f, 0x72, 0x67, 0x62, // rn dot(_rgb
0x61, 0x2c, 0x20, 0x73, 0x68, 0x69, 0x66, 0x74, 0x29, 0x3b, 0x0a, // a, shift);.
0x7d, 0x0a, 0x76, 0x65, 0x63, 0x32, 0x20, 0x70, 0x61, 0x63, 0x6b, // }.vec2 pack
0x48, 0x61, 0x6c, 0x66, 0x46, 0x6c, 0x6f, 0x61, 0x74, 0x28, 0x66, // HalfFloat(f
0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, // loat _value
0x29, 0x0a, 0x7b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, // ).{.const v
0x65, 0x63, 0x32, 0x20, 0x73, 0x68, 0x69, 0x66, 0x74, 0x20, 0x3d, // ec2 shift =
0x20, 0x76, 0x65, 0x63, 0x32, 0x28, 0x32, 0x35, 0x36, 0x2c, 0x20, //  vec2(256,
0x31, 0x2e, 0x30, 0x29, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, // 1.0);.const
0x20, 0x76, 0x65, 0x63, 0x32, 0x20, 0x6d, 0x61, 0x73, 0x6b, 0x20, //  vec2 mask
0x3d, 0x20, 0x76, 0x65, 0x63, 0x32, 0x28, 0x30, 0x2c, 0x20, 0x31, // = vec2(0, 1
0x2e, 0x30, 0x20, 0x2f, 0x20, 0x32, 0x35, 0x36, 0x2e, 0x30, 0x29, // .0 / 256.0)
0x3b, 0x0a, 0x76, 0x65, 0x63, 0x32, 0x20, 0x63, 0x6f, 0x6d, 0x70, // ;.vec2 comp
0x20, 0x3d, 0x20, 0x66, 0x72, 0x61, 0x63, 0x74, 0x28, 0x5f, 0x76, //  = fract(_v
0x61, 0x6c, 0x75, 0x65, 0x20, 0x2a, 0x20, 0x73, 0x68, 0x69, 0x66, // alue * shif
0x74, 0x29, 0x3b, 0x0a, 0x63, 0x6f, 0x6d, 0x70, 0x20, 0x2d, 0x3d, // t);.comp -=
0x20, 0x63, 0x6f, 0x6d, 0x70, 0x2e, 0x78, 0x78, 0x20, 0x2a, 0x20, //  comp.xx *
0x6d, 0x61, 0x73, 0x6b, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, // mask;.retur
0x6e, 0x20, 0x63, 0x6f, 0x6d, 0x70, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, // n comp;.}.f
0x6c, 0x6f, 0x61, 0x74, 0x20, 0x75, 0x6e, 0x70, 0x61, 0x63, 0x6b, // loat unpack
0x48, 0x61, 0x6c, 0x66, 0x46, 0x6c, 0x6f, 0x61, 0x74, 0x28, 0x76, // HalfFloat(v
0x65, 0x63, 0x32, 0x20, 0x5f, 0x72, 0x67, 0x29, 0x0a, 0x7b, 0x0a, // ec2 _rg).{.
0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x32, 0x20, // const vec2
0x73, 0x68, 0x69, 0x66, 0x74, 0x20, 0x3d, 0x20, 0x76, 0x65, 0x63, // shift = vec
0x32, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2f, 0x20, 0x32, 0x35, 0x36, // 2(1.0 / 256
0x2e, 0x30, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x3b, 0x0a, 0x72, // .0, 1.0);.r
0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x64, 0x6f, 0x74, 0x28, 0x5f, // eturn dot(_
0x72, 0x67, 0x2c, 0x20, 0x73, 0x68, 0x69, 0x66, 0x74, 0x29, 0x3b, // rg, shift);
0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x72, 0x61, // .}.float ra
0x6e, 0x64, 0x6f, 0x6d, 0x28, 0x76, 0x65, 0x63, 0x32, 0x20, 0x5f, // ndom(vec2 _
0x75, 0x76, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, // uv).{.retur
0x6e, 0x20, 0x66, 0x72, 0x61, 0x63, 0x74, 0x28, 0x73, 0x69, 0x6e, // n fract(sin
0x28, 0x64, 0x6f, 0x74, 0x28, 0x5f, 0x75, 0x76, 0x2e, 0x78, 0x79, // (dot(_uv.xy
0x2c, 0x20, 0x76, 0x65, 0x63, 0x32, 0x28, 0x31, 0x32, 0x2e, 0x39, // , vec2(12.9
0x38, 0x39, 0x38, 0x2c, 0x20, 0x37, 0x38, 0x2e, 0x32, 0x33, 0x33, // 898, 78.233
0x29, 0x20, 0x29, 0x20, 0x29, 0x20, 0x2a, 0x20, 0x34, 0x33, 0x37, // ) ) ) * 437
0x35, 0x38, 0x2e, 0x35, 0x34, 0x35, 0x33, 0x29, 0x3b, 0x0a, 0x7d, // 58.5453);.}
0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x66, 0x69, 0x78, 0x43, 0x75, // .vec3 fixCu
0x62, 0x65, 0x4c, 0x6f, 0x6f, 0x6b, 0x75, 0x70, 0x28, 0x76, 0x65, // beLookup(ve
0x63, 0x33, 0x20, 0x5f, 0x76, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, // c3 _v, floa
0x74, 0x20, 0x5f, 0x6c, 0x6f, 0x64, 0x2c, 0x20, 0x66, 0x6c, 0x6f, // t _lod, flo
0x61, 0x74, 0x20, 0x5f, 0x74, 0x6f, 0x70, 0x4c, 0x65, 0x76, 0x65, // at _topLeve
0x6c, 0x43, 0x75, 0x62, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x29, 0x0a, // lCubeSize).
0x7b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x61, 0x78, 0x20, // {.float ax
0x3d, 0x20, 0x61, 0x62, 0x73, 0x28, 0x5f, 0x76, 0x2e, 0x78, 0x29, // = abs(_v.x)
0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x61, 0x79, 0x20, // ;.float ay
0x3d, 0x20, 0x61, 0x62, 0x73, 0x28, 0x5f, 0x76, 0x2e, 0x79, 0x29, // = abs(_v.y)
0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x61, 0x7a, 0x20, // ;.float az
0x3d, 0x20, 0x61, 0x62, 0x73, 0x28, 0x5f, 0x76, 0x2e, 0x7a, 0x29, // = abs(_v.z)
0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x76, 0x6d, 0x61, // ;.float vma
0x78, 0x20, 0x3d, 0x20, 0x6d, 0x61, 0x78, 0x28, 0x6d, 0x61, 0x78, // x = max(max
0x28, 0x61, 0x78, 0x2c, 0x20, 0x61, 0x79, 0x29, 0x2c, 0x20, 0x61, // (ax, ay), a
0x7a, 0x29, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x73, // z);.float s
0x63, 0x61, 0x6c, 0x65, 0x20, 0x3d, 0x20, 0x31, 0x2e, 0x30, 0x20, // cale = 1.0
0x2d, 0x20, 0x65, 0x78, 0x70, 0x32, 0x28, 0x5f, 0x6c, 0x6f, 0x64, // - exp2(_lod
0x29, 0x20, 0x2f, 0x20, 0x5f, 0x74, 0x6f, 0x70, 0x4c, 0x65, 0x76, // ) / _topLev
0x65, 0x6c, 0x43, 0x75, 0x62, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x3b, // elCubeSize;
0x0a, 0x69, 0x66, 0x20, 0x28, 0x61, 0x78, 0x20, 0x21, 0x3d, 0x20, // .if (ax !=
0x76, 0x6d, 0x61, 0x78, 0x29, 0x20, 0x7b, 0x20, 0x5f, 0x76, 0x2e, // vmax) { _v.
0x78, 0x20, 0x2a, 0x3d, 0x20, 0x73, 0x63, 0x61, 0x6c, 0x65, 0x3b, // x *= scale;
0x20, 0x7d, 0x0a, 0x69, 0x66, 0x20, 0x28, 0x61, 0x79, 0x20, 0x21, //  }.if (ay !
0x3d, 0x20, 0x76, 0x6d, 0x61, 0x78, 0x29, 0x20, 0x7b, 0x20, 0x5f, // = vmax) { _
0x76, 0x2e, 0x79, 0x20, 0x2a, 0x3d, 0x20, 0x73, 0x63, 0x61, 0x6c, // v.y *= scal
0x65, 0x3b, 0x20, 0x7d, 0x0a, 0x69, 0x66, 0x20, 0x28, 0x61, 0x7a, // e; }.if (az
0x20, 0x21, 0x3d, 0x20, 0x76, 0x6d, 0x61, 0x78, 0x29, 0x20, 0x7b, //  != vmax) {
0x20, 0x5f, 0x76, 0x2e, 0x7a, 0x20, 0x2a, 0x3d, 0x20, 0x73, 0x63, //  _v.z *= sc
0x61, 0x6c, 0x65, 0x3b, 0x20, 0x7d, 0x0a, 0x72, 0x65, 0x74, 0x75, // ale; }.retu
0x72, 0x6e, 0x20, 0x5f, 0x76, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, // rn _v;.}.ve
0x63, 0x32, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x32, // c2 texture2
0x44, 0x42, 0x63, 0x35, 0x28, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, // DBc5(sample
0x72, 0x32, 0x44, 0x20, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, // r2D _sample
0x72, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x32, 0x20, 0x5f, 0x75, 0x76, // r, vec2 _uv
0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, // ).{.return
0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x28, 0x5f, 0x73, 0x61, // texture(_sa
0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x5f, 0x75, 0x76, 0x29, // mpler, _uv)
0x2e, 0x78, 0x79, 0x3b, 0x0a, 0x7d, 0x0a, 0x6d, 0x61, 0x74, 0x33, // .xy;.}.mat3
0x20, 0x63, 0x6f, 0x66, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x28, 0x6d, //  cofactor(m
0x61, 0x74, 0x34, 0x20, 0x5f, 0x6d, 0x29, 0x0a, 0x7b, 0x0a, 0x72, // at4 _m).{.r
0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x6d, 0x61, 0x74, 0x33, 0x28, // eturn mat3(
0x0a, 0x5f, 0x6d, 0x5b, 0x31, 0x5d, 0x5b, 0x31, 0x5d, 0x2a, 0x5f, // ._m[1][1]*_
0x6d, 0x5b, 0x32, 0x5d, 0x5b, 0x32, 0x5d, 0x2d, 0x5f, 0x6d, 0x5b, // m[2][2]-_m[
0x31, 0x5d, 0x5b, 0x32, 0x5d, 0x2a, 0x5f, 0x6d, 0x5b, 0x32, 0x5d, // 1][2]*_m[2]
0x5b, 0x31, 0x5d, 0x2c, 0x0a, 0x5f, 0x6d, 0x5b, 0x31, 0x5d, 0x5b, // [1],._m[1][
0x32, 0x5d, 0x2a, 0x5f, 0x6d, 0x5b, 0x32, 0x5d, 0x5b, 0x30, 0x5d, // 2]*_m[2][0]
0x2d, 0x5f, 0x6d, 0x5b, 0x31, 0x5d, 0x5b, 0x30, 0x5d, 0x2a, 0x5f, // -_m[1][0]*_
0x6d, 0x5b, 0x32, 0x5d, 0x5b, 0x32, 0x5d, 0x2c, 0x0a, 0x5f, 0x6d, // m[2][2],._m
0x5b, 0x31, 0x5d, 0x5b, 0x30, 0x5d, 0x2a, 0x5f, 0x6d, 0x5b, 0x32, // [1][0]*_m[2
0x5d, 0x5b, 0x31, 0x5d, 0x2d, 0x5f, 0x6d, 0x5b, 0x31, 0x5d, 0x5b, // ][1]-_m[1][
0x31, 0x5d, 0x2a, 0x5f, 0x6d, 0x5b, 0x32, 0x5d, 0x5b, 0x30, 0x5d, // 1]*_m[2][0]
0x2c, 0x0a, 0x5f, 0x6d, 0x5b, 0x30, 0x5d, 0x5b, 0x32, 0x5d, 0x2a, // ,._m[0][2]*
0x5f, 0x6d, 0x5b, 0x32, 0x5d, 0x5b, 0x31, 0x5d, 0x2d, 0x5f, 0x6d, // _m[2][1]-_m
0x5b, 0x30, 0x5d, 0x5b, 0x31, 0x5d, 0x2a, 0x5f, 0x6d, 0x5b, 0x32, // [0][1]*_m[2
0x5d, 0x5b, 0x32, 0x5d, 0x2c, 0x0a, 0x5f, 0x6d, 0x5b, 0x30, 0x5d, // ][2],._m[0]
0x5b, 0x30, 0x5d, 0x2a, 0x5f, 0x6d, 0x5b, 0x32, 0x5d, 0x5b, 0x32, // [0]*_m[2][2
0x5d, 0x2d, 0x5f, 0x6d, 0x5b, 0x30, 0x5d, 0x5b, 0x32, 0x5d, 0x2a, // ]-_m[0][2]*
0x5f, 0x6d, 0x5b, 0x32, 0x5d, 0x5b, 0x30, 0x5d, 0x2c, 0x0a, 0x5f, // _m[2][0],._
0x6d, 0x5b, 0x30, 0x5d, 0x5b, 0x31, 0x5d, 0x2a, 0x5f, 0x6d, 0x5b, // m[0][1]*_m[
0x32, 0x5d, 0x5b, 0x30, 0x5d, 0x2d, 0x5f, 0x6d, 0x5b, 0x30, 0x5d, // 2][0]-_m[0]
0x5b, 0x30, 0x5d, 0x2a, 0x5f, 0x6d, 0x5b, 0x32, 0x5d, 0x5b, 0x31, // [0]*_m[2][1
0x5d, 0x2c, 0x0a, 0x5f, 0x6d, 0x5b, 0x30, 0x5d, 0x5b, 0x31, 0x5d, // ],._m[0][1]
0x2a, 0x5f, 0x6d, 0x5b, 0x31, 0x5d, 0x5b, 0x32, 0x5d, 0x2d, 0x5f, // *_m[1][2]-_
0x6d, 0x5b, 0x30, 0x5d, 0x5b, 0x32, 0x5d, 0x2a, 0x5f, 0x6d, 0x5b, // m[0][2]*_m[
0x31, 0x5d, 0x5b, 0x31, 0x5d, 0x2c, 0x0a, 0x5f, 0x6d, 0x5b, 0x30, // 1][1],._m[0
0x5d, 0x5b, 0x32, 0x5d, 0x2a, 0x5f, 0x6d, 0x5b, 0x31, 0x5d, 0x5b, // ][2]*_m[1][
0x30, 0x5d, 0x2d, 0x5f, 0x6d, 0x5b, 0x30, 0x5d, 0x5b, 0x30, 0x5d, // 0]-_m[0][0]
0x2a, 0x5f, 0x6d, 0x5b, 0x31, 0x5d, 0x5b, 0x32, 0x5d, 0x2c, 0x0a, // *_m[1][2],.
0x5f, 0x6d, 0x5b, 0x30, 0x5d, 0x5b, 0x30, 0x5d, 0x2a, 0x5f, 0x6d, // _m[0][0]*_m
0x5b, 0x31, 0x5d, 0x5b, 0x31, 0x5d, 0x2d, 0x5f, 0x6d, 0x5b, 0x30, // [1][1]-_m[0
0x5d, 0x5b, 0x31, 0x5d, 0x2a, 0x5f, 0x6d, 0x5b, 0x31, 0x5d, 0x5b, // ][1]*_m[1][
0x30, 0x5d, 0x0a, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, // 0].);.}.flo
0x61, 0x74, 0x20, 0x74, 0x6f, 0x43, 0x6c, 0x69, 0x70, 0x53, 0x70, // at toClipSp
0x61, 0x63, 0x65, 0x44, 0x65, 0x70, 0x74, 0x68, 0x28, 0x66, 0x6c, // aceDepth(fl
0x6f, 0x61, 0x74, 0x20, 0x5f, 0x64, 0x65, 0x70, 0x74, 0x68, 0x54, // oat _depthT
0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x5a, 0x29, 0x0a, 0x7b, 0x0a, // extureZ).{.
0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x5f, 0x64, 0x65, 0x70, // return _dep
0x74, 0x68, 0x54, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x5a, 0x20, // thTextureZ
0x2a, 0x20, 0x32, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x31, 0x2e, 0x30, // * 2.0 - 1.0
0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x63, 0x6c, // ;.}.vec3 cl
0x69, 0x70, 0x54, 0x6f, 0x57, 0x6f, 0x72, 0x6c, 0x64, 0x28, 0x6d, // ipToWorld(m
0x61, 0x74, 0x34, 0x20, 0x5f, 0x69, 0x6e, 0x76, 0x56, 0x69, 0x65, // at4 _invVie
0x77, 0x50, 0x72, 0x6f, 0x6a, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, // wProj, vec3
0x20, 0x5f, 0x63, 0x6c, 0x69, 0x70, 0x50, 0x6f, 0x73, 0x29, 0x0a, //  _clipPos).
0x7b, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x77, 0x70, 0x6f, 0x73, // {.vec4 wpos
0x20, 0x3d, 0x20, 0x28, 0x20, 0x28, 0x5f, 0x69, 0x6e, 0x76, 0x56, //  = ( (_invV
0x69, 0x65, 0x77, 0x50, 0x72, 0x6f, 0x6a, 0x29, 0x20, 0x2a, 0x20, // iewProj) *
0x28, 0x76, 0x65, 0x63, 0x34, 0x28, 0x5f, 0x63, 0x6c, 0x69, 0x70, // (vec4(_clip
0x50, 0x6f, 0x73, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x20, 0x29, // Pos, 1.0) )
0x20, 0x29, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, //  );.return
0x77, 0x70, 0x6f, 0x73, 0x2e, 0x78, 0x79, 0x7a, 0x20, 0x2f, 0x20, // wpos.xyz /
0x77, 0x70, 0x6f, 0x73, 0x2e, 0x77, 0x3b, 0x0a, 0x7d, 0x0a, 0x75, // wpos.w;.}.u
0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x73, 0x61, 0x6d, 0x70, // niform samp
0x6c, 0x65, 0x72, 0x32, 0x44, 0x20, 0x73, 0x5f, 0x74, 0x65, 0x78, // ler2D s_tex
0x3b, 0x0a, 0x76, 0x6f, 0x69, 0x64, 0x20, 0x6d, 0x61, 0x69, 0x6e, // ;.void main
0x28, 0x29, 0x0a, 0x7b, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x74, // ().{.vec4 t
0x65, 0x78, 0x65, 0x6c, 0x20, 0x3d, 0x20, 0x74, 0x65, 0x78, 0x74, // exel = text
0x75, 0x72, 0x65, 0x28, 0x73, 0x5f, 0x74, 0x65, 0x78, 0x2c, 0x20, // ure(s_tex,
0x76, 0x5f, 0x74, 0x65, 0x78, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x30, // v_texcoord0
0x29, 0x3b, 0x0a, 0x67, 0x6c, 0x5f, 0x46, 0x72, 0x61, 0x67, 0x43, // );.gl_FragC
0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x3d, 0x20, 0x74, 0x65, 0x78, 0x65, // olor = texe
0x6c, 0x20, 0x2a, 0x20, 0x76, 0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, // l * v_color
0x30, 0x3b, 0x0a, 0x7d, 0x0a, 0x00,                               // 0;.}..
};
