#include "SdlKeyCodes.h"

#include "core/Assert.h"

namespace vanadium {

namespace mouse {

std::string toString(mouse::KeyCode arg) {
  switch (arg) {
    case mouse::KeyCode::Unknown:
      return "Unknown";
    case mouse::KeyCode::Left:
      return "Left";
    case mouse::KeyCode::Middle:
      return "Middle";
    case mouse::KeyCode::Right:
      return "Right";
    case mouse::KeyCode::X1:
      return "X1";
    case mouse::KeyCode::X2:
      return "X2";
  }
  VAN_ENGINE_ASSERT(false, "Unknown Mouse::KeyCode!");
  return "Unknown";
}
mouse::KeyCode fromString(const std::string &arg) {
  size_t hash = hashString(arg);

  switch (hash) {
    case "Left"_hash:
      return mouse::KeyCode::Left;
    case "Middle"_hash:
      return mouse::KeyCode::Middle;
    case "Right"_hash:
      return mouse::KeyCode::Right;
    case "X1"_hash:
      return mouse::KeyCode::X1;
    case "X2"_hash:
      return mouse::KeyCode::X2;
    default:
      return mouse::KeyCode::Unknown;
  }
}

mouse::KeyCode fromInt(int arg) {
  switch (arg) {
    case (int)mouse::KeyCode::Left:
      return mouse::KeyCode::Left;
    case (int)mouse::KeyCode::Middle:
      return mouse::KeyCode::Middle;
    case (int)mouse::KeyCode::Right:
      return mouse::KeyCode::Right;
    case (int)mouse::KeyCode::X1:
      return mouse::KeyCode::X1;
    case (int)mouse::KeyCode::X2:
      return mouse::KeyCode::X2;
    default:
      VAN_DEBUGBREAK;
      return mouse::KeyCode::Unknown;
  }
}

}  // namespace mouse

namespace keyboard {

std::string toString(KeyCode arg) {
  switch (arg) {
    case keyboard::KeyCode::Unknown:
      return "Unknown";
    case keyboard::KeyCode::A:
      return "A";
    case keyboard::KeyCode::B:
      return "B";
    case keyboard::KeyCode::C:
      return "C";
    case keyboard::KeyCode::D:
      return "D";
    case keyboard::KeyCode::E:
      return "E";
    case keyboard::KeyCode::F:
      return "F";
    case keyboard::KeyCode::G:
      return "G";
    case keyboard::KeyCode::H:
      return "H";
    case keyboard::KeyCode::I:
      return "I";
    case keyboard::KeyCode::J:
      return "J";
    case keyboard::KeyCode::K:
      return "K";
    case keyboard::KeyCode::L:
      return "L";
    case keyboard::KeyCode::M:
      return "M";
    case keyboard::KeyCode::N:
      return "N";
    case keyboard::KeyCode::O:
      return "O";
    case keyboard::KeyCode::P:
      return "P";
    case keyboard::KeyCode::Q:
      return "Q";
    case keyboard::KeyCode::R:
      return "R";
    case keyboard::KeyCode::S:
      return "S";
    case keyboard::KeyCode::T:
      return "T";
    case keyboard::KeyCode::U:
      return "U";
    case keyboard::KeyCode::V:
      return "V";
    case keyboard::KeyCode::W:
      return "W";
    case keyboard::KeyCode::X:
      return "X";
    case keyboard::KeyCode::Y:
      return "Y";
    case keyboard::KeyCode::Z:
      return "Z";
    case keyboard::KeyCode::Num_1:
      return "Num_1";
    case keyboard::KeyCode::Num_2:
      return "Num_2";
    case keyboard::KeyCode::Num_3:
      return "Num_3";
    case keyboard::KeyCode::Num_4:
      return "Num_4";
    case keyboard::KeyCode::Num_5:
      return "Num_5";
    case keyboard::KeyCode::Num_6:
      return "Num_6";
    case keyboard::KeyCode::Num_7:
      return "Num_7";
    case keyboard::KeyCode::Num_8:
      return "Num_8";
    case keyboard::KeyCode::Num_9:
      return "Num_9";
    case keyboard::KeyCode::Num_10:
      return "Num_10";
    case keyboard::KeyCode::Return:
      return "Return";
    case keyboard::KeyCode::Escape:
      return "Escape";
    case keyboard::KeyCode::Backspace:
      return "Backspace";
    case keyboard::KeyCode::Tab:
      return "Tab";
    case keyboard::KeyCode::Space:
      return "Space";
    case keyboard::KeyCode::Minus:
      return "Minus";
    case keyboard::KeyCode::Equals:
      return "Equals";
    case keyboard::KeyCode::LeftBracket:
      return "LeftBracket";
    case keyboard::KeyCode::RightBracket:
      return "RightBracket";
    case keyboard::KeyCode::Backslash:
      return "Backslash";
    case keyboard::KeyCode::Semicolon:
      return "Semicolon";
    case keyboard::KeyCode::Apostrophe:
      return "Apostrophe";
    case keyboard::KeyCode::Grave:
      return "Grave";
    case keyboard::KeyCode::Comma:
      return "Comma";
    case keyboard::KeyCode::Period:
      return "Period";
    case keyboard::KeyCode::Slash:
      return "Slash";
    case keyboard::KeyCode::Capslock:
      return "Capslock";
    case keyboard::KeyCode::F1:
      return "F1";
    case keyboard::KeyCode::F2:
      return "F2";
    case keyboard::KeyCode::F3:
      return "F3";
    case keyboard::KeyCode::F4:
      return "F4";
    case keyboard::KeyCode::F5:
      return "F5";
    case keyboard::KeyCode::F6:
      return "F6";
    case keyboard::KeyCode::F7:
      return "F7";
    case keyboard::KeyCode::F8:
      return "F8";
    case keyboard::KeyCode::F9:
      return "F9";
    case keyboard::KeyCode::F10:
      return "F10";
    case keyboard::KeyCode::F11:
      return "F11";
    case keyboard::KeyCode::F12:
      return "F12";
    case keyboard::KeyCode::PrintScreen:
      return "PrintScreen";
    case keyboard::KeyCode::ScrollLock:
      return "ScrollLock";
    case keyboard::KeyCode::Pause:
      return "Pause";
    case keyboard::KeyCode::Insert:
      return "Insert";
    case keyboard::KeyCode::Home:
      return "Home";
    case keyboard::KeyCode::PageUp:
      return "PageUp";
    case keyboard::KeyCode::Delete:
      return "Delete";
    case keyboard::KeyCode::End:
      return "End";
    case keyboard::KeyCode::PageDown:
      return "PageDown";
    case keyboard::KeyCode::Right:
      return "Right";
    case keyboard::KeyCode::Left:
      return "Left";
    case keyboard::KeyCode::Down:
      return "Down";
    case keyboard::KeyCode::Up:
      return "Up";
    case keyboard::KeyCode::NumLock:
      return "NumLock";
    case keyboard::KeyCode::KPDivide:
      return "KPDivide";
    case keyboard::KeyCode::KPMultiply:
      return "KPMultiply";
    case keyboard::KeyCode::KP_Minus:
      return "KP_Minus";
    case keyboard::KeyCode::KP_Plus:
      return "KP_Plus";
    case keyboard::KeyCode::KP_Enter:
      return "KP_Enter";
    case keyboard::KeyCode::KP_1:
      return "KP_1";
    case keyboard::KeyCode::KP_2:
      return "KP_2";
    case keyboard::KeyCode::KP_3:
      return "KP_3";
    case keyboard::KeyCode::KP_4:
      return "KP_4";
    case keyboard::KeyCode::KP_5:
      return "KP_5";
    case keyboard::KeyCode::KP_6:
      return "KP_6";
    case keyboard::KeyCode::KP_7:
      return "KP_7";
    case keyboard::KeyCode::KP_8:
      return "KP_8";
    case keyboard::KeyCode::KP_9:
      return "KP_9";
    case keyboard::KeyCode::KP_0:
      return "KP_0";
    case keyboard::KeyCode::KP_Period:
      return "KP_Period";
    case keyboard::KeyCode::KP_Equals:
      return "KP_Equals";
    case keyboard::KeyCode::F13:
      return "F13";
    case keyboard::KeyCode::F14:
      return "F14";
    case keyboard::KeyCode::F15:
      return "F15";
    case keyboard::KeyCode::F16:
      return "F16";
    case keyboard::KeyCode::F17:
      return "F17";
    case keyboard::KeyCode::F18:
      return "F18";
    case keyboard::KeyCode::F19:
      return "F19";
    case keyboard::KeyCode::F20:
      return "F20";
    case keyboard::KeyCode::F21:
      return "F21";
    case keyboard::KeyCode::F22:
      return "F22";
    case keyboard::KeyCode::F23:
      return "F23";
    case keyboard::KeyCode::F24:
      return "F24";
    case keyboard::KeyCode::Execute:
      return "Execute";
    case keyboard::KeyCode::Help:
      return "Help";
    case keyboard::KeyCode::Menu:
      return "Menu";
    case keyboard::KeyCode::Select:
      return "Select";
    case keyboard::KeyCode::Stop:
      return "Stop";
    case keyboard::KeyCode::Redo:
      return "Redo";
    case keyboard::KeyCode::Undo:
      return "Undo";
    case keyboard::KeyCode::Cut:
      return "Cut";
    case keyboard::KeyCode::Copy:
      return "Copy";
    case keyboard::KeyCode::Paste:
      return "Paste";
    case keyboard::KeyCode::Find:
      return "Find";
    case keyboard::KeyCode::Mute:
      return "Mute";
    case keyboard::KeyCode::VolumeUp:
      return "VolumeUp";
    case keyboard::KeyCode::VolumeDown:
      return "VolumeDown";
    case keyboard::KeyCode::KP_Comma:
      return "KP_Comma";
    case keyboard::KeyCode::LCtrl:
      return "LCtrl";
    case keyboard::KeyCode::LShift:
      return "LShift";
    case keyboard::KeyCode::LAlt:
      return "LAlt";
    case keyboard::KeyCode::LMeta:
      return "LMeta";
    case keyboard::KeyCode::RCtrl:
      return "RCtrl";
    case keyboard::KeyCode::RShift:
      return "RShift";
    case keyboard::KeyCode::RAlt:
      return "RAlt";
    case keyboard::KeyCode::RMeta:
      return "RMeta";
    default:
      VAN_DEBUGBREAK;
      return "Unknown";
  }
}

keyboard::KeyCode fromString(const std::string &arg) {
  size_t hash = hashString(arg);

  switch (hash) {
    case "A"_hash:
      return keyboard::KeyCode::A;
    case "B"_hash:
      return keyboard::KeyCode::B;
    case "C"_hash:
      return keyboard::KeyCode::C;
    case "D"_hash:
      return keyboard::KeyCode::D;
    case "E"_hash:
      return keyboard::KeyCode::E;
    case "F"_hash:
      return keyboard::KeyCode::F;
    case "G"_hash:
      return keyboard::KeyCode::G;
    case "H"_hash:
      return keyboard::KeyCode::H;
    case "I"_hash:
      return keyboard::KeyCode::I;
    case "J"_hash:
      return keyboard::KeyCode::J;
    case "K"_hash:
      return keyboard::KeyCode::K;
    case "L"_hash:
      return keyboard::KeyCode::L;
    case "M"_hash:
      return keyboard::KeyCode::M;
    case "N"_hash:
      return keyboard::KeyCode::N;
    case "O"_hash:
      return keyboard::KeyCode::O;
    case "P"_hash:
      return keyboard::KeyCode::P;
    case "Q"_hash:
      return keyboard::KeyCode::Q;
    case "R"_hash:
      return keyboard::KeyCode::R;
    case "S"_hash:
      return keyboard::KeyCode::S;
    case "T"_hash:
      return keyboard::KeyCode::T;
    case "U"_hash:
      return keyboard::KeyCode::U;
    case "V"_hash:
      return keyboard::KeyCode::V;
    case "W"_hash:
      return keyboard::KeyCode::W;
    case "X"_hash:
      return keyboard::KeyCode::X;
    case "Y"_hash:
      return keyboard::KeyCode::Y;
    case "Z"_hash:
      return keyboard::KeyCode::Z;
    case "Num_1"_hash:
      return keyboard::KeyCode::Num_1;
    case "Num_2"_hash:
      return keyboard::KeyCode::Num_2;
    case "Num_3"_hash:
      return keyboard::KeyCode::Num_3;
    case "Num_4"_hash:
      return keyboard::KeyCode::Num_4;
    case "Num_5"_hash:
      return keyboard::KeyCode::Num_5;
    case "Num_6"_hash:
      return keyboard::KeyCode::Num_6;
    case "Num_7"_hash:
      return keyboard::KeyCode::Num_7;
    case "Num_8"_hash:
      return keyboard::KeyCode::Num_8;
    case "Num_9"_hash:
      return keyboard::KeyCode::Num_9;
    case "Num_10"_hash:
      return keyboard::KeyCode::Num_10;
    case "Return"_hash:
      return keyboard::KeyCode::Return;
    case "Escape"_hash:
      return keyboard::KeyCode::Escape;
    case "Backspace"_hash:
      return keyboard::KeyCode::Backspace;
    case "Tab"_hash:
      return keyboard::KeyCode::Tab;
    case "Space"_hash:
      return keyboard::KeyCode::Space;
    case "Minus"_hash:
      return keyboard::KeyCode::Minus;
    case "Equals"_hash:
      return keyboard::KeyCode::Equals;
    case "LeftBracket"_hash:
      return keyboard::KeyCode::LeftBracket;
    case "RightBracket"_hash:
      return keyboard::KeyCode::RightBracket;
    case "Backslash"_hash:
      return keyboard::KeyCode::Backslash;
    case "Semicolon"_hash:
      return keyboard::KeyCode::Semicolon;
    case "Apostrophe"_hash:
      return keyboard::KeyCode::Apostrophe;
    case "Grave"_hash:
      return keyboard::KeyCode::Grave;
    case "Comma"_hash:
      return keyboard::KeyCode::Comma;
    case "Period"_hash:
      return keyboard::KeyCode::Period;
    case "Slash"_hash:
      return keyboard::KeyCode::Slash;
    case "Capslock"_hash:
      return keyboard::KeyCode::Capslock;
    case "F1"_hash:
      return keyboard::KeyCode::F1;
    case "F2"_hash:
      return keyboard::KeyCode::F2;
    case "F3"_hash:
      return keyboard::KeyCode::F3;
    case "F4"_hash:
      return keyboard::KeyCode::F4;
    case "F5"_hash:
      return keyboard::KeyCode::F5;
    case "F6"_hash:
      return keyboard::KeyCode::F6;
    case "F7"_hash:
      return keyboard::KeyCode::F7;
    case "F8"_hash:
      return keyboard::KeyCode::F8;
    case "F9"_hash:
      return keyboard::KeyCode::F9;
    case "F10"_hash:
      return keyboard::KeyCode::F10;
    case "F11"_hash:
      return keyboard::KeyCode::F11;
    case "F12"_hash:
      return keyboard::KeyCode::F12;
    case "PrintScreen"_hash:
      return keyboard::KeyCode::PrintScreen;
    case "ScrollLock"_hash:
      return keyboard::KeyCode::ScrollLock;
    case "Pause"_hash:
      return keyboard::KeyCode::Pause;
    case "Insert"_hash:
      return keyboard::KeyCode::Insert;
    case "Home"_hash:
      return keyboard::KeyCode::Home;
    case "PageUp"_hash:
      return keyboard::KeyCode::PageUp;
    case "Delete"_hash:
      return keyboard::KeyCode::Delete;
    case "End"_hash:
      return keyboard::KeyCode::End;
    case "PageDown"_hash:
      return keyboard::KeyCode::PageDown;
    case "Right"_hash:
      return keyboard::KeyCode::Right;
    case "Left"_hash:
      return keyboard::KeyCode::Left;
    case "Down"_hash:
      return keyboard::KeyCode::Down;
    case "Up"_hash:
      return keyboard::KeyCode::Up;
    case "NumLock"_hash:
      return keyboard::KeyCode::NumLock;
    case "KPDivide"_hash:
      return keyboard::KeyCode::KPDivide;
    case "KPMultiply"_hash:
      return keyboard::KeyCode::KPMultiply;
    case "KP_Minus"_hash:
      return keyboard::KeyCode::KP_Minus;
    case "KP_Plus"_hash:
      return keyboard::KeyCode::KP_Plus;
    case "KP_Enter"_hash:
      return keyboard::KeyCode::KP_Enter;
    case "KP_1"_hash:
      return keyboard::KeyCode::KP_1;
    case "KP_2"_hash:
      return keyboard::KeyCode::KP_2;
    case "KP_3"_hash:
      return keyboard::KeyCode::KP_3;
    case "KP_4"_hash:
      return keyboard::KeyCode::KP_4;
    case "KP_5"_hash:
      return keyboard::KeyCode::KP_5;
    case "KP_6"_hash:
      return keyboard::KeyCode::KP_6;
    case "KP_7"_hash:
      return keyboard::KeyCode::KP_7;
    case "KP_8"_hash:
      return keyboard::KeyCode::KP_8;
    case "KP_9"_hash:
      return keyboard::KeyCode::KP_9;
    case "KP_0"_hash:
      return keyboard::KeyCode::KP_0;
    case "KP_Period"_hash:
      return keyboard::KeyCode::KP_Period;
    case "KP_Equals"_hash:
      return keyboard::KeyCode::KP_Equals;
    case "F13"_hash:
      return keyboard::KeyCode::F13;
    case "F14"_hash:
      return keyboard::KeyCode::F14;
    case "F15"_hash:
      return keyboard::KeyCode::F15;
    case "F16"_hash:
      return keyboard::KeyCode::F16;
    case "F17"_hash:
      return keyboard::KeyCode::F17;
    case "F18"_hash:
      return keyboard::KeyCode::F18;
    case "F19"_hash:
      return keyboard::KeyCode::F19;
    case "F20"_hash:
      return keyboard::KeyCode::F20;
    case "F21"_hash:
      return keyboard::KeyCode::F21;
    case "F22"_hash:
      return keyboard::KeyCode::F22;
    case "F23"_hash:
      return keyboard::KeyCode::F23;
    case "F24"_hash:
      return keyboard::KeyCode::F24;
    case "Execute"_hash:
      return keyboard::KeyCode::Execute;
    case "Help"_hash:
      return keyboard::KeyCode::Help;
    case "Menu"_hash:
      return keyboard::KeyCode::Menu;
    case "Select"_hash:
      return keyboard::KeyCode::Select;
    case "Stop"_hash:
      return keyboard::KeyCode::Stop;
    case "Redo"_hash:
      return keyboard::KeyCode::Redo;
    case "Undo"_hash:
      return keyboard::KeyCode::Undo;
    case "Cut"_hash:
      return keyboard::KeyCode::Cut;
    case "Copy"_hash:
      return keyboard::KeyCode::Copy;
    case "Paste"_hash:
      return keyboard::KeyCode::Paste;
    case "Find"_hash:
      return keyboard::KeyCode::Find;
    case "Mute"_hash:
      return keyboard::KeyCode::Mute;
    case "VolumeUp"_hash:
      return keyboard::KeyCode::VolumeUp;
    case "VolumeDown"_hash:
      return keyboard::KeyCode::VolumeDown;
    case "KP_Comma"_hash:
      return keyboard::KeyCode::KP_Comma;
    case "LCtrl"_hash:
      return keyboard::KeyCode::LCtrl;
    case "LShift"_hash:
      return keyboard::KeyCode::LShift;
    case "LAlt"_hash:
      return keyboard::KeyCode::LAlt;
    case "LMeta"_hash:
      return keyboard::KeyCode::LMeta;
    case "RCtrl"_hash:
      return keyboard::KeyCode::RCtrl;
    case "RShift"_hash:
      return keyboard::KeyCode::RShift;
    case "RAlt"_hash:
      return keyboard::KeyCode::RAlt;
    case "RMeta"_hash:
      return keyboard::KeyCode::RMeta;
    default:
      VAN_DEBUGBREAK;
      return keyboard::KeyCode::Unknown;
  }
}

keyboard::KeyCode fromInt(int arg) {
  switch (arg) {
    case (int)keyboard::KeyCode::A:
      return keyboard::KeyCode::A;
    case (int)keyboard::KeyCode::B:
      return keyboard::KeyCode::B;
    case (int)keyboard::KeyCode::C:
      return keyboard::KeyCode::C;
    case (int)keyboard::KeyCode::D:
      return keyboard::KeyCode::D;
    case (int)keyboard::KeyCode::E:
      return keyboard::KeyCode::E;
    case (int)keyboard::KeyCode::F:
      return keyboard::KeyCode::F;
    case (int)keyboard::KeyCode::G:
      return keyboard::KeyCode::G;
    case (int)keyboard::KeyCode::H:
      return keyboard::KeyCode::H;
    case (int)keyboard::KeyCode::I:
      return keyboard::KeyCode::I;
    case (int)keyboard::KeyCode::J:
      return keyboard::KeyCode::J;
    case (int)keyboard::KeyCode::K:
      return keyboard::KeyCode::K;
    case (int)keyboard::KeyCode::L:
      return keyboard::KeyCode::L;
    case (int)keyboard::KeyCode::M:
      return keyboard::KeyCode::M;
    case (int)keyboard::KeyCode::N:
      return keyboard::KeyCode::N;
    case (int)keyboard::KeyCode::O:
      return keyboard::KeyCode::O;
    case (int)keyboard::KeyCode::P:
      return keyboard::KeyCode::P;
    case (int)keyboard::KeyCode::Q:
      return keyboard::KeyCode::Q;
    case (int)keyboard::KeyCode::R:
      return keyboard::KeyCode::R;
    case (int)keyboard::KeyCode::S:
      return keyboard::KeyCode::S;
    case (int)keyboard::KeyCode::T:
      return keyboard::KeyCode::T;
    case (int)keyboard::KeyCode::U:
      return keyboard::KeyCode::U;
    case (int)keyboard::KeyCode::V:
      return keyboard::KeyCode::V;
    case (int)keyboard::KeyCode::W:
      return keyboard::KeyCode::W;
    case (int)keyboard::KeyCode::X:
      return keyboard::KeyCode::X;
    case (int)keyboard::KeyCode::Y:
      return keyboard::KeyCode::Y;
    case (int)keyboard::KeyCode::Z:
      return keyboard::KeyCode::Z;
    case (int)keyboard::KeyCode::Num_1:
      return keyboard::KeyCode::Num_1;
    case (int)keyboard::KeyCode::Num_2:
      return keyboard::KeyCode::Num_2;
    case (int)keyboard::KeyCode::Num_3:
      return keyboard::KeyCode::Num_3;
    case (int)keyboard::KeyCode::Num_4:
      return keyboard::KeyCode::Num_4;
    case (int)keyboard::KeyCode::Num_5:
      return keyboard::KeyCode::Num_5;
    case (int)keyboard::KeyCode::Num_6:
      return keyboard::KeyCode::Num_6;
    case (int)keyboard::KeyCode::Num_7:
      return keyboard::KeyCode::Num_7;
    case (int)keyboard::KeyCode::Num_8:
      return keyboard::KeyCode::Num_8;
    case (int)keyboard::KeyCode::Num_9:
      return keyboard::KeyCode::Num_9;
    case (int)keyboard::KeyCode::Num_10:
      return keyboard::KeyCode::Num_10;
    case (int)keyboard::KeyCode::Return:
      return keyboard::KeyCode::Return;
    case (int)keyboard::KeyCode::Escape:
      return keyboard::KeyCode::Escape;
    case (int)keyboard::KeyCode::Backspace:
      return keyboard::KeyCode::Backspace;
    case (int)keyboard::KeyCode::Tab:
      return keyboard::KeyCode::Tab;
    case (int)keyboard::KeyCode::Space:
      return keyboard::KeyCode::Space;
    case (int)keyboard::KeyCode::Minus:
      return keyboard::KeyCode::Minus;
    case (int)keyboard::KeyCode::Equals:
      return keyboard::KeyCode::Equals;
    case (int)keyboard::KeyCode::LeftBracket:
      return keyboard::KeyCode::LeftBracket;
    case (int)keyboard::KeyCode::RightBracket:
      return keyboard::KeyCode::RightBracket;
    case (int)keyboard::KeyCode::Backslash:
      return keyboard::KeyCode::Backslash;
    case (int)keyboard::KeyCode::Semicolon:
      return keyboard::KeyCode::Semicolon;
    case (int)keyboard::KeyCode::Apostrophe:
      return keyboard::KeyCode::Apostrophe;
    case (int)keyboard::KeyCode::Grave:
      return keyboard::KeyCode::Grave;
    case (int)keyboard::KeyCode::Comma:
      return keyboard::KeyCode::Comma;
    case (int)keyboard::KeyCode::Period:
      return keyboard::KeyCode::Period;
    case (int)keyboard::KeyCode::Slash:
      return keyboard::KeyCode::Slash;
    case (int)keyboard::KeyCode::Capslock:
      return keyboard::KeyCode::Capslock;
    case (int)keyboard::KeyCode::F1:
      return keyboard::KeyCode::F1;
    case (int)keyboard::KeyCode::F2:
      return keyboard::KeyCode::F2;
    case (int)keyboard::KeyCode::F3:
      return keyboard::KeyCode::F3;
    case (int)keyboard::KeyCode::F4:
      return keyboard::KeyCode::F4;
    case (int)keyboard::KeyCode::F5:
      return keyboard::KeyCode::F5;
    case (int)keyboard::KeyCode::F6:
      return keyboard::KeyCode::F6;
    case (int)keyboard::KeyCode::F7:
      return keyboard::KeyCode::F7;
    case (int)keyboard::KeyCode::F8:
      return keyboard::KeyCode::F8;
    case (int)keyboard::KeyCode::F9:
      return keyboard::KeyCode::F9;
    case (int)keyboard::KeyCode::F10:
      return keyboard::KeyCode::F10;
    case (int)keyboard::KeyCode::F11:
      return keyboard::KeyCode::F11;
    case (int)keyboard::KeyCode::F12:
      return keyboard::KeyCode::F12;
    case (int)keyboard::KeyCode::PrintScreen:
      return keyboard::KeyCode::PrintScreen;
    case (int)keyboard::KeyCode::ScrollLock:
      return keyboard::KeyCode::ScrollLock;
    case (int)keyboard::KeyCode::Pause:
      return keyboard::KeyCode::Pause;
    case (int)keyboard::KeyCode::Insert:
      return keyboard::KeyCode::Insert;
    case (int)keyboard::KeyCode::Home:
      return keyboard::KeyCode::Home;
    case (int)keyboard::KeyCode::PageUp:
      return keyboard::KeyCode::PageUp;
    case (int)keyboard::KeyCode::Delete:
      return keyboard::KeyCode::Delete;
    case (int)keyboard::KeyCode::End:
      return keyboard::KeyCode::End;
    case (int)keyboard::KeyCode::PageDown:
      return keyboard::KeyCode::PageDown;
    case (int)keyboard::KeyCode::Right:
      return keyboard::KeyCode::Right;
    case (int)keyboard::KeyCode::Left:
      return keyboard::KeyCode::Left;
    case (int)keyboard::KeyCode::Down:
      return keyboard::KeyCode::Down;
    case (int)keyboard::KeyCode::Up:
      return keyboard::KeyCode::Up;
    case (int)keyboard::KeyCode::NumLock:
      return keyboard::KeyCode::NumLock;
    case (int)keyboard::KeyCode::KPDivide:
      return keyboard::KeyCode::KPDivide;
    case (int)keyboard::KeyCode::KPMultiply:
      return keyboard::KeyCode::KPMultiply;
    case (int)keyboard::KeyCode::KP_Minus:
      return keyboard::KeyCode::KP_Minus;
    case (int)keyboard::KeyCode::KP_Plus:
      return keyboard::KeyCode::KP_Plus;
    case (int)keyboard::KeyCode::KP_Enter:
      return keyboard::KeyCode::KP_Enter;
    case (int)keyboard::KeyCode::KP_1:
      return keyboard::KeyCode::KP_1;
    case (int)keyboard::KeyCode::KP_2:
      return keyboard::KeyCode::KP_2;
    case (int)keyboard::KeyCode::KP_3:
      return keyboard::KeyCode::KP_3;
    case (int)keyboard::KeyCode::KP_4:
      return keyboard::KeyCode::KP_4;
    case (int)keyboard::KeyCode::KP_5:
      return keyboard::KeyCode::KP_5;
    case (int)keyboard::KeyCode::KP_6:
      return keyboard::KeyCode::KP_6;
    case (int)keyboard::KeyCode::KP_7:
      return keyboard::KeyCode::KP_7;
    case (int)keyboard::KeyCode::KP_8:
      return keyboard::KeyCode::KP_8;
    case (int)keyboard::KeyCode::KP_9:
      return keyboard::KeyCode::KP_9;
    case (int)keyboard::KeyCode::KP_0:
      return keyboard::KeyCode::KP_0;
    case (int)keyboard::KeyCode::KP_Period:
      return keyboard::KeyCode::KP_Period;
    case (int)keyboard::KeyCode::KP_Equals:
      return keyboard::KeyCode::KP_Equals;
    case (int)keyboard::KeyCode::F13:
      return keyboard::KeyCode::F13;
    case (int)keyboard::KeyCode::F14:
      return keyboard::KeyCode::F14;
    case (int)keyboard::KeyCode::F15:
      return keyboard::KeyCode::F15;
    case (int)keyboard::KeyCode::F16:
      return keyboard::KeyCode::F16;
    case (int)keyboard::KeyCode::F17:
      return keyboard::KeyCode::F17;
    case (int)keyboard::KeyCode::F18:
      return keyboard::KeyCode::F18;
    case (int)keyboard::KeyCode::F19:
      return keyboard::KeyCode::F19;
    case (int)keyboard::KeyCode::F20:
      return keyboard::KeyCode::F20;
    case (int)keyboard::KeyCode::F21:
      return keyboard::KeyCode::F21;
    case (int)keyboard::KeyCode::F22:
      return keyboard::KeyCode::F22;
    case (int)keyboard::KeyCode::F23:
      return keyboard::KeyCode::F23;
    case (int)keyboard::KeyCode::F24:
      return keyboard::KeyCode::F24;
    case (int)keyboard::KeyCode::Execute:
      return keyboard::KeyCode::Execute;
    case (int)keyboard::KeyCode::Help:
      return keyboard::KeyCode::Help;
    case (int)keyboard::KeyCode::Menu:
      return keyboard::KeyCode::Menu;
    case (int)keyboard::KeyCode::Select:
      return keyboard::KeyCode::Select;
    case (int)keyboard::KeyCode::Stop:
      return keyboard::KeyCode::Stop;
    case (int)keyboard::KeyCode::Redo:
      return keyboard::KeyCode::Redo;
    case (int)keyboard::KeyCode::Undo:
      return keyboard::KeyCode::Undo;
    case (int)keyboard::KeyCode::Cut:
      return keyboard::KeyCode::Cut;
    case (int)keyboard::KeyCode::Copy:
      return keyboard::KeyCode::Copy;
    case (int)keyboard::KeyCode::Paste:
      return keyboard::KeyCode::Paste;
    case (int)keyboard::KeyCode::Find:
      return keyboard::KeyCode::Find;
    case (int)keyboard::KeyCode::Mute:
      return keyboard::KeyCode::Mute;
    case (int)keyboard::KeyCode::VolumeUp:
      return keyboard::KeyCode::VolumeUp;
    case (int)keyboard::KeyCode::VolumeDown:
      return keyboard::KeyCode::VolumeDown;
    case (int)keyboard::KeyCode::KP_Comma:
      return keyboard::KeyCode::KP_Comma;
    case (int)keyboard::KeyCode::LCtrl:
      return keyboard::KeyCode::LCtrl;
    case (int)keyboard::KeyCode::LShift:
      return keyboard::KeyCode::LShift;
    case (int)keyboard::KeyCode::LAlt:
      return keyboard::KeyCode::LAlt;
    case (int)keyboard::KeyCode::LMeta:
      return keyboard::KeyCode::LMeta;
    case (int)keyboard::KeyCode::RCtrl:
      return keyboard::KeyCode::RCtrl;
    case (int)keyboard::KeyCode::RShift:
      return keyboard::KeyCode::RShift;
    case (int)keyboard::KeyCode::RAlt:
      return keyboard::KeyCode::RAlt;
    case (int)keyboard::KeyCode::RMeta:
      return keyboard::KeyCode::RMeta;
    default:
      VAN_DEBUGBREAK;
      return keyboard::KeyCode::Unknown;
  }
}

}  // namespace keyboard

}  // namespace vanadium